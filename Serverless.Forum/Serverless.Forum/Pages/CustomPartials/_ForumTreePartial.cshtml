@model Serverless.Forum.Pages.CustomPartials._ForumTreePartialModel
@using Serverless.Forum.Contracts

<style>
    ul, #myUL {
        list-style-type: none;
    }

    #myUL {
        margin: 0;
        padding: 0;
    }

    .searchCaret {
        cursor: pointer;
        user-select: none;
        width: 100%;
        padding: 3px 3px;
    }

    .searchCaret::before {
        content: "\25B6";
        color: black;
        display: inline-block;
        margin-right: 6px;
    }

    .searchCaret-down::before {
        transform: rotate(90deg);
    }

    .nestedTreeNode {
        display: none;
    }

    .activeTreeNode {
        display: block;
    }

    .treeNode {
        padding: 3px 3px;
        display: inherit;
        width: 100%;
        cursor: default;
    }

    .selectedTreeNode {
        background-color: deepskyblue;
    }
</style>

@functions {
    async Task showTreeNode(int? cur)
    {
        //if ((cur ?? 0) == 0)
        //{
        //    return;
        //}

        var treeNodeClass = cur == Model.ForumId ? "treeNode selectedTreeNode" : "treeNode";
        var topics = Model.Forums.TopicData.Where(t => t.ForumId == cur)
                                           .OrderBy(t => t.TopicTitle, StringComparer.OrdinalIgnoreCase)
                                           .Select (t => new TopicDto
                                           {
                                               Id = t.TopicId,
                                               Title = t.TopicTitle
                                           });

        var children = Model.Forums.ForumData.Where(f => f.ParentId == cur).OrderBy(f => f.LeftId);
        var thisForum = Model.Forums.ForumData.FirstOrDefault(f => f.ForumId == cur);
        if (children.Any())
        {
            await Output.WriteAsync(
                $"<li class='{treeNodeClass}'>" +
                    $"<span id='treeNode{cur}' class='searchCaret' onclick='select(this, {cur}, {Json.Serialize(topics)});'>{thisForum?.ForumName ?? "ROOT"}</span>" +
                    $"<ul class='nestedTreeNode' id='child{cur}'>"
            );
            foreach (var child in children)
            {
                await showTreeNode(child.ForumId);
            }
            await Output.WriteAsync(
                    "</ul>" +
                "</li>"
            );
        }
        else
        {
            await Output.WriteAsync(
                $"<li id='treeNode{cur}' class='{treeNodeClass}' onclick='select(this, {cur}, {Json.Serialize(topics)});'>{thisForum?.ForumName ?? "ROOT"}</li>"
            );
        }
    }
}
@{ var style = Html.Raw(Model.ConstrainSize ? "style=\"height:400px; max-height:600px; overflow-y:scroll\"" : ""); }
<div id="treeContainer" @style>
    <ul id="myUL">
        @{await showTreeNode(0);}
    </ul>
</div>


    <script>
    var path = @Json.Serialize(Model.Path);
    var topicId = @Json.Serialize(Model.TopicId);

    function select(obj, forumId, topics) {
        var toggler = document.getElementsByClassName("selectedTreeNode");

        for (var i = 0; i < toggler.length; i++) {
            toggler[i].classList.remove("selectedTreeNode")
        }

        var parent = document.getElementById("child" + forumId);
        if (parent != null) {
            parent.classList.toggle("activeTreeNode");
        }
        obj.classList.toggle("searchCaret-down");
        obj.classList.toggle("selectedTreeNode");

        if (typeof forumSelectCallback === "function") {
            forumSelectCallback(forumId);
        }

        if (typeof topicSelectCallback === "function") {
            topicSelectCallback(topics);
        }
    }

    $(document).ready(function () {
        for (var i = 0; i < path.length; i++) {
            document.getElementById("treeNode" + path[i]).click();
        }

        var element = document.getElementById("treeNode" + path[path.length]);
        if (@Html.Raw(Model.ConstrainSize.ToString().ToLower()) && element) {
            document.getElementById('treeContainer').scrollTop = element.offsetTop;
        }

        if (typeof topicSelectInit === "function") {
            topicSelectInit(topicId);
        }
    });

    </script>
