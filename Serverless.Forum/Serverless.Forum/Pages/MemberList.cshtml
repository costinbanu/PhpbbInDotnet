@page
@model Serverless.Forum.Pages.MemberListModel

@using Serverless.Forum.Utilities
@using System.Web
 
@inject Utils _utils

@{
    ViewData["Title"] = "MemberList";
    Layout = "~/Pages/_Layout.cshtml";
    var dateFormat = (await Model.GetCurrentUserAsync()).UserDateFormat;
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
    <script src="~/js/tabbedPage.js"></script>
    <link rel="stylesheet" href="~/css/tabbedPage.css" />
</environment>

<div class="tab">
    <button class="@(Model.Mode == MemberListPages.AllUsers ? "tablinks active" : "tablinks")" onclick="openTab(event, 'AllUsers')">Toți utilizatorii</button>
    <button class="@(Model.Mode == MemberListPages.SearchUsers ? "tablinks active" : "tablinks")" onclick="openTab(event, 'SearchUsers')">Caută un utilizator</button>
    <button class="@(Model.Mode == MemberListPages.Groups ? "tablinks active" : "tablinks")" onclick="openTab(event, 'Groups')">Toate grupurile</button>
</div>

<div id="AllUsers" class="tabcontent" style="@(Model.Mode == MemberListPages.AllUsers ? "display:inherit" : "display:none")">
    <h2>Membrii forumului</h2>
    <form method="get">
        @Html.DropDownListFor(m => m.Order, _utils.EnumToDropDownList<MemberListOrder>(Model.Order, Model.GetOrderDisplayName, "Ordonează după..."), new { id = "userOrder", style="height:30px" })
        <input asp-for="Mode" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        <input type="submit" value="Trimite" style="height:32px" />
    </form>

    @await Html.PartialAsync(
        "_UserSummaryPartial",
        new CustomPartials._UserSummaryPartialModel(
            userList: Model.UserList, groupList: Model.UserGroupList, rankList: Model.UserRankList, dateFormat: dateFormat,
            paginator: Model.UserPaginator, backLink: $"MemberList?pageNum={Model.PageNum - 1}&order={Model.Order}&mode={MemberListPages.AllUsers}", forwardLink: $"MemberList?pageNum={Model.PageNum + 1}&order={Model.Order}&mode={MemberListPages.AllUsers}"
        )
    )

</div>

<div id="SearchUsers" class="tabcontent" style="@(Model.Mode == MemberListPages.SearchUsers ? "display:inherit" : "display:none")">
    @if (!(Model.SearchResults?.Any() ?? false))
    {
        <h2>Caută un utilizator</h2>
    }
    else
    {
        <h2>Rezultatele căutării</h2>
    }
    <form method="get">
        <input type="hidden" name="handler" value="search" />
        <input asp-for="Username" placeholder="Caută după nume..." style="height:30px" id="usernameUserInput" />
        @Html.DropDownListFor(m => m.Order, _utils.EnumToDropDownList<MemberListOrder>(Model.Order, Model.GetOrderDisplayName, "Ordonează după..."), new { id = "searchOrder", style = "height:30px" })
        <input asp-for="Mode" type="hidden" />
        <input asp-for="PageNum" type="hidden" id="pageNumInput" />
        <input type="hidden" value="@Model.Username" id="usernameOriginalValue" />
        <input type="submit" value="Trimite" style="height:32px" onclick="return shouldChangePageNum()" />
    </form>

    @await Html.PartialAsync(
        "_UserSummaryPartial",
        new CustomPartials._UserSummaryPartialModel(
            userList: Model.SearchResults, groupList: Model.SearchGroupList, rankList: Model.SearchRankList, dateFormat: dateFormat,
            paginator: Model.SearchPaginator, backLink: $"MemberList?pageNum={Model.PageNum - 1}&order={Model.Order}&handler=search&username={HttpUtility.UrlEncode(Model.Username)}", forwardLink: $"MemberList?pageNum={Model.PageNum + 1}&order={Model.Order}&handler=search&username={HttpUtility.UrlEncode(Model.Username)}"
        )
    )

</div>

<div id="Groups" class="tabcontent" style="@(Model.Mode == MemberListPages.Groups ? "display:inherit" : "display:none")">
    <h2>Grupurile forumului</h2>
    @{
        var isFirst = true;
        foreach (var group in Model.GroupList ?? Enumerable.Empty<Serverless.Forum.ForumDb.Entities.PhpbbGroups>())
        {
            if (!isFirst)
            {
                <hr />
            }

            <span style="font-weight: bold; color: #@group.GroupColour">
                @Html.Raw(group.GroupName)
            </span>
            <br />
            @Html.Raw(group.GroupDesc);

            isFirst = false;
        }
    }
    <p></p>
</div>

@if (!Model.Order.HasValue)
{
    <script>
        $(document).ready(function () {
            $('#userOrder').val('dummyValue');
            $('#searchOrder').val('dummyValue');
        });
    </script>
}

<script>
    function shouldChangePageNum() {
        if ($('#usernameUserInput').val().toLowerCase() != $('#usernameOriginalValue').val().toLowerCase()) {
            $('#pageNumInput').val('1');
        }
        return true;
    }
</script>