@page
@model Serverless.Forum.Pages.ViewTopicModel

@using System.Web
@using Serverless.Forum.Utilities
@using Microsoft.EntityFrameworkCore

@inject Services.UserService _userService
@inject Utils _utils
@inject ForumDb.ForumDbContext _context

@{
    ViewData["Title"] = $"{Model.ForumTitle} - {Model.TopicTitle}";
    Layout = "~/Pages/_Layout.cshtml";
    var CurrentUser = await Model.GetCurrentUserAsync();
    var IsAnonymous = CurrentUser.UserId == Constants.ANONYMOUS_USER_ID;
    var UserDateFormat = CurrentUser?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    var IsAdmin = await Model.IsCurrentUserAdminHereAsync();
    var IsMod = await Model.IsCurrentUserModeratorHereAsync();
    var EditTime = CurrentUser.PostEditTime;
}

<link rel="stylesheet" href="~/css/pagination.css" />
<link rel="stylesheet" href="~/css/posting.css" />
<script type="text/javascript" src="~/js/viewTopic.js"></script>
<script type="text/javascript" src="~/lib/Html2Canvas.js"></script>
<script type="text/javascript" src="~/lib/SaveAs.js"></script>

<script type="text/javascript">
    var vt = new ViewTopic(
        @Json.Serialize(Model.PostId ?? -1),
        @Json.Serialize(Model.Highlight ?? true),
        @Model.ScrollToModeratorPanel,
        '@ModeratorTopicActions.MoveTopic',
        '@ModeratorPostActions.MoveSelectedPosts',
        '@ModeratorPostActions.SplitSelectedPosts',
        @Constants.OTHER_REPORT_REASON_ID
    );

    $(document).ready(function () {
        window.onload = function () {
            onPostLoad();
            vt.onLoad();
        }
    });

    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>

@if (Model.ForumId != null)
{
    <span>Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@Model.ForumTitle</a></span>
}
<h2>Subiect: @Model.TopicTitle</h2>
<span class="Caption">@Model.PostCount mesaj@(Model.PostCount == 1 ? "" : "e"), @Model.ViewCount vizualiz@(Model.ViewCount == 1 ? "are" : "ări").</span>

@if (Model.Poll != null)
{
    if (Model.Poll.CanVoteNow(CurrentUser.UserId) || IsAnonymous)
    {
        <div id="votes" style="display:block">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.Poll.PollTitle))</h3>
            <div>Chestionarul @(Model.Poll.PollEnded ? "a fost" : "va fi") inchis: @(Model.Poll.PollEnd.HasValue ? Model.Poll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>
            <form method="post" asp-page-handler="vote">
                @foreach (var option in Model.Poll.PollOptions)
                {
                    var isChecked = option.PollOptionVoters.Any(v => v.UserId == CurrentUser.UserId);
                    <table style="border:none; padding:unset; margin:unset; width:100%">
                        <tr style="border-bottom:solid 1px black">
                            <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            </td>
                            <td>
                                <input type="@(Model.Poll.PollMaxOptions > 1 ? "checkbox" : "radio")" name="Votes" value="@option.PollOptionId" @(isChecked ? "checked" : "") @(IsAnonymous ? "disabled" : "") />
                            </td>
                        </tr>
                    </table>
                }
                <br />
                <input asp-for="TopicId" type="hidden" />
                <input name="queryString" type="hidden" value="@HttpUtility.UrlEncode(Request.QueryString.ToString())" />
                @if (!IsAnonymous)
                {
                    <input type="submit" value="Trimite vot" />
                }
                @Html.AntiForgeryToken()
            </form>
        </div>
    }
    if ((!Model.Poll.CanVoteNow(CurrentUser.UserId) && !IsAnonymous) || IsAdmin)
    {
        <div id="results" style="display:@(Model.Poll.CanVoteNow(CurrentUser.UserId) && IsAdmin ? "none" : "block")">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.Poll.PollTitle))</h3>
            <div>Chestionarul @(Model.Poll.PollEnded ? "a fost" : "va fi") inchis: @(Model.Poll.PollEnd.HasValue ? Model.Poll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>
            <p></p>
            <table style="border:none; padding:unset; margin:unset; width:100%">
                @foreach (var option in Model.Poll.PollOptions)
                {
                    <tr style="border-bottom:solid 1px black">
                        <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                            @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            @if (await Model.IsCurrentUserAdminHereAsync(Model.ForumId ?? 0))
                            {
                                <div class="Caption">
                                    Votanti: @Html.Raw(HttpUtility.HtmlDecode(string.Join(", ", option.PollOptionVoters.Select(v => v.Username))))
                                </div>
                            }
                        </td>
                        <td style="width:50%; padding-top: 5px; padding-bottom: 5px">
                            @{var percentage = (Model.Poll.TotalVotes == 0 ? 0 : option.PollOptionVotes * 100m / Model.Poll.TotalVotes).ToString("##0.##'%'", System.Globalization.CultureInfo.InvariantCulture);}
                            <span style="width: 100%; background: linear-gradient(to right, #87ceeb @percentage, #ffffff 0%); border: solid 1px black; display: inline-block; padding:2px">
                                @option.PollOptionVotes @(option.PollOptionVotes == 1 ? "vot" : "voturi") (@(percentage))
                            </span>
                        </td>
                    </tr>
                }
            </table>
        </div>
        @if (Model.Poll.CanVoteNow(CurrentUser.UserId) && IsAdmin)
        {
            <br />
            <input type="button" value="Arată rezultatele" onclick="vt.switchPollPanels('results', 'votes', this)" />
        }
    }
    <hr />
}

@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new CustomPartials._PaginationControlsPartialModel(
        paginator: Model.Paginator,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: false,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)
@if (Model.Paginator.Pagination.HasPages)
{
    <hr />
}
@{ var index = 0; }
@foreach (var post in Model.Posts)
{
    var rowClass = string.Empty;
    if (post.ReportId.HasValue && (IsMod || post.ReporterId == CurrentUser.UserId))
    {
        rowClass = "ReportedPost";
    }
    else
    {
        rowClass = post.Unread ? "Unread" : $"Color{index % 2}";
    }
    <div class="RowMargin @rowClass">
        <div class="FlexRow">
            @await Html.PartialAsync(
                 "_SummaryPartial",
                 new CustomPartials._SummaryPartialModel(post.AuthorId, post.AuthorName, post.AuthorColor, post.PostCreationTime, post.PostId.Value,
                     UserDateFormat, post.AuthorHasAvatar, post.AuthorRank, null, null, null, true)
             )
            <div class="ForumContent VerticalContent FlexRight" id="@post.PostId">
                <span style="display:flex">
                    <span class="PostTitle">
                        <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@post.PostId">@Html.Raw(post.PostSubject)</a>
                    </span>
                    <span style="margin-left:auto">
                        <span class="CollapsedMenu" onclick="expandCollapsedMenu('summary@(post.PostId.Value)', 'button@(post.PostId.Value)')" id="button@(post.PostId.Value)" style="color:#@post.AuthorColor;margin-left: auto; height:auto; width: min-content">
                            @Html.Raw(post.AuthorName)
                        </span>
                    </span>
                </span>
                <div style="max-width:100%">
                    <br />
                    @if (post.ReportId.HasValue && (IsMod || post.ReporterId == CurrentUser.UserId))
                    {
                        var reason = await _context.PhpbbReportsReasons.AsNoTracking().FirstOrDefaultAsync(x => x.ReasonId == post.ReportReasonId);
                        <a href="javascript:vt.showReportViewer(@post.PostId, @post.ReportId, '@reason.ReasonTitle', '@reason.ReasonDescription', '@post.ReportDetails')" style="font-weight:bold; font-size:1.2em">Arată raportul</a><br />
                    }
                    @Html.Raw(post.PostText)
                    @foreach (var attachment in post.Attachments)
                    {
                        <br />
                        @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                    }
                    <br />
                </div>
                <div class="PostFooter">
                    @if (post.LastEditTime > 0)
                    {
                        <br />
                        <div class="Caption" style="color:#495d6c">
                            Ultima dată modificat de @post.LastEditUser pe
                            <script>
                                    writeDate("@post.LastEditTime.ToUtcTime().ToString("o")", "@UserDateFormat");
                            </script>
                            @if (!string.IsNullOrWhiteSpace(post.LastEditReason))
                            {
                                <span>. Motiv: @post.LastEditReason</span>
                            }
                            . Modificări în total: @post.EditCount.
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(post.AuthorSignature))
                    {
                        <div class="Signature">
                            <div style="width:25%; display:inline-block; border-bottom:solid 1px black">&nbsp;</div>
                            <br />
                            @Html.Raw(post.AuthorSignature)
                            <br /> <br />
                        </div>
                    }
                    <br />
                    <div class="PostActions">
                        @if ((!Model.IsLocked || IsMod || IsAdmin) && !IsAnonymous && post != Model.Posts.Last())
                        {
                            <a asp-page="/Posting" asp-page-handler="QuoteForumPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@post.PostId">
                                @if (Model.IsLocked)
                                {
                                    <span>&#x1F5E8; Subiect închis</span>
                                }
                                else
                                {
                                    <span>&#x1F5E8; Răspunde cu citat</span>
                                }
                            </a>
                        }
                        else if (!IsAnonymous && post != Model.Posts.Last())
                        {
                            <a href="javascript:;" title="Subiectul este închis, nu se mai pot trimite răspunsuri.">
                                <s>&#x1F5E8; Subiect închis</s>
                            </a>
                        }
                        @if (await _userService.HasPrivateMessages(CurrentUser) /*&& await _userService.HasPrivateMessages(post.AuthorId ?? 1)*/)
                        {
                            <span>
                                <a asp-page="/Posting" asp-page-handler="PrivateMessage" asp-route-postId="@post.PostId">&#x2709; Mesaj privat</a>
                            </span>
                        }
                        @if (!post.ReportId.HasValue && !IsAnonymous)
                        {
                            <span>
                                <a href="javascript:vt.showReportForm(@post.PostId);">&#x2757; Raportează</a>
                            </span>
                        }
                        @if (IsMod)
                        {
                            <span>
                                <a href="javascript:vt.showMessageDetails('@post.IP');">&#x2753; Informații</a>
                            </span>
                            <span>
                                Selectează pentru moderare <input name="PostIdsForModerator" type="checkBox" value="@post.PostId" form="moderatorForm" onchange="vt.appendPostId(this, @(post.PostId ?? -1))" @(Model.PostIdsForModerator.Contains(post.PostId ?? -1) ? "checked" : "") />
                            </span>
                        }
                        @if (IsMod || (post.AuthorId == CurrentUser.UserId && DateTime.UtcNow.Subtract(post.PostCreationTime ?? default).TotalMinutes <= EditTime))
                        {
                            <span>
                                <a asp-page="/Posting" asp-page-handler="EditPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@post.PostId">&#x1F4DD; Modifică</a>
                            </span>
                        }
                    </div>
                </div>
            </div>
            <p>&nbsp;</p>
        </div>
    </div>
    index++;
}
<hr />
@if ((!Model.IsLocked || IsMod || IsAdmin) && !IsAnonymous)
{
    <a asp-page="/Posting" asp-page-handler="ForumPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId">
        @if (Model.IsLocked)
        {
            <span>Subiect închis</span>
        }
        else
        {
            <span>Scrie un mesaj nou</span>
        }
    </a>
}
else if (!IsAnonymous)
{
    <a href="javascript:;" title="Subiectul este închis, nu se mai pot trimite răspunsuri.">
        <s>&#x1F5E8; Subiect închis</s>
    </a>
}
<hr />
@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new CustomPartials._PaginationControlsPartialModel(
        paginator: Model.Paginator,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: true,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)
@if (Model.Paginator.Pagination.HasPages)
{
    <hr />
}
<p>&nbsp;</p>
<span onclick="showElement('forumTree', null, () => $('html, body').animate({ scrollTop: $(this).position().top + $('#topBanner').outerHeight() + 1000 }, 'slow'));" style="cursor:pointer; font-weight:bold; display: block; clear: both;">Navigare - alege destinația &#x2935;</span>
<div id="forumTree" style="display:none">
    <p>&nbsp;</p>
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new CustomPartials._ForumTreePartialModel(
            forums: await Model.GetForumTree(fullTraversal: true),
            forumId: Model.ForumId,
            topicId: Model.TopicId,
            path: (await Model.GetForumTree(fullTraversal: true)).Tree.FirstOrDefault(t => t.ForumId == Model.ForumId).PathList,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" />
    </form>
</div>
<hr />
@if (IsMod)
{
    <form method="post" asp-page-handler="TopicModerator">
        <span>Moderează subiectul: </span>
        @Html.DropDownList("TopicAction", _utils.EnumToDropDownList<ModeratorTopicActions>(Model.TopicAction), new { onchange = "vt.showTopicExtraInput(this)", id = "TopicAction" })
        <div id="extraInputTopic" style="display:@(Model.ShowTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" onclick="return vt.confirmAction('#TopicAction');" />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        @Html.AntiForgeryToken()
    </form>
    <form id="moderatorForm" method="post" asp-page-handler="PostModerator">
        <br />
        <span>Moderează mesajele selectate: </span>
        @Html.DropDownList("PostAction", _utils.EnumToDropDownList<ModeratorPostActions>(Model.PostAction), new { onchange = "vt.showPostExtraInput(this)", id = "PostAction" })
        <div id="extraInputPostForum" style="display:@(Model.ShowPostForum ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <div id="extraInputPostTopic" style="display:@(Model.ShowPostTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationTopicId" placeholder="ID subiect destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul subiectului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationTopicId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" onclick="return vt.confirmAction('#PostAction');" />
        <br />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        @Html.AntiForgeryToken()
    </form>
    <form id="modConfirmation" asp-page="Confirm" method="get">
        <input type="hidden" asp-for="ForumId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" name="showTopicSelector" id="showTopicSelector" value="false" />
        <input type="hidden" name="selectedPostIds" id="selectedPostIds" value="" />
        <input type="hidden" name="postAction" id="postAction" value="" />
        <input type="hidden" name="topicAction" id="topicAction" value="" />
        <input type="hidden" name="handler" value="ModeratorConfirmation" />
        @Html.AntiForgeryToken()
    </form>
    @if (!string.IsNullOrWhiteSpace(Model.ModeratorActionResult))
    {
        <br />
        @Html.Raw(Model.ModeratorActionResult)
    }

    <div class="MiddleBox" id="postInfo" style="display:none">
        <h4 style="float:left">Informații mesaj</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('postInfo')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div id="postInfoContent"></div>
    </div>
}

@if (!IsAnonymous)
{
    <form asp-page-handler="ReportMessage" method="post" class="MiddleBox" id="report" style="display:none">
        <h4 style="float:left">Raportează mesaj</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('report')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Motiv
                </div>
                <div class="FlexRight PostInputWidth">
                    @{
                        var reasons = new List<SelectListItem> { new SelectListItem("Alege un motiv", "-1", true, true) };
                        reasons.AddRange(_context.PhpbbReportsReasons.AsNoTracking().OrderBy(x => x.ReasonOrder).Select(x => new SelectListItem(x.ReasonDescription, x.ReasonId.ToString())));
                    }
                    @Html.DropDownList("reportReasonId", reasons, new { id = "reportReason", style = "width: 100%" })
                </div>
            </div>
            <p></p>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Detalii suplimentare
                </div>
                <div class="FlexRight PostInputWidth">
                    <textarea name="ReportDetails" rows="4" cols="100" id="reportDetails" style="width:100%"></textarea>
                </div>
            </div>
        </div>
        <p></p>
        <input type="hidden" name="reportPostId" id="reportPostId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" asp-for="PostId" />
        <input type="hidden" name="ReportId" id="reportId" />
        <input type="submit" onclick="return vt.validateReportForm();" value="Trimite" />&nbsp;<span class="validation" id="reportValidation" style="display:none"></span>
        @Html.AntiForgeryToken()
    </form>

    <div id="reportViewer" class="MiddleBox" style="display:none">
        <h4 style="float:left">Raport</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('reportViewer')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Motiv:
            </div>
            <div class="FlexRight PostInputWidth">
                <span id="reportViewerReportReasonTitle"></span> &nbsp;(<span id="reportViewerReportReasonDescription"></span>)
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Detalii suplimentare
            </div>
            <div class="FlexRight PostInputWidth" id="reportViewerReportDetails">
            </div>
        </div>
        @*<p></p>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Salvează captura mesajului:
                </div>
                <div class="FlexRight PostInputWidth">
                    <img src="~/images/loading.gif" id="reportViewerPostCapture" />
                </div>
            </div>*@
        @if (IsMod)
        {
            <form asp-page-handler="ManageReport" method="post">
                <input type="hidden" name="reportPostId" id="reportViewerReportPostId" />
                <input type="hidden" asp-for="TopicId" id="reportViewerPostId" />
                <input type="hidden" asp-for="PageNum" />
                <input type="hidden" asp-for="PostId" />
                <input type="hidden" name="reportId" id="reportViewerReportId" />
                <br />
                @Html.CheckBox("redirectToEdit", new { id = "reportViewerEditMessage" }) &nbsp; Modifică mesajul<br />
                @Html.CheckBox("deletePost", new { id = "reportViewerDeleteMessage" }) &nbsp; Șterge mesajul<br /><br />
                <input type="submit" value="Închide raport" onclick="vt.confirmDeleteReportedPost()" />
                @Html.AntiForgeryToken()
            </form>
            @*<form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>*@
        }
    </div>
}