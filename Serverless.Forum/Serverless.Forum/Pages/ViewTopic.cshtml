@page
@model Serverless.Forum.Pages.ViewTopicModel

@using System.Web
@using Serverless.Forum.Utilities

@inject Services.UserService _userService
@inject Utils _utils
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor

@{
    ViewData["Title"] = $"{Model.ForumTitle} - {Model.TopicTitle}";
    Layout = "~/Pages/_Layout.cshtml";
    var IsAnonymous = Model.CurrentUserId == Constants.ANONYMOUS_USER_ID;
    var UserDateFormat = (await Model.GetCurrentUserAsync())?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    var IsAdmin = await Model.IsCurrentUserAdminHereAsync();
    var IsMod = await Model.IsCurrentUserModeratorHereAsync();
    var EditTime = (await Model.GetCurrentUserAsync()).PostEditTime;
}

<link rel="stylesheet" href="~/css/pagination.css" />

<script type="text/javascript">
    $(document).ready(function () {
        onPostLoad();
        var postId = @Json.Serialize(Model.PostId ?? -1);
        var highlight = @Json.Serialize(Model.Highlight ?? true);
        if (postId != -1) {
            var element = $("#" + postId);
            var elementTop = element.offset().top;
            var headerHeight = $("#topBanner").outerHeight(true);
            window.scrollTo(0, elementTop > headerHeight ? elementTop - headerHeight : elementTop);
            var container = element.parent().parent();
            if (container && highlight) {
                container.addClass("Highlight");
            }
        }
    });

    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }

    function switchPollPanels(id1, id2, button) {
        showElement(
            id1,
            function () {
                button.value = "Arată rezultatele";
            },
            function () {
                button.value = "Votează";
            }
        );
        showElement(id2);
    }
</script>

@if (Model.ForumId != null)
{
    <span>Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@Model.ForumTitle</a></span>
}
<h2>Subiect: @Model.TopicTitle</h2>

@if (Model.Poll != null)
{
    if (Model.Poll.CanVoteNow(Model.CurrentUserId) || IsAnonymous)
    {
        <div id="votes" style="display:block">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.Poll.PollTitle))</h3>
            <div>Chestionarul @(Model.Poll.PollEnded ? "a fost" : "va fi") inchis: @(Model.Poll.PollEnd.HasValue ? Model.Poll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>
            <form method="post" asp-page-handler="vote">
                @foreach (var option in Model.Poll.PollOptions)
                {
                    var isChecked = option.PollOptionVoters.Any(v => v.UserId == Model.CurrentUserId);
                    <table style="border:none; padding:unset; margin:unset; width:100%">
                        <tr style="border-bottom:solid 1px black">
                            <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            </td>
                            <td>
                                <input type="@(Model.Poll.PollMaxOptions > 1 ? "checkbox" : "radio")" name="Votes" value="@option.PollOptionId" @(isChecked ? "checked" : "") @(IsAnonymous ? "disabled" : "") />
                            </td>
                        </tr>
                    </table>
                }
                <br />
                <input asp-for="TopicId" type="hidden" />
                <input name="queryString" type="hidden" value="@HttpUtility.UrlEncode(Request.QueryString.ToString())" />
                <input type="submit" value="Trimite vot" @(IsAnonymous ? "disabled" : "") />
            </form>
        </div>
    }
    if ((!Model.Poll.CanVoteNow(Model.CurrentUserId) && !IsAnonymous) || IsAdmin)
    {
        <div id="results" style="display:@(Model.Poll.CanVoteNow(Model.CurrentUserId) && IsAdmin ? "none" : "block")">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.Poll.PollTitle))</h3>
            <div>Chestionarul @(Model.Poll.PollEnded ? "a fost" : "va fi") inchis: @(Model.Poll.PollEnd.HasValue ? Model.Poll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>
            <p></p>
            <table style="border:none; padding:unset; margin:unset; width:100%">
                @foreach (var option in Model.Poll.PollOptions)
                {
                    <tr style="border-bottom:solid 1px black">
                        <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                            @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            @if (await Model.IsCurrentUserAdminHereAsync(Model.ForumId ?? 0))
                            {
                                <div class="Caption">
                                    Votanti: @Html.Raw(HttpUtility.HtmlDecode(string.Join(", ", option.PollOptionVoters.Select(v => v.Username))))
                                </div>
                            }
                        </td>
                        <td style="width:50%; padding-top: 5px; padding-bottom: 5px">
                            @{var percentage = (Model.Poll.TotalVotes == 0 ? 0 : option.PollOptionVotes * 100m / Model.Poll.TotalVotes).ToString("##0.##'%'", System.Globalization.CultureInfo.InvariantCulture);}
                            <span style="width: 100%; background: linear-gradient(to right, #87ceeb @percentage, #ffffff 0%); border: solid 1px black; display: inline-block; padding:2px">
                                @option.PollOptionVotes @(option.PollOptionVotes == 1 ? "vot" : "voturi") (@(percentage))
                            </span>
                        </td>
                    </tr>
                }
            </table>
        </div>
        @if (Model.Poll.CanVoteNow(Model.CurrentUserId) && IsAdmin)
        {
            <br />
            <input type="button" value="Arată rezultatele" onclick="switchPollPanels('results', 'votes', this)" />
        }
    }
    <hr />
}

@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new CustomPartials._PaginationControlsPartialModel(
        pagination: Model,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: false,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)
@if (Model.Pagination.HasPages)
{
    <hr />
}
@{ var index = 0; }
@foreach (var post in Model.Posts)
{
    <div class="RowMargin @(post.Unread ? "Unread" : $"Color{index % 2}")">
        <div class="FlexRow">
            @await Html.PartialAsync(
                "_SummaryPartial",
                new CustomPartials._SummaryPartialModel(post.AuthorId, post.AuthorName, post.AuthorColor, post.PostCreationTime, post.PostId.Value,
                    UserDateFormat, post.AuthorHasAvatar, post.AuthorRank, null, null, null, true)
            )
            <div class="ForumContent VerticalContent FlexRight" id="@post.PostId">
                <span style="display:flex">
                    <span class="PostTitle">
                        <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@post.PostId">@Html.Raw(post.PostSubject)</a>
                    </span>
                    <span style="margin-left:auto">
                        <span class="CollapsedMenu" onclick="expandCollapsedMenu('summary@(post.PostId.Value)', 'button@(post.PostId.Value)')" id="button@(post.PostId.Value)" style="color:#@post.AuthorColor;margin-left: auto; height:auto">
                            @Html.Raw(post.AuthorName)
                        </span>
                    </span>
                </span>
                <div>
                    <br />
                    @Html.Raw(post.PostText)
                    @foreach (var attachment in post.Attachments)
                    {
                        <br />
                        @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                    }
                    <br />
                </div>
                <div class="PostFooter">
                    @if (post.LastEditTime > 0)
                    {
                        <br />
                        <div class="Caption" style="color:#495d6c">
                            Ultima dată modificat de @post.LastEditUser pe
                            <script>
                                    writeDate("@post.LastEditTime.ToUtcTime().ToString("o")", "@UserDateFormat");
                            </script>
                            @if (!string.IsNullOrWhiteSpace(post.LastEditReason))
                            {
                                <span>. Motiv: @post.LastEditReason</span>
                            }
                            . Modificări în total: @post.EditCount.
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(post.AuthorSignature))
                    {
                        <div class="Signature">
                            <div style="width:25%; display:inline-block; border-bottom:solid 1px black">&nbsp;</div>
                            <br />
                            @Html.Raw(post.AuthorSignature)
                            <br /> <br />
                        </div>
                    }
                    <br />
                    <div class="PostActions">
                        @if ((!Model.IsLocked || IsMod || IsAdmin) && !IsAnonymous && post != Model.Posts.Last())
                        {
                            <a asp-page="/Posting" asp-page-handler="QuoteForumPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@post.PostId">
                                @if (Model.IsLocked)
                                {
                                    <span>&#x1F5E8; Subiect închis</span>
                                }
                                else
                                {
                                    <span>&#x1F5E8; Răspunde cu citat</span>
                                }
                            </a>
                        }
                        else if (!IsAnonymous && post != Model.Posts.Last())
                        {
                            <a href="javascript:;" title="Subiectul este închis, nu se mai pot trimite răspunsuri.">
                                <s>&#x1F5E8; Subiect închis</s>
                            </a>
                        }
                        @if (await _userService.GetUserRole(await Model.GetCurrentUserAsync()) != 8 && await _userService.GetUserRole(post.AuthorId ?? 1) != 8)
                        {
                            <span>
                                <a asp-page="/Posting" asp-page-handler="QuotePrivateMessage" asp-route-postId="@post.PostId">&#x2709; Mesaj privat</a>
                            </span>
                        }
                        <span>
                            <a href="javascript:return;">&#x2757; Raportează</a>
                        </span>
                        @if (IsMod)
                        {
                            <span>
                                <a href="javascript:return;">&#x2753; Informații</a>
                            </span>
                            <span>
                                Selectează pentru moderare <input name="PostIdsForModerator" type="checkBox" value="@post.PostId" form="moderatorForm" />
                            </span>
                        }
                        @if (IsMod || (post.AuthorId == Model.CurrentUserId && DateTime.UtcNow.Subtract(post.PostCreationTime ?? default).TotalMinutes <= EditTime))
                        {
                            <span>
                                <a asp-page="/Posting" asp-page-handler="EditPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@post.PostId">&#x1F4DD; Modifică</a>
                            </span>
                        }
                    </div>
                </div>
            </div>
            <p>&nbsp;</p>
        </div>
    </div>
    index++;
}
<hr />
@if ((!Model.IsLocked || IsMod || IsAdmin) && !IsAnonymous)
{
    <a asp-page="/Posting" asp-page-handler="ForumPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId">
        @if (Model.IsLocked)
        {
            <span>Subiect închis</span>
        }
        else
        {
            <span>Scrie un mesaj nou</span>
        }
    </a>
}
else if (!IsAnonymous)
{
    <a href="javascript:;" title="Subiectul este închis, nu se mai pot trimite răspunsuri.">
        <s>&#x1F5E8; Subiect închis</s>
    </a>
}
<hr />
@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new CustomPartials._PaginationControlsPartialModel(
        pagination: Model,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: true,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)
@if (Model.Pagination.HasPages)
{
    <hr />
}
<span onclick="showElement('forumTree')" style="cursor:pointer; font-weight:bold">Navigare - alege destinația &#x2935;</span>
<p>&nbsp;</p>
<div id="forumTree" style=" display:none">
    <div style="height:400px; max-height:600px; overflow-y:scroll;">
        @await Html.PartialAsync(
            "_ForumTreePartial",
             new CustomPartials._ForumTreePartialModel
             {
                 Forums = await Model.GetForumTreeAsync(),
                 ForumId = Model.ForumId,
                 TopicId = Model.TopicId,
                 PathToForumOrTopic = await Model.PathToForumOrTopic(Model.ForumId.Value, Model.TopicId)
             },
            ViewData
        )
    </div>
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" />
    </form>
</div>
<hr />
@if (IsMod)
{
    <form method="post" asp-page-handler="TopicModerator">
        <span>Acțiuni moderare (cu acest topic): </span>
        @Html.DropDownList("TopicAction", _utils.EnumToDropDownList<ModeratorTopicActions>(Model.TopicAction), new { onchange = "showTopicExtraInput(this)", id = "TopicAction" })
        <div id="extraInputTopic" style="display:@(Model.ShowTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a id="topicLink" asp-page="Confirm" asp-page-handler="ModeratorConfirmation" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-pageNum="@Model.PageNum" asp-route-showTopicSelector="false">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
    </form>
    <form id="moderatorForm" method="post" asp-page-handler="PostModerator">
        <br />
        <span>Acțiuni moderare (cu mesajele selectate): </span>
        @Html.DropDownList("PostAction", _utils.EnumToDropDownList<ModeratorPostActions>(Model.PostAction), new { onchange = "showPostExtraInput(this)", id = "PostAction" })
        <div id="extraInputPostForum" style="display:@(Model.ShowPostForum ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a id="postForumLink" asp-page="Confirm" asp-page-handler="ModeratorConfirmation" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-pageNum="@Model.PageNum" asp-route-showTopicSelector="false">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <div id="extraInputPostTopic" style="display:@(Model.ShowPostTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationTopicId" placeholder="ID subiect destinație" /><br />
            <a id="postTopicLink" asp-page="Confirm" asp-page-handler="ModeratorConfirmation" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-pageNum="@Model.PageNum" asp-route-showTopicSelector="true">
                Alege id-ul subiectului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationTopicId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" />
        <br />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
    </form>
    @if (!string.IsNullOrWhiteSpace(Model.ModeratorActionResult))
    {
        <br />
        @Html.Raw(Model.ModeratorActionResult)
    }
    <script>
        window.onload = function() {
            //$('#TopicAction').val('');
            //$('#PostAction').val('');

            if (@Model.ScrollToModeratorPanel) {
                document.getElementById('moderatorForm').scrollIntoView();
            }
        }

        function showTopicExtraInput(source) {
            if ($(source).val() == '@ModeratorTopicActions.MoveTopic') {
                $('#extraInputPostForum').hide("fast");
                $('#extraInputPostTopic').hide("fast");
                $('#extraInputTopic').show("fast");
                setForumAction('topicLink', 'Topic');
            }
        }

        function showPostExtraInput(source) {
            if ($(source).val() == '@ModeratorPostActions.MoveSelectedPosts') {
                $('#extraInputPostForum').hide("fast");
                $('#extraInputTopic').hide("fast");
                $('#extraInputPostTopic').show("fast");
                setForumAction('postTopicLink', 'Post');
            } else if ($(source).val() == '@ModeratorPostActions.SplitSelectedPosts') {
                $('#extraInputTopic').hide("fast");
                $('#extraInputPostTopic').hide("fast");
                $('#extraInputPostForum').show("fast");
                setForumAction('postForumLink', 'Topic');
            }
        }

        function setForumAction(id, kind) {
            var val = $('#' + id).attr('href');
            val += '&' + kind + 'Action=' + $('#' + kind + 'Action').val();
            $('#' + id).attr('href', val);
        }
    </script>
}