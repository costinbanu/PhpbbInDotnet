@page
@using Serverless.Forum.Utilities;
@model Serverless.Forum.Pages.ViewForumModel
@{
    ViewData["Title"] = "ViewForum";
    Layout = "~/Pages/_Layout.cshtml";
}

@if (Model.Forums.Any())
{
    <h3>Forumuri</h3>
    @foreach (var forum in Model.Forums)
    {
        <div class="ForumListRow">
            <span class="ForumListLeft">
                <a asp-page="/ViewForum" asp-route-ForumId="@forum.Id" class="nav-link">@forum.Name</a>
            </span>
            <span class="ForumListRight">
                Ultimul mesaj: @forum.LastPostTime?.ToString(User?.ToLoggedUser()?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm")
                <br />
                de @forum.LastPosterName
            </span>
        </div>
    }

    <p>&nbsp;</p>
}
@if (Model.Topics.Any())
{
    /*https://stackoverflow.com/questions/5144265/an-equally-quick-alternative-to-securityelement-escapestring-to-escape-xml-spe#comment88712318_5144356
     * use SecurityElement.Escape when using Html.Raw*/
    var topicsDisplayed = false;
    foreach (var topicGroup in Model.Topics)
    {
        @if ((topicGroup.TopicType ?? 0) == 2)
        {
            <h3>Anunțuri</h3>
        }
        else if(!topicsDisplayed)
        {
            <h3>Subiecte</h3>
            topicsDisplayed = true;
        }
        foreach (var topic in topicGroup?.Topics ?? new List<TopicDisplay>())
        {
            <div class="ForumListRow">
                <span class="ForumListLeft">
                    <a asp-page="/ViewTopic" asp-route-TopicId="@topic.Id" asp-route-PageNum="1" class="nav-link">@Html.Raw(@topic.Title)</a>
                    <br/>
                    @await  Html.PartialAsync("_PaginationPartial", topic.Pagination, ViewData)
                </span>
                <span class="ForumListRight">
                    Ultimul mesaj: @topic.LastPostTime?.ToString(User?.ToLoggedUser()?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm")
                    <br/>
                    de @topic.LastPosterName
                </span>
            </div>
        }
    }
}

