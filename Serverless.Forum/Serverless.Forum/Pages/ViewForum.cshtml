@page
@model Serverless.Forum.Pages.ViewForumModel

@using Serverless.Forum.Utilities
@using System.Web
@inject Services.ForumTreeService _forumService
@inject Services.BBCodeRenderingService _renderingService
@inject Utils _utils

@{
    ViewData["Title"] = Model.ForumTitle;
    Layout = "~/Pages/_Layout.cshtml";
    var CurrentUser = await Model.GetCurrentUserAsync();
    var UserDateFormat = CurrentUser?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    var IsAnonymous = CurrentUser?.IsAnonymous ?? true;
    var hasSubForums = _forumService.HasUnrestrictedChildren((await Model.GetForumTree()).Tree, Model.ForumId);
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
</environment>
<form asp-page-handler="MarkForumsRead" method="post" name="MarkForumsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>
<form asp-page-handler="MarkTopicsRead" method="post" name="MarkTopicsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>

<script>
    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>

@if (!Model.IsNewPostView && !Model.IsOwnPostView)
{
    <script>
        $(document).ready(function () {
            var element = $('.Unread');
            if (element && element.offset()) {
                window.scrollTo(0, element.offset().top - 20);
            }
        });
    </script>
}

@if ((Model.ParentForumId ?? 0) != 0 && !Model.IsNewPostView && !Model.IsOwnPostView)
{
    <span>Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ParentForumId">@HttpUtility.HtmlDecode(Model.ParentForumTitle)</a></span>
}
else
{
    <h4><a href="/">Prima pagină</a></h4>
}

@if (Model.IsNewPostView)
{
    <h2>Subiecte necitite</h2>
    @if (Model.Topics?.Any() ?? false)
    {
        <a href="javascript:MarkForumsRead.submit()">Marchează-le ca citite</a>
    }
}
else if (Model.IsOwnPostView)
{
    <h2>Subiectele proprii</h2>
    <span>Subiecte în care ai scris cel puțin un mesaj</span>
}
else
{
    <h2>Forum: @Model.ForumTitle</h2>
    @if (!string.IsNullOrWhiteSpace(Model.ForumRules))
    {
        <div style="background-color: #ECD5D8; color: #BC2A4D; padding: 10px; margin: 10px">
            <span>&#x26A0;&nbsp;</span>
            <b>Reguli forum</b>
            <br />
            @Html.Raw(_renderingService.BbCodeToHtml(Model.ForumRules, Model.ForumRulesUid))
        </div>
    }
    else if (!string.IsNullOrWhiteSpace(Model.ForumRulesLink))
    {
        <div style="background-color: #ECD5D8; color: #BC2A4D; padding: 10px; margin: 10px">
            <a href="@_utils.TransformSelfLinkToBetaLink(HttpUtility.HtmlDecode(Model.ForumRulesLink))">
                &#x26A0;&nbsp;
                <b>Reguli forum</b>
            </a>
        </div>
    }
}

@if (!IsAnonymous && !Model.IsNewPostView && !Model.IsOwnPostView)
{
    <ul class="Shortcuts">
        @if (hasSubForums)
        {
            <li><a href="javascript:MarkForumsRead.submit()">Marchează forumurile ca citite</a></li>
        }
        @if (Model.Topics?.Any() ?? false)
        {
            <li><a href="javascript:MarkTopicsRead.submit()">Marchează subiectele ca citite</a></li>
        }
    </ul>
}

@if (hasSubForums)
{
    @await Html.PartialAsync(
        "_ForumDisplayPartial",
        new Serverless.Forum.Pages.CustomPartials._ForumDisplayPartialModel(Model.ForumId, Model.Forums, UserDateFormat, true, CurrentUser),
        ViewData
    )
    <hr class="BoxSeparator" />
    <p>&nbsp;</p>
}

@if (Model.Topics?.SelectMany(x => x.Topics).Any() ?? false)
{
    /*https://stackoverflow.com/questions/5144265/an-equally-quick-alternative-to-securityelement-escapestring-to-escape-xml-spe#comment88712318_5144356
     * use SecurityElement.Escape when using Html.Raw*/
    var topicsDisplayed = false;
    var announcementsDisplayed = false;
    var globalsDisplayed = false;

    if (Model.IsNewPostView || Model.IsOwnPostView)
    {
        var view = Model.IsNewPostView ? "new" : "own";
        @await Html.PartialAsync(
            "_PaginationControlsPartial",
            new CustomPartials._PaginationControlsPartialModel(
                paginator: Model.Paginator,
                allowPaginationChange: true,
                back: $"/ViewForum?handler={view}Posts&pageNum={(Model.PageNum ?? 1) - 1}",
                forward: $"/ViewForum?handler={view}Posts&pageNum={(Model.PageNum ?? 1) + 1}",
                includeEasyNavigation: false
            ),
            ViewData
        );
    }
    var lastTopicType = TopicType.Normal;
    foreach (var topicGroup in Model.Topics)
    {
        if (!Model.IsNewPostView && !Model.IsOwnPostView)
        {
            if (!globalsDisplayed && topicGroup.TopicType == TopicType.Global)
            {
                if (announcementsDisplayed || topicsDisplayed)
                {
                    <hr class="BoxSeparator" />
                    <p>&nbsp;</p>
                }
                <h3 style="float:left">Subiecte globale</h3>
                globalsDisplayed = true;
            }
            else if (!announcementsDisplayed && topicGroup.TopicType == TopicType.Announcement)
            {
                if (globalsDisplayed || topicsDisplayed)
                {
                    <hr class="BoxSeparator" />
                    <p>&nbsp;</p>
                }
                <h3 style="float:left">Anunțuri</h3>
                announcementsDisplayed = true;
            }
            else if (!topicsDisplayed)
            {
                if (globalsDisplayed || announcementsDisplayed)
                {
                    <hr class="BoxSeparator" />
                    <p>&nbsp;</p>
                }
                <h3 style="float:left">Subiecte</h3>
                topicsDisplayed = true;
            }
        }

        var isFirst = true;
        if (lastTopicType == TopicType.Important && topicGroup?.TopicType == TopicType.Normal)
        {
            isFirst = false;
        }
        if (isFirst && topicGroup.TopicType <= TopicType.Important)
        {
            <span>
                &nbsp;&bull;&nbsp;
                <button onclick="location.href='/Posting?forumId=@Model.ForumId&handler=newTopic'" type="button">
                    &#x1F4DD;&nbsp;Deschide un subiect nou
                </button>
            </span>
        }
        var previousIsUnread = false;
        //var topics = topicGroup?.Topics?.ToList() ?? new List<TopicDto>();
        foreach (var topic in topicGroup?.Topics ?? Enumerable.Empty<TopicDto>())
        {
            var pageSize = CurrentUser.TopicPostsPerPage.ContainsKey(topic.TopicId ?? 0) ? CurrentUser.TopicPostsPerPage[topic.TopicId ?? 0] : Constants.DEFAULT_PAGE_SIZE;
            topic.Unread = await Model.IsTopicUnread(topic.ForumId ?? 0, topic.TopicId ?? 0);
            topic.Pagination = new CustomPartials._PaginationPartialModel($"/ViewTopic?topicId={topic.TopicId}&pageNum=1", topic.PostCount ?? 0, pageSize, 1, "PageNum");

            if (!isFirst && !previousIsUnread && !topic.Unread)
            {
                <hr class="BoxSeparator" />
            }

            previousIsUnread = topic.Unread;
            var divClass = topic.Unread ? "FlexRow Unread RowMargin" : "FlexRow RowMargin";
            <div class="@divClass">
                <span class="ForumContent">
                    @if (Model.IsNewPostView || Model.IsOwnPostView)
                    {
                        <span class="Caption">
                            @Html.Raw(_forumService.GetPathText((await Model.GetForumTree()).Tree, topic.ForumId ?? 0))
                        </span>
                        <br />
                    }
                    @if (topicGroup.TopicType == TopicType.Important)
                    {
                        <span>&#x26A0;&#xFE0F;&nbsp;</span>
                    }
                    @{
                        var firstUnreadPost = await Model.GetFirstUnreadPost(topic.ForumId ?? 0, topic.TopicId ?? 0);
                        if (firstUnreadPost > 0)
                        {
                            <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@firstUnreadPost" asp-route-highlight="false" class="nav-link UnreadTitle" style="font-weight:bold">@Html.Raw(topic.TopicTitle)</a>
                        }
                        else
                        {
                            <a asp-page="/ViewTopic" asp-route-topicId="@topic.TopicId" asp-route-pageNum="1" class="nav-link" style="font-weight:bold">@Html.Raw(topic.TopicTitle)</a>
                        }
                    }
                    <br />
                    @await Html.PartialAsync("_PaginationPartial", topic.Pagination, ViewData)
                </span>
                @await Html.PartialAsync(
                     "_SummaryPartial",
                     new CustomPartials._SummaryPartialModel(topic.TopicLastPosterId, topic.TopicLastPosterName, topic.TopicLastPosterColour, topic.LastPostTime, topic.TopicId.Value,
                         UserDateFormat, false, null,
                         topic.TopicLastPostId == null ? null : $"./ViewTopic?postId={topic.TopicLastPostId}&handler=ByPostId",
                         topic.TopicLastPostId == null ? null : "&#x1F4C3;",
                         topic.TopicLastPostId == null ? null : "Vezi ultimul mesaj",
                         false, true, topic.PostCount, topic.ViewCount
                     )
                 )
            </div>
            isFirst = false;
        }

        lastTopicType = topicGroup?.TopicType ?? TopicType.Normal;
    }

    if (Model.IsNewPostView || Model.IsOwnPostView)
    {
        var view = Model.IsNewPostView ? "new" : "own";
        @await Html.PartialAsync(
            "_PaginationControlsPartial",
            new CustomPartials._PaginationControlsPartialModel(
                paginator: Model.Paginator,
                allowPaginationChange: true,
                back: $"/ViewForum?handler={view}Posts&pageNum={(Model.PageNum ?? 1) - 1}",
                forward: $"/ViewForum?handler={view}Posts&pageNum={(Model.PageNum ?? 1) + 1}",
                includeEasyNavigation: true
            ),
            ViewData
        );
    }
}
else if (Model.IsNewPostView)
{
    <h4>Nu există mesaje noi.</h4>
}
else if (Model.IsOwnPostView)
{
    <h4>Nu ai scris nici un mesaj în nici un topic până acum.</h4>
}
@if (!IsAnonymous && !Model.IsNewPostView && !Model.IsOwnPostView)
{
    <button onclick="location.href='/Posting?forumId=@Model.ForumId&handler=newTopic'" type="button">
        &#x1F4DD;&nbsp;Deschide un subiect nou
    </button>
}

<p></p>
<div style="clear:both">
    <a href="/">Prima pagină</a> |
    @if ((Model.ParentForumId ?? 0) != 0 && !Model.IsNewPostView && !Model.IsOwnPostView)
    {
        <a asp-page="/ViewForum" asp-route-forumId="@Model.ParentForumId">@HttpUtility.HtmlDecode(Model.ParentForumTitle)</a>
        <span> | </span>
    }
    <span onclick="showForumTree(this)" class="SpanLikeLink">Alege destinația</span>
</div>
<p></p>
<div id="forumTree" style=" display:none">
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new CustomPartials._ForumTreePartialModel(
            tree: (await Model.GetForumTree()).Tree,
            forumId: Model.ForumId,
            topicId: null,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" />
    </form>
</div>

