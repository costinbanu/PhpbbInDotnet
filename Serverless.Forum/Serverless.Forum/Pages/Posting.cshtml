@page

@using System.Web
@using Serverless.Forum.Utilities
@using Serverless.Forum.ForumDb

@model Serverless.Forum.Pages.PostingModel
@inject Services.CacheService _cacheService
@inject Services.WritingToolsService _writingService

@{
    ViewData["Title"] = "Posting";
    Layout = "~/Pages/_Layout.cshtml";
    var UserDateFormat = (await Model.GetCurrentUserAsync()).UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    var Header = await _cacheService.GetFromCache<string>(Model.GetActualCacheKey("Header", true));
    var CanCreatePoll = await _cacheService.GetFromCache<bool>(Model.GetActualCacheKey("CanCreatePoll", true));
    var Action = await _cacheService.GetFromCache<PostingActions>(Model.GetActualCacheKey("Action", true));
    var ForumName = await _cacheService.GetFromCache<string>(Model.GetActualCacheKey("ForumName", true));
    var ForumId = await _cacheService.GetFromCache<int>(Model.GetActualCacheKey("ForumId", true));
}

<script src="~/lib/tribute/dist/tribute.js"></script>
<script src="~/js/posting.js"></script>
<link rel="stylesheet" href="~/lib/tribute/dist/tribute.css" />
<link rel="stylesheet" href="~/css/posting.css" />
<script type="text/javascript">
    var posting = new Posting(
        @Json.Serialize(await _cacheService.GetFromCache<List<string>>(Model.GetActualCacheKey("BbCodes", false))),
        @Json.Serialize(await _cacheService.GetFromCache<Dictionary<string, string>>(Model.GetActualCacheKey("BbCodeHelplines", false))),
        @((await Model.IsCurrentUserAdminHereAsync()).ToString().ToLower()),
        @((Action == PostingActions.EditForumPost).ToString().ToLower()),
        "@UserDateFormat"
    );

    window.onload = function () {
        onPostLoad();
        if ($('#attachPanel').is(':visible')) {
            $('#attachButton').text(posting.hideAttachText);
        }
        else {
            $('#attachButton').text(posting.showAttachText);
        }
        if ($('#pollPanel').is(':visible')) {
            $('#pollButton').text(posting.hidePollText);
        }
        else {
            $('#pollButton').text(posting.showPollText);
        }
    }
</script>


@if (Model.PostId.HasValue)
{
    <span>
        Forum părinte:
        <a asp-page="/ViewForum" asp-route-forumId="@ForumId">@ForumName</a>
    </span>
    <h3>
        Răspunde:
        <a asp-page="/ViewTopic" asp-route-postId="@Model.PostId.Value" asp-page-handler="ByPostId">@Header</a>
    </h3>
}
else if (Model.TopicId.HasValue)
{
    <span>
        Forum părinte:
        <a asp-page="/ViewForum" asp-route-forumId="@ForumId">@ForumName</a>
    </span>
    <h3>
        Răspunde:
        <a asp-page="/ViewTopic" asp-route-topicId="@Model.TopicId.Value" asp-route-pageNum="1">@Header</a>
    </h3>
}
else
{
    <h3>
        Scrie un subiect nou:
        <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@Header</a>
    </h3>
}
<form name="postform" method="post" enctype="multipart/form-data">
    <input asp-for="PostTitle" type="text" id="subject" size="45" maxlength="256" tabindex="2" class="InputBox PostInputWidth" placeholder="Subiect">
    <br />
    <div class="PostingControlsSpacer">&nbsp;</div>
    <div class="PostingControls PostInputWidth" id="controls">
        <input type="button" class="BbCodeButton" accesskey="b" name="addbbcode0" value=" B " style="font-weight:bold" onclick="posting.bbstyle(0)" title="Text bold: [b]text[/b]">
        <input type="button" class="BbCodeButton" accesskey="i" name="addbbcode2" value=" i " style="font-style:italic" onclick="posting.bbstyle(2)" title="Text italic: [i]text[/i]">
        <input type="button" class="BbCodeButton" accesskey="u" name="addbbcode4" value=" u " style="text-decoration: underline" onclick="posting.bbstyle(4)" title="Text subliniat: [u]text[/u]">
        <input type="button" class="BbCodeButton" accesskey="q" name="addbbcode6" value="Quote" onclick="posting.bbstyle(6)" title="Citează text: [quote]text[/quote]">
        <input type="button" class="BbCodeButton Hide960" accesskey="c" name="addbbcode8" value="Code" onclick="posting.bbstyle(8)" title="Afişează cod: [code]cod[/code]">
        <input type="button" class="BbCodeButton Hide960" accesskey="l" name="addbbcode10" value="List" onclick="posting.bbstyle(10)" title="Listă: [list]text[/list]">
        <input type="button" class="BbCodeButton Hide960" accesskey="o" name="addbbcode12" value="List=" onclick="posting.bbstyle(12)" title="Listă ordonată: [list=]text[/list]">
        <input type="button" class="BbCodeButton Hide960" accesskey="t" name="addlitsitem" value="[*]" onclick="posting.bbstyle(-1)" title="Listează articolele: [*]text[/*]">
        <input type="button" class="BbCodeButton" accesskey="p" name="addbbcode14" value="Img" onclick="posting.bbstyle(14)" title="Adaugă imagine: [img]http://cale_imagine[/img]">
        <input type="button" class="BbCodeButton" accesskey="w" name="addbbcode16" value="URL" style="text-decoration: underline" onclick="posting.bbstyle(16)" title="Adaugă URL: [url]http://url[/url] sau [url=http://url]text URL[/url]">
        <select name="addbbcode20" class="BbCodeButton" onchange="bbfontstyle('[size=' + this.form.addbbcode20.options[this.form.addbbcode20.selectedIndex].value + ']', '[/size]');this.form.addbbcode20.selectedIndex = 2;" title="Mărime font: [size=85]text mic[/size]">
            <option value="50">Micuţ</option>
            <option value="85">Mic</option>
            <option value="100" selected="selected">Normal</option>
            <option value="150">Mare</option>
            <option value="200">Imens</option>
        </select>
        <input type="button" class="BbCodeButton Hide960" name="bbpalette" id="bbpalette" value="Culoare font" onclick="posting.change_palette();" title="Culoare font: [color=red]text[/color]  Sfat: de asemenea puteţi folosi culorile hexazecimale culoare=#FF0000">
        @foreach (var code in (await _cacheService.GetFromCache<List<PhpbbBbcodes>>(Model.GetActualCacheKey("DbBbCodes", false))) ?? new List<PhpbbBbcodes>())
        {
            var index = (await _cacheService.GetFromCache<List<string>>(Model.GetActualCacheKey("BbCodes", false))).IndexOf($"[{code.BbcodeTag}]");
            var name = $"addbbcode{index}";
            <input type="button" class="BbCodeButton Hide960" name="@name" value="@code.BbcodeTag" onclick="posting.bbstyle(@index)" title="@code.BbcodeHelpline" />
        }
        <table class="ColorPalette" id="colour_palette">
            @{
                var color = new[] { 0x0, 0x40, 0x80, 0xbf, 0xff };
                for (var r = 0; r < 5; r++)
                {
                    <tr>
                        @for (var g = 0; g < 5; g++)
                        {
                            for (var b = 0; b < 5; b++)
                            {
                                var value = $"#{color[r]:X2}{color[g]:X2}{color[b]:X2}";
                                <td style="width: 15px; height: 10px; background-color: @value; border:solid 1px white">
                                    <a href="javascript:posting.bbfontstyle('[color=@value]', '[/color]');">
                                        <img src="./images/spacer.gif" alt="@value" title="@value" style="width: 15px; height: 10px">
                                    </a>
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </table>
        <p class="Show960">&nbsp;</p>
    </div>
    <a href="javascript:posting.show_hidden_formatters();" class="PostingControlsButton">Opțiuni formatare</a>
    <div class="PostingControlsSpacer">&nbsp;</div>
    <div>
        <textarea asp-for="PostText" id="message" rows="15" cols="76" tabindex="3" onselect="posting.storeCaret(this);" onclick="posting.storeCaret(this);" onkeyup="posting.storeCaret(this);" onfocus="posting.initInsertions();" class="InputBox PostInputWidth"></textarea>
        <div id="smiley-box" class="SmileyBox PostingControls">

            <strong>Zâmbete</strong><br />

            @foreach (var smiley in ((await _cacheService.GetFromCache<List<PhpbbSmilies>>(Model.GetActualCacheKey("Smilies", false))) ?? new List<PhpbbSmilies>()).Where(s => s.DisplayOnPosting == 1))
            {
                <a href="javascript:posting.insert_text('@smiley.Code', true);">
                    <img src="@($"{Constants.SMILEY_PATH}/{smiley.SmileyUrl}")" alt="@smiley.Code" title="@smiley.Emotion" width="@smiley.SmileyWidth" height="@smiley.SmileyHeight" style="margin:2px" />
                </a>
            }
            <p>&nbsp;</p>
            <a href="javascript:posting.show_hidden_smilies();" id="showHiddenSmiliesButton">Arată mai multe</a>
            <p>&nbsp;</p>
            <div id="hiddenSmilies" style="display:none">
                @foreach (var smiley in ((await _cacheService.GetFromCache<List<PhpbbSmilies>>(Model.GetActualCacheKey("Smilies", false))) ?? new List<PhpbbSmilies>()).Where(s => s.DisplayOnPosting == 0))
                {
                    <a href="javascript:posting.insert_text('@smiley.Code', true);">
                        <img src="@($"{Constants.SMILEY_PATH}/{smiley.SmileyUrl}")" alt="@smiley.Code" title="@smiley.Emotion" width="@smiley.SmileyWidth" height="@smiley.SmileyHeight" style="margin:2px" />
                    </a>
                }
            </div>
        </div>
    </div>
    <br />
    <p style="clear:both"></p>
    <a href="javascript:posting.toggleAttach();" id="attachButton">Adaugă fișiere atașate</a>
    @if (CanCreatePoll)
    {
        <span>&nbsp; | &nbsp;</span>
        <a href="javascript:posting.togglePoll();" id="pollButton">Adaugă chestionar</a>
        <div id="pollPanel" style="display:@(Model.ShowPoll ? "block" : "none")" class="PostInputWidth">
            <br />
            <h3>Chestionar</h3>
            <p>&nbsp;</p>
            <div class="FlexCenter">
                <div>Întrebarea chestionarului</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollQuestion" class="InputBox" style="width:100%" /> <br />
                    <span asp-validation-for="PollQuestion" class="validation"></span>
                </div>
            </div>
            <hr class="SubtypeSeparator" />
            <div class="FlexCenter">
                <div>Opțiuni (una pe rând)</div>
                <div class="FlexRight PollInput">
                    <textarea asp-for="PollOptions" rows="4" onmousedown="posting.confirmPollChange()" class="InputBox" style="width:100%"></textarea>
                    <span asp-validation-for="PollOptions" class="validation"></span>
                </div>
            </div>
            <hr class="SubtypeSeparator" />
            <div class="FlexCenter">
                <div>Timp pentru votare (zile)</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollExpirationDaysString" onchange="posting.showExpirationDate(this.value)" id="pollExpiration" class="InputBox" style="width:100%" /><br />
                    <div class="Caption">
                        <span>Introdu '0' pentru timp nelimitat.</span>
                        <span>Sunt permise și fracții precum 0.5, 1.75 etc</span>
                    </div>
                    <span id="pollExpirationHelper"></span>
                    <span asp-validation-for="PollExpirationDaysString" class="validation"></span>
                </div>
            </div>
            <hr class="SubtypeSeparator" />
            <div class="FlexCenter">
                <div>Opțiuni per votant</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollMaxOptions" class="InputBox" style="width:100%" />
                    <span asp-validation-for="PollMaxOptions" class="validation"></span>
                </div>
            </div>
            <hr class="SubtypeSeparator" />
            <div class="FlexCenter">
                <div>Votanții își pot schimba votul</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollCanChangeVote" class="InputBox" />
                    <span>&nbsp;Bifați pentru „da”.</span>
                    <span asp-validation-for="PollCanChangeVote" class="validation"></span>
                </div>
            </div>
        </div>
    }
    <input asp-for="ForumId" type="hidden" />
    <input asp-for="TopicId" type="hidden" />
    <input asp-for="PostId" type="hidden" />
    @{ var attachments = await _cacheService.GetFromCache<List<PhpbbAttachments>>(Model.GetActualCacheKey("PostAttachments", true)) ?? new List<PhpbbAttachments>(); }
    <div id="attachPanel" style="display:@(Model.ShowAttach ? "block" : "none")" class="PostInputWidth">
        <br />
        <h3>Fișiere atașate</h3>
        <h4>Adaugă fișiere noi</h4>
        <div class="FlexCenter PostInputWidth">
            <div>Alege unul sau mai multe fișiere:</div>
            <div class="PollInput FlexRight">
                <input asp-for="Files" onchange="posting.submitAttachments()" multiple />
                @if (!await Model.IsCurrentUserAdminHereAsync())
                {
                    <span class="Caption">Minim 1, maxim 10 fișiere. Fiecare fișier trebuie să aibă maxim 2MB.</span>
                }
                <span asp-validation-for="Files" class="validation"></span>
                <div id="fileUploadStatus"></div>
            </div>
        </div>
        <input type="submit" value="Încarcă fișierele alese" asp-page-handler="AddAttachment" style="display:none" id="submitAttachmentsButton" />
        @if (attachments.Any())
        {
            <hr class="SubtypeSeparator" />
            <h4>Fișiere deja atașate:</h4>
            @for (var i = 0; i < attachments.Count; i++)
            {
                <div style="margin-bottom:20px; padding-bottom:20px">
                    <b>Nume:</b> @attachments[i].RealFilename <br />
                    <b>Comentariu fișier:</b>
                    <br />
                    <textarea type="text" name="FileComment[@i]" id="FileComment" rows="4" cols="100" style="display:inline-block">@attachments[i].AttachComment</textarea>
                    <br />
                    <input type="button" value="Așează în linie" onclick="posting.attach_inline(@i, '@attachments[i].RealFilename')" /> &nbsp;
                    <input type="submit" value="Șterge fișier" asp-page-handler="DeleteAttachment" onclick="document.getElementById('indexToDelete').value = @i; return true;" />
                    <br />
                    <span asp-validation-for="DeleteFileDummyForValidation[i]" class="validation"></span>
                </div>
            }
            <input type="hidden" name="index" id="indexToDelete" value="" />
        }
    </div>
    @if (Action == PostingActions.EditForumPost)
    {
        <hr />
        <div class="FlexCenter PostInputWidth">
            <div>Motivul modificării:</div>
            <div class="PollInput FlexRight">
                <input asp-for="EditReason" type="text" style="width:100%" />
            </div>
        </div>
        <br />
    }
    <p></p>
    <input type="submit" value="Previzualizează" onclick="return posting.censor()" asp-page-handler="Preview" />
    <span>&nbsp; </span>
    @switch (Action)
    {
        case PostingActions.NewTopic:
        case PostingActions.NewForumPost:
            <input type="submit" value="Trimite mesajul" onclick="return posting.censor()" asp-page-handler="NewForumPost" />
            break;
        case PostingActions.EditForumPost:
            <input type="submit" value="Trimite mesajul" onclick="return posting.censor()" asp-page-handler="EditForumPost" />
            break;
        case PostingActions.NewPrivateMessage:
            <input type="submit" value="Trimite mesajul" onclick="return posting.censor()" asp-page-handler="PrivateMessage" />
            break;
        default:
            <span class="validation">A intervenit o eroare, pagina nu a fost afișată corect.</span>
            break;
    }
</form>

<script>
    var tribute = new Tribute({
        values: @Html.Raw(_writingService.ToCamelCaseJson(await _cacheService.GetFromCache<List<KeyValuePair<string, string>>>(Model.GetActualCacheKey("Users", false)))),
        trigger: "@@",
        allowSpaces: true
    });

    tribute.attach(document.getElementById("message"));

    var pollExpiration = document.getElementById("pollExpiration");
    if (pollExpiration) {
        posting.showExpirationDate(pollExpiration.value);
    }
</script>

<div id="imgcheckstatus" class="Popup"></div>

@if (Model.PreviewablePost != null)
{
    <div class="MiddleBox" id="preview">
        <h4 style="float:left">Previzualizează</h4>
        <div style="float:right; cursor:pointer; font-weight:bold; margin-top:10px; margin-bottom:10px" onclick="showElement('preview')">Închide [X]</div>

        @if (Model.PreviewablePoll != null)
        {
            <div id="votes" style="display:block; clear: both;">
                <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.PreviewablePoll.PollTitle))</h3>
                <div>Chestionarul @(Model.PreviewablePoll.PollEnded ? "a fost" : "va fi") inchis: @(Model.PreviewablePoll.PollEnd.HasValue ? Model.PreviewablePoll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>

                @if (Model.PreviewablePoll.PollMaxOptions > 1)
                {
                    foreach (var option in Model.PreviewablePoll.PollOptions)
                    {
                        <table style="border:none; padding:unset; margin:unset; width:100%">
                            <tr style="border-bottom:solid 1px black">
                                <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                    @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                                </td>
                                <td>
                                    <input type="checkbox" name="Votes" value="@option.PollOptionId" />
                                </td>
                            </tr>
                        </table>
                    }
                }
                else
                {
                    foreach (var option in Model.PreviewablePoll.PollOptions)
                    {
                        <table style="border:none; padding:unset; margin:unset; width:100%">
                            <tr style="border-bottom:solid 1px black">
                                <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                    @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                                </td>
                                <td>
                                    <input type="radio" name="Votes" value="@option.PollOptionId" />
                                </td>
                            </tr>
                        </table>
                    }
                }
                <br />
                <input type="button" value="Trimite vot" />
            </div>
        }
        <div class="RowMargin Color0" style="margin-top: 50px; position:relative" onload="onPostLoad()">
            <div class="FlexRow">
                @await Html.PartialAsync(
                 "_SummaryPartial",
                 new CustomPartials._SummaryPartialModel(Model.PreviewablePost.AuthorId, Model.PreviewablePost.AuthorName, Model.PreviewablePost.AuthorColor, Model.PreviewablePost.PostCreationTime, Model.PreviewablePost.PostId.Value,
                     UserDateFormat, Model.PreviewablePost.AuthorHasAvatar, Model.PreviewablePost.AuthorRank, null, null, null, true)
                )
                <div class="ForumContent VerticalContent FlexRight" id="@Model.PreviewablePost.PostId">
                    <span style="display:flex">
                        <span class="PostTitle">
                            <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@Model.PreviewablePost.PostId">@Html.Raw(Model.PreviewablePost.PostSubject)</a>
                        </span>
                        <span style="margin-left:auto">
                            <span class="CollapsedMenu" onclick="expandCollapsedMenu('summary@(Model.PreviewablePost.PostId.Value)', 'button@(Model.PreviewablePost.PostId.Value)', true)" id="button@(Model.PreviewablePost.PostId.Value)" style="color:#@Model.PreviewablePost.AuthorColor;margin-left: auto; height:auto">
                                @Html.Raw(Model.PreviewablePost.AuthorName)
                            </span>
                        </span>
                    </span>
                    <div>
                        <br />
                        @Html.Raw(Model.PreviewablePost.PostText)
                        @foreach (var attachment in Model.PreviewablePost.Attachments)
                        {
                            <br />
                            @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                        }
                        <br />
                    </div>
                    <div class="PostFooter">
                        @if (Model.PreviewablePost.LastEditTime > 0)
                        {
                            <br />
                            <div class="Caption" style="color:#495d6c">
                                Ultima dată modificat de @Model.PreviewablePost.LastEditUser pe
                                <script>
                                    writeDate("@Model.PreviewablePost.LastEditTime.ToUtcTime().ToString("o")", "@UserDateFormat");
                                </script>
                                @if (!string.IsNullOrWhiteSpace(Model.PreviewablePost.LastEditReason))
                                {
                                    <span>. Motiv: @Model.PreviewablePost.LastEditReason</span>
                                }
                                . Modificări în total: @Model.PreviewablePost.EditCount.
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.PreviewablePost.AuthorSignature))
                        {
                            <div class="Signature">
                                <div style="width:25%; display:inline-block; border-bottom:solid 1px black">&nbsp;</div>
                                <br />
                                @Html.Raw(Model.PreviewablePost.AuthorSignature)
                                <br /> <br />
                            </div>
                        }
                        <br />
                    </div>
                </div>
            </div>
        </div>
        <script>
            var element = document.getElementById("preview");
            if (element.offsetHeight < element.scrollHeight || element.offsetWidth < element.scrollWidth) {
                document.write(
                    "<div style=\"float: right; cursor: pointer; font-weight: bold; margin-top: 10px; margin-bottom: 10px\" onclick=\"showElement('preview')\">Închide [X]</div>"
                );
            } 
        </script>
    </div>
}