@page

@using CustomPartials
@using LazyCache
@using Objects
@using Services
@using Domain
@using Domain.Extensions
@using Domain.Utilities

@inject IForumTreeService _forumService
@inject IBBCodeRenderingService _renderingService
@inject IAppCache _cache

@model PhpbbInDotnet.Forum.Pages.ModeratorModel
@{
    var Lang = Model.Language;
    ViewData["Title"] = Model.TranslationProvider.Moderator[Lang, "MOD_PANEL"];
    Layout = "~/Pages/_Layout.cshtml";
    var CurrentUser = Model.ForumUser;
    var UserDateFormat = CurrentUser.UserDateFormat ?? Model.TranslationProvider.GetDefaultDateFormat(Lang);
    var isForumSelected = Model.ForumId > 0 && !string.IsNullOrWhiteSpace(Model.ForumName);
    var hasTopics = Model.Topics?.SelectMany(t => t.Topics ?? Enumerable.Empty<TopicDto>())?.Any() == true;
    var forumTree = await _forumService.GetForumTree(CurrentUser, false, false);
}

<style>
    .FlexBox {
        width: 50%;
        margin: 10px;
    }

    @@media(max-width: 800px) {
        .FlexBox {
            width: 100%;
        }
    }
</style>

<h3>@Html.Raw(Model.TranslationProvider.Moderator[Lang, "MOD_PANEL"])</h3>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js" integrity="sha512-zYXldzJsDrNKV+odAwFYiDXV2Cy37cwizT+NkuiPGsa9X1dOz04eHvUWVuxaJ299GvcJT31ug2zO4itXBjFx4w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<environment include="Development">
    <script src="~/js/tabbedPage.js"></script>
    <script src="~/js/moderator.js"></script>
    <link rel="stylesheet" href="~/css/admin.css" />
    <link rel="stylesheet" href="~/css/tabbedPage.css" />
    <link rel="stylesheet" href="~/css/pagination.css" />
</environment>
<environment exclude="Development">
    <link rel="stylesheet" href="~/css/admin.min.css" asp-append-version="true" />
</environment>

<script>
    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = $('#ForumIdInput');
        if (forumInput != null) {
            forumInput.val(forumId);
        }
    }

    var mod = new Moderator(
        '@ModeratorTopicActions.MoveTopic',
        '@ModeratorPostActions.MoveSelectedPosts',
        '@ModeratorPostActions.SplitSelectedPosts',
        '@ModeratorTopicActions.CreateShortcut',
    );

    $(window).on('load', function () {
        if (@Json.Serialize(Model.ScrollToAction)) {
            document.getElementById('SubmitTopics').scrollIntoView();
        }
        if (@Json.Serialize(!string.IsNullOrWhiteSpace(Model.Message))) {
            $('#TopicAction').val('@EnumUtility.DefaultValue');
            $('#DestinationForumId').val('');
        }
    });

    //image resize constant
    maxWidth = window.innerWidth > 800 ? window.innerWidth * 0.5 : window.innerWidth * 0.85;
</script>

<span class="@Model.MessageClass">@Html.Raw(Model.Message)</span>

<div class="tab">
    <button class="@(Model.Mode == ModeratorPanelMode.TopicModeration ? "tablinks active" : "tablinks")" onclick="openTab(event, 'Topics')">
        @Html.Raw(Model.TranslationProvider.Moderator[Lang, "MODERATE_TOPICS", Casing.Title])
    </button>
    <button class="@(Model.Mode == ModeratorPanelMode.Reports ? "tablinks active" : "tablinks")" onclick="openTab(event, 'Reports')">
        @Html.Raw(Model.TranslationProvider.Moderator[Lang, "OPEN_REPORTS", Casing.Title])
    </button>
    <button class="@(Model.Mode == ModeratorPanelMode.RecycleBin ? "tablinks active" : "tablinks")" onclick="openTab(event, 'RecycleBin')">
        @Html.Raw(Model.TranslationProvider.Moderator[Lang, "RECYCLE_BIN", Casing.Title])
    </button>
</div>

<div id="Topics" class="tabcontent" style="@(Model.Mode == ModeratorPanelMode.TopicModeration ? "display:inherit" : "display:none")">
    @if (isForumSelected)
    {
        <h4>
            @Html.Raw(Model.TranslationProvider.Moderator[Lang, "FORUM_TO_MODERATE"]):
            <a asp-page="ViewForum" asp-route-forumId="@Model.ForumId">
                @Html.Raw(Model.ForumName)
            </a>
        </h4>
    }
    <span onclick="showForumTree(this)" class="SpanLikeLink nowrap" style="display:block">
        @Html.Raw(Model.TranslationProvider.Moderator[Lang, "CHOOSE_FORUM_TO_MODERATE", Casing.FirstUpper])
    </span>
    <div id="forumTree" style="@(isForumSelected ? "display:none" : "display:unset")">
        @await Html.PartialAsync(
         "_ForumTreePartial",
         new _ForumTreePartialModel(
             tree: forumTree,
             forumId: Model.ForumId == 0 ? null : Model.ForumId
         ),
         ViewData)
        <p></p>
        <form>
            <input type="hidden" name="ForumId" id="ForumIdInput" />
            <input type="hidden" name="Mode" value="@ModeratorPanelMode.TopicModeration" />
            <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[Lang, "GO", Casing.FirstUpper])" class="MyButton SpacedButton" />
            @Html.AntiForgeryToken()
        </form>
    </div>

    @if(hasTopics)
    {
        <hr class="BoxSeparator" />
        @await Html.PartialAsync(
            "_TopicDisplayPartial",
            new _TopicDisplayPartialModel(CurrentUser, Lang, Model.Topics!)
            {
                ForumId = Model.ForumId,
                TopicSelectionOptions = new TopicSelectionOptions(
                    inputName: "SelectedTopics",
                    formName: "SubmitTopics",
                    inputValueFactory: topic => topic.TopicId!.Value.ToString())
                    {
                        SelectedTopicIds = Model.GetTopicIds(),
                        OnChange = "appendToStringList(this, 'selectedTopicIds')"
                    }
            })
        <hr class="BoxSeparator" />
    }
    else if (isForumSelected)
    {
        <p>&nbsp;</p>
        <h5>@Html.Raw(Model.TranslationProvider.Moderator[Lang, "NO_TOPICS"])</h5>
        <p>&nbsp;</p>
    }

    @if (isForumSelected && hasTopics)
    {
        <button onclick="selectAllCheckboxes('Topics')" type="button" class="MyButton SpacedButton">
            &#x2714;&nbsp;@Html.Raw(Model.TranslationProvider.Moderator[Lang, "SELECT_ALL_TOPICS"])
        </button>
        <form method="post" name="SubmitTopics" id="SubmitTopics" asp-page-handler="ManageTopics">
            @Html.Raw(Model.TranslationProvider.Moderator[Lang, "WITH_SELECTED_TOPICS"]):
            @Html.DropDownList(
                  "TopicAction",
                  EnumUtility.EnumToDropDownList<ModeratorTopicActions>(
                      selectedItem: null,
                      textTransform: item => Model.TranslationProvider.Enums[Lang, item],
                      defaultText: Model.TranslationProvider.BasicText[Lang, "SELECT_AN_OPTION"],
                      valueFilter: action => action != ModeratorTopicActions.DeleteTopic && action != ModeratorTopicActions.RestoreTopic
                  ),
                  new { onchange = "mod.showTopicExtraInput(this)", id = "TopicAction", style = "max-width:400px; height: 30px; padding-top: 0px" }
              )
            <div id="extraInputTopic" style="display:@(Model.DestinationForumId > 0 ? "block" : "none")">
                <br />
                <input type="text" asp-for="DestinationForumId" placeholder="@Html.Raw(Model.TranslationProvider.Moderator[Lang, "DESTINATION_FORUM_ID"])" style="width:250px" /><br />
                <a href="javascript:$('#modConfirmation').submit();">@Html.Raw(Model.TranslationProvider.Moderator[Lang, "CHOOSE_DESTINATION_FORUM_ID"])</a>
                <span asp-validation-for="DestinationForumId" class="validation"></span>
            </div>
            <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[Lang, "SUBMIT", Casing.FirstUpper])" onclick="return mod.confirmAction('#TopicAction');" class="MyButton SpacedButton" style="height:30px" />
            <input type="hidden" asp-for="ForumId" />
            <input type="hidden" asp-for="Mode" />
            @Html.AntiForgeryToken()
        </form>
        <form id="modConfirmation" asp-page="Confirm" method="get">
            <input type="hidden" asp-for="ForumId" />
            <input type="hidden" asp-for="TopicAction" id="topicAction" />
            <input type="hidden" name="showTopicSelector" id="showTopicSelector" value="false" />
            <input type="hidden" name="selectedTopicIds" id="selectedTopicIds" value="" />
            <input type="hidden" name="postAction" id="postAction" value="" />
            <input type="hidden" name="handler" value="ModeratorConfirmation" />
            <input type="hidden" name="Destination" id="Destination" value="./Moderator" />
            @Html.AntiForgeryToken()
        </form>
    }
</div>

<div id="Reports" class="tabcontent" style="@(Model.Mode == ModeratorPanelMode.Reports ? "display:inherit" : "display:none")">
    <h4>@Html.Raw(Model.TranslationProvider.Moderator[Lang, "MANAGE_REPORTS"])</h4>
    @{ var atLeastOneReport = false; }
    @foreach (var report in Model.Reports ?? Enumerable.Empty<ReportDto>())
    {
        atLeastOneReport = true;
        <hr class="BoxSeparator" />
        <div class="FlexRow">
            <input name="SelectedReports" type="checkbox" value="@report.Id" form="SubmitReports" style="margin-right:10px; align-self:safe center" />
            <div class="FlexCenter" style="width:100%">
                <div class="FlexBox">
                    <span>@Html.Raw(Model.TranslationProvider.BasicText[Lang, "REPORT", Casing.FirstUpper]): @Html.Raw(report.ReasonTitle)</span>
                    <br />
                    <span class="Caption">
                        @Html.Raw(report.ReasonDescription)
                    </span>
                    <br />
                    <span>@Html.Raw(Model.TranslationProvider.BasicText[Lang, "ADDITIONAL_DETAILS", Casing.FirstUpper]): @Html.Raw(report.Details)</span>
                    <br />
                    <span>@Html.Raw(Model.TranslationProvider.BasicText[Lang, "REPORTING_USER", Casing.FirstUpper]): @Html.Raw(report.ReporterUsername)</span>
                </div>
                <div class="FlexBox">
                    <span class="Caption">
                        @Html.Raw(_forumService.GetPathText(forumTree, report.ForumId))
                    </span>
                    <br />
                    <a asp-page="ViewTopic" asp-page-handler="byPostId" asp-route-postId="@report.PostId">
                        @Html.Raw(report.TopicTitle)
                    </a>
                </div>
            </div>
        </div>
    }
    @if (!atLeastOneReport)
    {
        <p>&nbsp;</p>
        @Html.Raw(Model.TranslationProvider.Moderator[Lang, "NO_OPEN_REPORTS"])
        <p>&nbsp;</p>
    }
    else
    {
        <hr class="BoxSeparator" />
    }
    <button onclick="selectAllCheckboxes('Reports')" type="button" class="MyButton SpacedButton" @(atLeastOneReport ? "" : "disabled")>
        &#x2714;&nbsp;@Html.Raw(Model.TranslationProvider.Moderator[Lang, "SELECT_ALL_REPORTS"])
    </button>
    <input type="submit" value="&#x274E;&nbsp;@Html.Raw(Model.TranslationProvider.Moderator[Lang, "CLOSE_SELECTED_REPORTS"])" form="SubmitReports" onclick="return confirm('@Html.Raw(Model.TranslationProvider.Moderator[Lang, "CONFIRM_CLOSE_REPORTS"])');" class="MyButton SpacedButton" @(atLeastOneReport ? "" : "disabled") />
    <form method="post" name="SubmitReports" id="SubmitReports" asp-page-handler="CloseReports">
        <input type="hidden" name="Mode" value="@ModeratorPanelMode.Reports" />
        <input type="hidden" asp-for="ForumId" />
        @Html.AntiForgeryToken()
    </form>
    <p>&nbsp;</p>
</div>

<div id="RecycleBin" class="tabcontent" style="@(Model.Mode == ModeratorPanelMode.RecycleBin ? "display:inherit" : "display:none")">
    <h4>@Html.Raw(Model.TranslationProvider.Moderator[Lang, "MANAGE_DELETED_ITEMS"])</h4>
    @{
        var correlationId = Guid.NewGuid();
        var atLeastOneItem = false;
    }

    @foreach (var itemGroup in Model.DeletedItems ?? Enumerable.Empty<DeletedItemGroup>())
    {
        var items = itemGroup.Items ?? Enumerable.Empty<DeletedItemDto>();
        var itemName = Model.TranslationProvider.BasicText[Lang, itemGroup.Type.ToString().ToUpperInvariant()];

        <h4 onclick="expandSection('@(itemGroup.Type)Section', '@(itemGroup.Type)Char')" style="cursor:pointer" id="@(itemGroup.Type)Title">
            @switch (itemGroup.Type)
            {
                case RecycleBinItemType.Forum:
                    @Html.Raw(Model.TranslationProvider.BasicText[Lang, "FORUMS", Casing.Title])
                    break;

                case RecycleBinItemType.Topic:
                    @Html.Raw(Model.TranslationProvider.BasicText[Lang, "TOPICS", Casing.Title])
                    break;

                case RecycleBinItemType.Post:
                    @Html.Raw(Model.TranslationProvider.BasicText[Lang, "POSTS", Casing.Title])
                    items = from i in items
                            group i by (i.Value as PostDto)?.TopicId into groups
                            from g in groups
                            orderby (g.Value as PostDto)?.PostTime descending
                            select g;
                    break;
            }
            <span id="@(itemGroup.Type)Char">&#x1F53D;</span>
        </h4>
        <p></p>
        <div id="@(itemGroup.Type)Section" style="display:none">
            @foreach (var item in items)
            {
                atLeastOneItem = true;
                <label>
                    <input name="SelectedDeletedItems" type="checkbox" value="@item.Type/@item.Id" form="SubmitDeletedItems" />
                    @Html.Raw(string.Format(Model.TranslationProvider.Moderator[Lang, "SELECT_THIS_ITEM_FORMAT"], itemName))
                </label>
                <span>
                    &bull;
                    @Html.Raw(Model.TranslationProvider.Moderator[Lang, "DELETED_AT"]):
                    <formatted-date date="@item.DeleteTime.ToUtcTime().ToString("o")" format="@UserDateFormat" />
                    &bull;
                    @Html.Raw(Model.TranslationProvider.Moderator[Lang, "DELETED_BY"]):
                    @Html.Raw(item.DeleteUserName)
                </span>
                <p></p>
                @switch (item.Type)
                {
                    case RecycleBinItemType.Forum:
                        var forum = item.Value as ForumDto;
                        <span class="Caption">
                            @Html.Raw(_forumService.GetPathText(forumTree, forum!.ParentId ?? 0))
                        </span>
                        <br />
                        <strong>
                            @Html.Raw(forum.ForumName)
                        </strong>
                        @if (!string.IsNullOrWhiteSpace(forum.ForumDesc))
                        {
                            <br />
                            <span class="Caption">
                                @Html.Raw(_renderingService.BbCodeToHtml(forum.ForumDesc, string.Empty))
                            </span>
                        }
                        break;

                    case RecycleBinItemType.Topic:
                        var topic = item.Value as TopicDto;
                        <span class="Caption">
                            @Html.Raw(_forumService.GetPathText(forumTree, topic!.ForumId ?? 0))
                        </span>
                        <br />
                        <strong>
                            @Html.Raw(topic.TopicTitle)
                        </strong>
                        break;

                    case RecycleBinItemType.Post:
                        var post = item.Value as PostDto;
                        <span class="Caption">
                            @Html.Raw(_forumService.GetPathText(forumTree, post!.ForumId))
                        </span>
                        <br />
                        foreach (var attach in post.Attachments!)
                        {
                            attach.CorrelationId = correlationId;
                            _cache.Add(CacheUtility.GetAttachmentCacheKey(attach.Id, correlationId), attach, TimeSpan.FromMinutes(1));
                        }
                        @await Html.PartialAsync("_PostPartial", new _PostPartialModel
                        {
                            CurrentUser = Model.ForumUser,
                            Post = post,
                            Language = Lang,
                            IsPostFirstInPage = true,
                            IsPostLastInPage = true,
                            DisablePostTitleLink = true
                        }, ViewData)
                        break;
                }
                <hr class="BoxSeparator" />
            }
            <div style="width:100%; text-align:right; font-size:1.5em">
                <a href="#@(itemGroup.Type)Title">&#x23EB;</a>
            </div>
        </div>
        <p>&nbsp;</p>
    }
    @if (!atLeastOneItem)
    {
        <p>&nbsp;</p>
        @Html.Raw(Model.TranslationProvider.Moderator[Lang, "NO_DELETED_ITEMS"])
        <p>&nbsp;</p>
    }
    <form method="post" name="SubmitDeletedItems" id="SubmitDeletedItems" asp-page-handler="RestoreDeletedItems">
        <input type="submit" value="&#x274E;&nbsp;@Html.Raw(Model.TranslationProvider.Moderator[Lang, "RESTORE_SELECTED_DELETED_ITEMS"])" onclick="return confirm('@Html.Raw(Model.TranslationProvider.Moderator[Lang, "CONFIRM_RESTORE_DELETED_ITEMS"])');" class="MyButton SpacedButton" @(atLeastOneItem ? "" : "disabled") />
        <input type="hidden" name="Mode" value="@ModeratorPanelMode.RecycleBin" />
        <input type="hidden" asp-for="ForumId" />
        @Html.AntiForgeryToken()
    </form>
    <p>&nbsp;</p>
</div>
