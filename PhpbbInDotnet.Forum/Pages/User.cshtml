@page
@using PhpbbInDotnet.Utilities

@model PhpbbInDotnet.Forum.Pages.UserModel
@inject Services.UserService _userService
@inject Database.ForumDbContext _context
@{
    ViewData["Title"] = "User";
    Layout = "~/Pages/_Layout.cshtml";
    var viewingUser = await Model.GetCurrentUserAsync();
    var pageUser = await _userService.DbUserToLoggedUserAsync(Model.CurrentUser);
    var isSelf = viewingUser.UserId == Model.CurrentUser.UserId;
    var canEdit = await Model.CanEdit();
    var hasTabs = isSelf || await Model.IsCurrentUserAdminHere();
    var showFlexAvatar = !string.IsNullOrWhiteSpace(Model.CurrentUser.UserAvatar) && !canEdit;
    var rankList = await _userService.GetRankListAsync();
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/posting.css" />
    <script src="~/js/tabbedPage.js"></script>
    <link rel="stylesheet" href="~/css/tabbedPage.css" />
</environment>
<style>
    @@media (max-width: 768px) {
        .FlexRight {
            text-align: center;
            padding-left: 0px;
        }

            .FlexRight input[type=file] {
                margin: 0 auto;
            }
    }

    .FlexRight input, select {
        width: 230px;
    }

    .FlexCaption {
        font-weight: bold;
        text-align: right;
        margin-bottom: auto;
    }
</style>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
    var $ = jQuery.noConflict();
    $(function () {
        $("#datepicker").datepicker({
            dateFormat: 'dd.mm.yy',
            firstDay: 1,
            dayNamesMin: ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sâ'],
            dayNamesShort: ['Dum', 'Lun', 'Mar', 'Mie', 'Joi', 'Vin', 'Sâm'],
            dayNames: ['Duminică', 'Luni', 'Marți', 'Miercuri', 'Joi', 'Vineri', 'Sâmbătă'],
            monthNames: ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'],
            monthNamesShort: ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun', 'Iul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
        });
    });

    function changeTab(edit, manageFoes) {
        $('#changeModeViewAsAnother').val(!edit);
        $('#changeModeManageFoes').val(manageFoes);
        $('#changeMode').submit();
    }

</script>

<form method="get" id="changeMode">
    <input type="hidden" asp-for="UserId" id="changeModeUserId" />
    <input type="hidden" asp-for="ViewAsAnother" id="changeModeViewAsAnother" />
    <input type="hidden" asp-for="ManageFoes" id="changeModeManageFoes" />
</form>

<form method="post" asp-page-handler="RemoveFoe" id="RemoveFoe" name="RemoveFoe">
    <input type="hidden" asp-for="UserId" />
    <input type="hidden" asp-for="ViewAsAnother" />
</form>
<form method="post" asp-page-handler="AddFoe" id="AddFoe" name="AddFoe">
    <input type="hidden" asp-for="UserId" />
    <input type="hidden" asp-for="ViewAsAnother" />
</form>
<h3>
    Panoul utilizatorului
    @if (!isSelf && !canEdit)
    {
        <span> -&nbsp;@Model.CurrentUser.Username</span>
    }
</h3>
@if (hasTabs)
{
    <div class="tab">
        <button class="@(canEdit ? "tablinks" : "tablinks active")" onclick="changeTab(false, false)">Pofil - privire generală</button>
        <button class="@(canEdit && !(Model.ManageFoes ?? false) ? "tablinks active" : "tablinks")" onclick="changeTab(true, false)">Modifică profil</button>
        <button class="@(canEdit && (Model.ManageFoes ?? false) ? "tablinks active" : "tablinks")" onclick="changeTab(true, true)">Vezi persoanele neagreate</button>
    </div>
}

@if (Model.ManageFoes ?? false)
{
    <div class="tabcontent" style="display:block !important">
        @if (!Model.Foes.Any())
        {
            <i>Nici un utilizator pe lista de persoane neagreate.</i>
        }
        else
        {
            <i>Utilizatorilor din lista de mai jos nu le vezi postările și nici nu puteți comunica prin mesageria privată. Utilizatorii nu știu că i-ai trecut în lista persoanelor neagreate.</i>
            <form method="post" name="RemoveFoes" id="RemoveFoes" asp-page-handler="RemoveMultipleFoes">
                @foreach (var foe in Model.Foes)
                {
                    <div style="margin: 15px 15px">
                        <input name="SelectedFoes" type="checkbox" value="@foe.UserId" style="margin-right:10px" />
                        <a asp-page="User" asp-route-userId="@foe.UserId">
                            @Html.Raw(System.Web.HttpUtility.HtmlDecode(foe.Username))
                        </a>
                    </div>
                }
                <hr class="BoxSeparator" />
                <button onclick="selectAllCheckboxes()" type="button" class="MyButton">&#x2714;&nbsp;Selectează toți utilizatorii</button>
                <span>&nbsp;&bull;&nbsp;</span>
                <input type="submit" value="&#x1F91D;&nbsp;Elimină utilizatorii selectați din listă"
                       onclick="return confirm('Dacă elimini utilizatorii selectați din lista persoanelor neagreate, vei putea vedea mesajele lor și veți putea comunica prin mesageria privată.\n\nUtilizatorii nu vor fi notificați.\n\nContinui?');"
                       class="MyButton" />
                <input type="hidden" asp-for="UserId" />
                <input type="hidden" asp-for="ViewAsAnother" />
                <input type="hidden" asp-for="ManageFoes" />
            </form>
        }
        <p></p>
        @if (Model.Mode == UserPageMode.RemoveMultipleFoes)
        {
            <span style="color:darkgreen; font-weight: bold">
                Utilizatorii selectați au fost eliminați din lista ta de persoane neagreate.
            </span>
        }
    </div>
}
else
{
    <div class="@(hasTabs ? "tabcontent" : "")" style="@(hasTabs ? "display:block !important" : "")">
        <form method="post" enctype="multipart/form-data">
            <div class="@(showFlexAvatar ? "FlexCenter" : "")">
                @if (showFlexAvatar)
                {
                    <div>
                        <img src="./File?userId=@Model.CurrentUser.UserId&handler=avatar" />
                    </div>
                }

                <div class="@(showFlexAvatar ? "FlexRight" : "")" style="@(showFlexAvatar ? "width: 100%" : "")">
                    <div class="FlexCenter">
                        <div class="FlexCaption">
                            Nume utilizator
                        </div>
                        <div class="FlexRight PostInputWidth">
                            @if (!(Model.ViewAsAnother ?? false) && await Model.IsCurrentUserAdminHere())
                            {
                                <input asp-for="CurrentUser.Username" />
                            }
                            else
                            {
                                <span style="font-weight:bold; color:#@(string.IsNullOrWhiteSpace(Model.CurrentUser.UserColour) ? "000000" : Model.CurrentUser.UserColour)">
                                    @Html.Raw(Model.CurrentUser.Username)
                                </span>
                                @if (isSelf && canEdit)
                                {
                                    <br />
                                    <span class="Caption">Trimite un e-mail la <a href="mailto:admin@metrouusor.com">admin@metrouusor.com</a> dacă dorești schimbarea numelui de utilizator.</span>
                                }
                            }
                        </div>
                    </div>
                    @if (!(Model.ViewAsAnother ?? false) && isSelf)
                    {
                        <p></p>
                        <div class="FlexCenter">
                            <div class="FlexCaption">
                                Parola nouă
                            </div>
                            <div class="FlexRight PostInputWidth">
                                <input asp-for="FirstPassword" type="password" autocomplete="new-password" /><br />
                                <span class="Caption">Lasă necompletat dacă nu dorești să o modifici.</span>
                            </div>
                        </div>
                        <p></p>
                        <div class="FlexCenter">
                            <div class="FlexCaption">
                                Repetă parola nouă
                            </div>
                            <div class="FlexRight PostInputWidth">
                                <input asp-for="SecondPassword" type="password" autocomplete="new-password" />
                                <span asp-validation-for="SecondPassword" class="validation"></span>
                            </div>
                        </div>
                    }
                    @{
                        var rank = rankList.FirstOrDefault(x => x.RankId == Model.UserRank)?.RankTitle;
                        if (string.IsNullOrWhiteSpace(rank))
                        {
                            rank = "Membru înregistrat";
                        }
                        if (!canEdit && rank != null)
                        {
                            <p></p>
                            <div class="FlexCenter">
                                <div class="FlexCaption">
                                    Rang
                                </div>
                                <div class="FlexRight PostInputWidth">
                                    @Html.Raw(rank)
                                </div>
                            </div>
                        }
                    }

                    @{
                        var birthday = DateTime.MinValue;
                        if (canEdit || DateTime.TryParse(Model.CurrentUser.UserBirthday, out birthday))
                        {
                            <p></p>
                            <div class="FlexCenter">
                                @if (canEdit)
                                {
                                    <div class="FlexCaption">
                                        Data nașterii
                                    </div>
                                    <div class="FlexRight PostInputWidth">
                                        <input asp-for="Birthday" autocomplete="new-password" id="datepicker" /><br />
                                        <span class="Caption">Dacă este completată, se va afișa doar vârsta.</span><br />
                                        <span asp-validation-for="Birthday" class="validation"></span>
                                    </div>
                                }
                                else if (birthday != DateTime.MinValue)
                                {
                                    <div class="FlexCaption">
                                        Vârsta
                                    </div>
                                    <div class="FlexRight PostInputWidth">
                                        @((int)(DateTime.UtcNow.Subtract(birthday).TotalDays / 365.25)) ani
                                    </div>
                                }
                            </div>
                        }
                    }
                    <p></p>
                    <div class="FlexCenter">
                        <div class="FlexCaption">
                            Prezentare
                        </div>
                        <div class="FlexRight PostInputWidth">
                            @if (canEdit)
                            {
                                <input asp-for="CurrentUser.UserOcc" />
                            }
                            else
                            {
                                @Html.Raw(Model.CurrentUser.UserOcc)
                            }
                        </div>
                    </div>
                    <p></p>
                    <div class="FlexCenter">
                        <div class="FlexCaption">
                            Interese
                        </div>
                        <div class="FlexRight PostInputWidth">
                            @if (canEdit)
                            {
                                <input asp-for="CurrentUser.UserInterests" />
                            }
                            else
                            {
                                @Html.Raw(Model.CurrentUser.UserInterests)
                            }
                        </div>
                    </div>
                    <p></p>
                    <div class="FlexCenter">
                        <div class="FlexCaption">
                            Localitate
                        </div>
                        <div class="FlexRight PostInputWidth">
                            @if (canEdit)
                            {
                                <input asp-for="CurrentUser.UserFrom" />
                            }
                            else
                            {
                                @Html.Raw(Model.CurrentUser.UserFrom)
                            }
                        </div>
                    </div>
                </div>
            </div>
            @if (canEdit)
            {
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Formatul datelor afișate
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <select id="CurrentUser_UserDateformat" name="CurrentUser.UserDateformat">
                        </select>
                        <script>
                        var dateFormats = @Json.Serialize(new[] { "dddd, dd.MM.yyyy, HH:mm", "ddd, dd.MM.yyyy, HH:mm", "dd.MM.yyyy, HH:mm", "d MMMM yyyy, HH:mm", "dddd, d MMMM yyyy, HH:mm", "ddd, d MMMM yyyy, HH:mm", "dddd, d MMMM yyyy, HH:mm" });
                        var now = new Date('@DateTime.UtcNow.ToString("o")');
                        dateFormats.forEach(format => {
                            var text = now.format(format);
                            var o = new Option(text, format, false, format == '@pageUser.UserDateFormat');
                            $(o).html(text);
                            $('#CurrentUser_UserDateformat').append(o);
                        })
                        </script>
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Imaginea de profil
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @if (!string.IsNullOrWhiteSpace(Model.CurrentUser.UserAvatar))
                        {
                            <img src="./File?userId=@Model.CurrentUser.UserId&handler=avatar" /><br />
                            @Html.Raw(Model.CurrentUser.UserAvatar)<br />
                            <input asp-for="DeleteAvatar" style="width:auto" /> <span>Șterge acestă imagine de profil</span><br /><br />
                        }
                        <input asp-for="Avatar" class="HiddenFileInput" />
                        <label for="Avatar" class="MyButton">Alege o imagine de profil nouă</label><br />
                        <span class="Caption">Sunt permise imagini cu dimensiunea maximă 200 px / 200 px.</span><br />
                        <span asp-validation-for="Avatar" class="validation"></span>
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Tema forumului
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @Html.DropDownListFor(
                            m => m.CurrentUser.UserStyle, 
                            await _context.PhpbbStyles.AsNoTracking().Select(x => new SelectListItem(x.StyleName, x.StyleId.ToString(), Model.CurrentUser.UserStyle == x.StyleId)).ToListAsync()
                        )
                    </div>
                </div>
            }
            @if (!(Model.ViewAsAnother ?? false) && await Model.IsCurrentUserAdminHere())
            {
                var permissions = new List<SelectListItem>(
                    (await _userService.GetUserRolesLazy()).Select(
                        p => new SelectListItem(p.RoleDescription, p.RoleId.ToString(), p.RoleId == Model.AclRole)
                    )
                );
                permissions.Add(new SelectListItem("Nici un rol atribuit", "-1", !permissions.Any(p => p.Selected)));

                var ranks = new List<SelectListItem>(
                    rankList.Select(
                        r => new SelectListItem(r.RankTitle, r.RankId.ToString(), r.RankId == Model.CurrentUser.UserRank)
                    )
                );
                ranks.Add(new SelectListItem("Nici un rang atribuit", "0", !ranks.Any(p => p.Selected)));

                var groups = new List<SelectListItem>(
                    (await _userService.GetGroupListAsync()).Select(
                        g => new SelectListItem(g.GroupName, g.GroupId.ToString(), g.GroupId == Model.GroupId)
                    )
                );
                <hr class="BoxSeparator" />
                <div class="FlexCenter">
                    <h4>Administrează cont</h4>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Timpul cât este permisă<br />editarea mesajelor proprii:
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <input asp-for="CurrentUser.UserEditTime" /><br />
                        <span class="Caption">
                            Minute de la publicarea mesajului.<br />
                            Aceeași setare există și la grupuri și se aplică valoarea cea mai restrictivă diferită de zero.<br />
                            Zero semnifică „timp nelimitat” și se aplică chiar dacă cealaltă setare este diferită de zero.
                        </span><br />
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Permisiunile utilizatorului
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @Html.DropDownListFor(m => m.AclRole, permissions, new { autocomplete = "new-password" })
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Rangul utilizatorului
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @if (canEdit)
                        {
                            @Html.DropDownListFor(m => m.UserRank, ranks, new { autocomplete = "new-password" })
                        }
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Grupul utilizatorului
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @if (canEdit)
                        {
                            @Html.DropDownListFor(m => m.GroupId, groups, new { autocomplete = "new-password" })
                        }
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Culoarea utilizatorului
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @if (canEdit)
                        {
                            <input asp-for="CurrentUser.UserColour" /><br />
                            <span class="Caption">
                                La schimbarea grupului, această valoare este înlocuită cu culoarea grupului.<br />
                                Pentru a aloca o culoare personalizată, schimbă întâi grupul, apoi valoarea de aici.
                            </span>
                        }
                    </div>
                </div>
            }
            <hr class="BoxSeparator" />
            <div class="FlexCenter">
                <h4>Contact</h4>
            </div>
            <div class="FlexCenter">
                @if (canEdit)
                {
                    <div class="FlexCaption">
                        E-mail
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <input asp-for="Email" /><br />
                        <span class="Caption">Dacă modifici acest câmp, contul va deveni inactiv. Vei primi pe noua adresă de e-mail un mesaj cu instrucțiuni pentru reactivare.</span><br />
                        <input asp-for="ShowEmail" style="width:auto" />  Utilizatorii mă pot contacta prin intermediul email-ului.<br />
                        <span asp-validation-for="Email" class="validation"></span>
                    </div>
                }
                else
                {
                    var showMail = (Model.CurrentUser.UserAllowViewemail.ToBool() && !(viewingUser.Foes?.Contains(pageUser.UserId) ?? false) && !(pageUser.Foes?.Contains(viewingUser.UserId) ?? false)) || await Model.IsCurrentUserAdminHere();
                    if (showMail)
                    {
                        <button class="MyButton" onclick="location.href='mailto:@Html.Raw(Model.CurrentUser.UserEmail)'" type="button" @(isSelf ? "disabled" : "")>&#x2709;&nbsp;Trimite e-mail</button>
                    }
                    var showPMs = (_userService.HasPrivateMessagePermissions(viewingUser) && _userService.HasPrivateMessages(pageUser) && !(viewingUser.Foes?.Contains(pageUser.UserId) ?? false) && !(pageUser.Foes?.Contains(viewingUser.UserId) ?? false)) || (await Model.IsCurrentUserAdminHere() && _userService.HasPrivateMessagePermissions(pageUser));
                    if (showPMs)
                    {
                        if (showMail)
                        {
                            <span style="height:5px; width: 5px;">&nbsp;</span>
                        }
                        <button class="MyButton" onclick="location.href='/Posting?handler=PrivateMessage&receiverId=@Model.CurrentUser.UserId'" type="button" @(isSelf ? "disabled" : "")>&#x1F5E8;&nbsp;Trimite mesaj privat</button>
                    }
                    if (!canEdit && !string.IsNullOrEmpty(Model.CurrentUser.UserWebsite))
                    {
                        var website = Model.CurrentUser.UserWebsite;
                        if (!website.StartsWith("http", StringComparison.InvariantCultureIgnoreCase))
                        {
                            website = $"//{website}";
                        }
                        if (showPMs)
                        {
                            <span style="height:5px; width: 5px;">&nbsp;</span>
                        }
                        <button class="MyButton" onclick="window.open('@website', '_blank')" type="button">&#x1F310;&nbsp;Vizitează website</button>
                    }
                }
            </div>
            @if (canEdit)
            {
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Website
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <input asp-for="CurrentUser.UserWebsite" />
                    </div>
                </div>
            }
            @if (canEdit && _userService.HasPrivateMessagePermissions(pageUser))
            {
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Permite mesageria privată
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <input asp-for="AllowPM" style="width:auto" /> Utilizatorii mă pot contacta prin mesageria privată
                    </div>
                </div>
            }
            @if (!canEdit)
            {
                <hr class="BoxSeparator" />
                <div class="FlexCenter">
                    <h4>Statistici</h4>
                </div>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Membru din
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @{
                            var UserDateFormat = (await Model.GetCurrentUserAsync())?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
                            if (!DateTime.TryParse(DateTime.Now.ToString(UserDateFormat), out var _))
                            {
                                UserDateFormat = "dddd, dd.MM.yyyy, HH:mm";
                            }
                        }
                        <script>
                        writeDate("@Model.CurrentUser.UserRegdate.ToUtcTime().ToString("o")", "@UserDateFormat");
                        </script>
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Ultima dată activ
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <script>
                        writeDate("@Model.CurrentUser.UserLastvisit.ToUtcTime().ToString("o")", "@UserDateFormat");
                        </script>
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Total mesaje
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @Model.TotalPosts
                        @if (Model.TotalPosts > 0)
                        {
                            <span>&nbsp;-&nbsp;</span>
                            <a asp-page="Search" asp-page-handler="byAuthor" asp-route-authorId="@Model.CurrentUser.UserId">Arată mesajele utilizatorului</a>
                        }
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Mesaje pe zi (în medie)
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @Model.PostsPerDay.ToString("#########0.##")
                    </div>
                </div>
                <p></p>
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        Cel mai activ în subiectul
                    </div>
                    <div class="FlexRight PostInputWidth">
                        @if (Model.PreferredTopic.Id == null || Model.PreferredTopic.Title == null)
                        {
                            <span>-</span>
                        }
                        else
                        {
                            <a asp-page="./ViewTopic" asp-route-topicId="@Model.PreferredTopic.Id" asp-route-pageNum="1">@Html.Raw(Model.PreferredTopic.Title)</a>
                        }
                    </div>
                </div>
            }
            @if (canEdit)
            {
                <p>&nbsp;</p>
                <input class="MyButton" type="submit" value="Salvează modificările" style="width:auto" />
                <span asp-validation-for="CurrentUser" class="validation"></span>
            }
            @if (!isSelf && !canEdit)
            {
                var showAddFoe = !await _userService.IsUserModeratorInForum(pageUser, 0) && !await _userService.IsUserModeratorInForum(viewingUser, 0) && !(viewingUser.Foes?.Contains(pageUser.UserId) ?? false);
                var showRemoveFoe = viewingUser.Foes?.Contains(pageUser.UserId) ?? false;
                if (showAddFoe || showRemoveFoe)
                {
                    <hr class="BoxSeparator" />
                    <div class="FlexCenter">
                        @if (showAddFoe)
                        {
                            <input class="MyButton" type="submit" form="AddFoe" value="&#x1F6AB;&nbsp;Adaugă la persoane neagreate" style="font-size: 15px; margin-top:5px; vertical-align: top"
                                   onclick="return confirm('Dacă adaugi utilizatorul \'@Model.CurrentUser.Username\' în lista persoanelor neagreate, nu vei mai vedea mesajele lui și nu veți mai putea comunica prin mesageria privată.\n\nUtilizatorul nu va fi notificat.\n\nContinui?')" />
                        }
                        else if (showRemoveFoe)
                        {
                            <input class="MyButton" type="submit" form="RemoveFoe" value="&#x1F91D;&nbsp;Elimină din lista de persoane neagreate" style="font-size: 15px; margin-top:5px; vertical-align: top"
                                   onclick="return confirm('Dacă elimini utilizatorul \'@Model.CurrentUser.Username\' din lista persoanelor neagreate, vei putea vedea mesajele lui și veți putea comunica prin mesageria privată.\n\nUtilizatorul nu va fi notificat.\n\nContinui?')" />
                        }
                    </div>
                }
            }
            <input asp-for="CurrentUser.UserId" type="hidden" />
            @Html.AntiForgeryToken()
        </form>
        <p></p>
        <span style="color:darkgreen; font-weight: bold">
            @switch (Model.Mode)
            {
                case UserPageMode.Edit:
                    if (Model.EmailChanged)
                    {
                        @Html.Raw("Modificările au fost salvate. Vei fi deconectat și vei primi instrucțiuni pe noua adresă de email pentru a te putea reconecta la forum.");
                    }
                    else
                    {
                        @Html.Raw("Modificările au fost salvate.");
                    }
                    break;
                case UserPageMode.AddFoe:
                    @Html.Raw($"{Model.CurrentUser.Username} a fost adăugat la lista ta de persoane neagreate.");
                    break;
                case UserPageMode.RemoveFoe:
                    @Html.Raw($"{Model.CurrentUser.Username} a fost eliminat din lista ta de persoane neagreate.");
                    break;
            }
        </span>
    </div>
}
