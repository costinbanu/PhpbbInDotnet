@page
@model PhpbbInDotnet.Forum.Pages.ViewForumModel

@using Utilities
@using Objects
@inject Services.ForumTreeService _forumService

@{
    var Lang = Model.GetLanguage();
    var DocumentTitle = Model.ForumTitle;
    ViewData["Title"] = DocumentTitle;
    Layout = "~/Pages/_Layout.cshtml";
    var currentUser = Model.GetCurrentUser();
    var hasSubForums = Model.ForumId != 0 && _forumService.HasUnrestrictedChildren((await Model.GetForumTree(false, false)).Tree, Model.ForumId);
    var hasTopics = Model.Topics?.SelectMany(x => x.Topics).Any() ?? false;
    var userDateFormat = currentUser.UserDateFormat ?? Model.LanguageProvider.GetDefaultDateFormat(Lang);
    var isCurrentForumReadOnly = await _forumService.IsForumReadOnlyForUser(currentUser, Model.ForumId);
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
</environment>
<form asp-page-handler="MarkForumsRead" method="post" name="MarkForumsRead" id="MarkForumsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>
<form asp-page-handler="MarkTopicsRead" method="post" name="MarkTopicsRead" id="MarkTopicsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>


<script>
    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>

@if (currentUser.JumpToUnread == true)
{
    <script>
        $(window).on('load', function () {
            var element = $('.UnreadTitle');
            if (element && element.offset()) {
                window.scrollTo(0, element.offset().top - 20);
            }
        });
    </script>
}

<span style="padding-bottom: 10px">
    @Html.Raw(Model.LanguageProvider.BasicText[Lang, "PARENT_FORUM", Casing.FirstUpper]):
    <a asp-page="/ViewForum" asp-route-forumId="@Model.ParentForumId">@Html.Raw(Model.ParentForumTitle)</a>
</span>


@if (!currentUser.IsAnonymous)
{
    var additionalLinks = new List<string>();
    @if (hasSubForums || hasTopics)
    {
        @if (hasSubForums)
        {
            additionalLinks.Add($"<a href=\"javascript:MarkForumsRead.submit()\">{Model.LanguageProvider.BasicText[Lang, "MARK_FORUMS_READ", Casing.FirstUpper]}</a>");
        }
        @if (hasTopics)
        {
            additionalLinks.Add($"<a href=\"javascript:MarkTopicsRead.submit()\">{Model.LanguageProvider.BasicText[Lang, "MARK_TOPICS_READ", Casing.FirstUpper]}</a>");
        }
    }
    <span>&nbsp;&bull;&nbsp;</span>
    @await Html.PartialAsync(
        "_HeaderLinksPartial",
        new PhpbbInDotnet.Forum.Pages.CustomPartials._HeaderLinksPartialModel(Lang, false, additionalLinks.ToArray()),
        ViewData
    )
}
<p>&nbsp;</p>

<h2>@Html.Raw(DocumentTitle)</h2>
@Html.Raw(Model.ForumDesc)
@await Html.PartialAsync("_RulesPartial", new CustomPartials._RulesPartialModel
{
    ForumRules = Model.ForumRules,
    ForumRulesLink = Model.ForumRulesLink,
    Language = Lang
}, ViewData)


@if (hasSubForums)
{
    <p>&nbsp;</p>
    @await Html.PartialAsync(
        "_ForumDisplayPartial",
        new PhpbbInDotnet.Forum.Pages.CustomPartials._ForumDisplayPartialModel(Model.ForumId, Model.Forums!, userDateFormat, true, currentUser, true, Lang),
        ViewData
    )
}

@if (hasTopics)
{
    var topicsDisplayed = false;
    var announcementsDisplayed = false;
    var isFirstTopicType = true;
    foreach (var topicGroup in Model.Topics!)
    {
        var isFirstInGroup = false;
        @switch (topicGroup.TopicType)
        {
            case TopicType.Announcement when !announcementsDisplayed:
            case TopicType.Global when !announcementsDisplayed:
                <p>&nbsp;</p>
                <h3 style="float:left">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "ANNOUNCEMENTS", Casing.FirstUpper])</h3>
                announcementsDisplayed = isFirstInGroup = true;
                break;
            case TopicType.Important when !topicsDisplayed:
            case TopicType.Normal or TopicType.Shortcut when !topicsDisplayed:
                if (!isFirstTopicType)
                {
                    <hr class="BoxSeparator" />
                }
                <p>&nbsp;</p>
                <h3 style="float:left">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "TOPICS", Casing.FirstUpper])</h3>
                if (!isCurrentForumReadOnly)
                {
                    <span>
                        &nbsp;
                        <button onclick="location.href='./Posting?forumId=@Model.ForumId&handler=newTopic'" type="button" class="MyButton SpacedButtonNotTop" style="height:26px; padding-top:1px; padding-bottom: 1px">
                            &#x1F4DD;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "OPEN_NEW_TOPIC", Casing.FirstUpper])
                        </button>
                    </span>
                }
                topicsDisplayed = isFirstInGroup = true;
                break;
        }

        foreach (var topic in topicGroup?.Topics ?? Enumerable.Empty<TopicDto>())
        {
            topic.Unread = await Model.IsTopicUnread(topic.ForumId ?? 0, topic.TopicId ?? 0);
            var pageSize = currentUser!.GetPageSize(topic.TopicId ?? 0);
            topic.Pagination = new Objects.PaginationDto($"/ViewTopic?topicId={topic.TopicId}&pageNum=1", topic.PostCount ?? 0, pageSize, 0, "PageNum");

            if (!isFirstInGroup)
            {
                <hr class="BoxSeparator" />
            }

            <div class="FlexRow RowMargin">
                <span class="ForumContent">
                    @if (topicGroup!.TopicType == TopicType.Important)
                    {
                        <span>&#x26A0;&#xFE0F;&nbsp;</span>
                    }
                    @if (topic.IsLocked)
                    {
                        <span>&#x1F512;&nbsp;</span>
                    }
                    @{
                        var firstUnreadPost = await Model.GetFirstUnreadPost(topic.ForumId ?? 0, topic.TopicId ?? 0);
                        if (firstUnreadPost > 0)
                        {
                            <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@firstUnreadPost" asp-route-highlight="false" class="nav-link UnreadTitle" style="font-weight:bold">@Html.Raw(topic.TopicTitle)</a>
                        }
                        else
                        {
                            <a asp-page="/ViewTopic" asp-route-topicId="@topic.TopicId" asp-route-pageNum="1" class="nav-link" style="font-weight:bold">@Html.Raw(topic.TopicTitle)</a>
                        }
                    }
                    <br />
                    @await Html.PartialAsync(
                        "_PaginationPageListPartial",
                        new Forum.Pages.CustomPartials._PaginationPageListPartialModel
                        {
                            Pagination = topic.Pagination,
                            Language = Lang
                        },
                        ViewData
                    )
                </span>
                @if (currentUser.Foes?.Contains(topic.TopicLastPosterId ?? 0) ?? false)
                {
                    topic.TopicLastPosterColour = null;
                    topic.TopicLastPosterName = "[Ascuns]";
                    topic.TopicLastPosterId = 1;
                }
                @await Html.PartialAsync("_SummaryPartial", new CustomPartials._SummaryPartialModel
                {
                    AuthorId = topic.TopicLastPosterId,
                    AuthorName = topic.TopicLastPosterName,
                    AuthorColor = topic.TopicLastPosterColour,
                    CreationTime = topic.LastPostTime,
                    AssetId = topic.TopicId!.Value,
                    DateFormat = userDateFormat,
                    LinkHref = topic.TopicLastPostId == null ? null : $"./ViewTopic?postId={topic.TopicLastPostId}&handler=ByPostId",
                    ShowAsLast = true,
                    Posts = topic.PostCount,
                    Views = topic.ViewCount,
                    Language = Lang
                })
            </div>
            isFirstInGroup = false;
        }
        isFirstTopicType = false;
    }
}

@if (hasTopics)
{
    <hr class="BoxSeparator" />
}

@if (!isCurrentForumReadOnly)
{
    <p></p>
    <button onclick="location.href='/Posting?forumId=@Model.ForumId&handler=newTopic'" type="button" class="MyButton">
        &#x1F4DD;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "OPEN_NEW_TOPIC"])
    </button>
}

<div style="clear:both; margin: 10px 0px 10px 0px">
    @if (hasSubForums || hasTopics)
    {
        <a href="/" class="nowrap">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "HOME", Casing.FirstUpper])</a>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
    }
    @if ((Model.ParentForumId ?? 0) != 0)
    {
        <span>
            @Html.Raw(Model.LanguageProvider.BasicText[Lang, "PARENT_FORUM", Casing.FirstUpper]):
            <a asp-page="/ViewForum" asp-route-forumId="@Model.ParentForumId">@Html.Raw(Model.ParentForumTitle)</a>
        </span>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
    }
    <span onclick="showForumTree(this)" class="SpanLikeLink nowrap">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "CHOOSE_DESTINATION"])</span>
</div>
<p></p>
<div id="forumTree" style=" display:none">
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new CustomPartials._ForumTreePartialModel(
            tree: (await Model.GetForumTree(false, false)).Tree,
            forumId: Model.ForumId,
            topicId: null,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" class="MyButton" />
    </form>
</div>
