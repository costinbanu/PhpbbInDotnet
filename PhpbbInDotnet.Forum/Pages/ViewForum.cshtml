@page
@model PhpbbInDotnet.Forum.Pages.ViewForumModel

@using Utilities
@using Objects
@inject Services.ForumTreeService _forumService

@{
    var Lang = Model.GetLanguage();
    var DocumentTitle = Model.Mode switch
    {
        ViewForumMode.NewPosts => Model.LanguageProvider.BasicText[Lang, "NEW_POSTS", Casing.FirstUpper],
        ViewForumMode.OwnPosts => Model.LanguageProvider.BasicText[Lang, "OWN_TOPICS", Casing.FirstUpper],
        ViewForumMode.Drafts => Model.LanguageProvider.BasicText[Lang, "DRAFTS", Casing.FirstUpper],
        ViewForumMode.Forum => Model.ForumTitle,
        _ => string.Empty
    };
    ViewData["Title"] = DocumentTitle;
    Layout = "~/Pages/_Layout.cshtml";
    var CurrentUser = Model.GetCurrentUser();
    var IsAnonymous = CurrentUser?.IsAnonymous ?? true;
    var hasSubForums = Model.ForumId != 0 && _forumService.HasUnrestrictedChildren((await Model.GetForumTree(false, false)).Tree, Model.ForumId);
    var hasTopics = Model.Topics?.SelectMany(x => x.Topics).Any() ?? false;
    var UserDateFormat = CurrentUser?.UserDateFormat ?? Model.LanguageProvider.GetDefaultDateFormat(Lang);
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
</environment>
<form asp-page-handler="MarkForumsRead" method="post" name="MarkForumsRead" id="MarkForumsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>
<form asp-page-handler="MarkTopicsRead" method="post" name="MarkTopicsRead" id="MarkTopicsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>
<form asp-page-handler="DeleteDrafts" method="post" name="DeleteDrafts" id="DeleteDrafts">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>
<form asp-page-handler="MarkNewPostsRead" method="post" name="MarkNewPostsRead" id="MarkNewPostsRead">
    <input asp-for="ForumId" type="hidden" value="@Model.ForumId" />
    @Html.AntiForgeryToken()
</form>

<script>
    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>

@if (Model.Mode == ViewForumMode.Forum && (CurrentUser.JumpToUnread ?? false))
{
<script>
    $(document).ready(function () {
        var element = $('.UnreadTitle');
        if (element && element.offset()) {
            window.scrollTo(0, element.offset().top - 20);
        }
    });
</script>
}

@if ((Model.ParentForumId ?? 0) != 0)
{
<span style="padding-bottom: 10px">
    @Html.Raw(Model.LanguageProvider.BasicText[Lang, "PARENT_FORUM", Casing.FirstUpper]):
    <a asp-page="/ViewForum" asp-route-forumId="@Model.ParentForumId">@Html.Raw(Model.ParentForumTitle)</a>
</span>
}
else
{
<a href="/" style="padding-bottom: 10px">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "HOME", Casing.FirstUpper])</a>
}

@if (!IsAnonymous)
{
    var additionalLinks = new List<string>();
    @if (Model.Mode == ViewForumMode.Forum && (hasSubForums || hasTopics))
    {
        @if (hasSubForums)
        {
            additionalLinks.Add($"<a href=\"javascript:MarkForumsRead.submit()\">{Model.LanguageProvider.BasicText[Lang, "MARK_FORUMS_READ", Casing.FirstUpper]}</a>");
        }
        @if (hasTopics)
        {
            additionalLinks.Add($"<a href=\"javascript:MarkTopicsRead.submit()\">{Model.LanguageProvider.BasicText[Lang, "MARK_TOPICS_READ", Casing.FirstUpper]}</a>");
        }
    }
    <span>&nbsp;&bull;&nbsp;</span>
    @await Html.PartialAsync(
        "_HeaderLinksPartial",
        new PhpbbInDotnet.Forum.Pages.CustomPartials._HeaderLinksPartialModel(Lang, false, additionalLinks.ToArray()),
        ViewData
    )
}
<p>&nbsp;</p>
@switch (Model.Mode)
{
    case ViewForumMode.NewPosts:
        <h2>@Html.Raw(DocumentTitle)</h2>
        break;

    case ViewForumMode.OwnPosts:
        <h2>@Html.Raw(DocumentTitle)</h2>
        @Html.Raw(Model.LanguageProvider.BasicText[Lang, "OWN_TOPICS_CAPTION", Casing.FirstUpper])
        break;

    case ViewForumMode.Drafts:
        <h2>@Html.Raw(DocumentTitle)</h2>
        @Html.Raw(Model.LanguageProvider.BasicText[Lang, "DRAFTS_CAPTION", Casing.FirstUpper])
        break;

    case ViewForumMode.Forum:
        <h2>@Html.Raw(DocumentTitle)</h2>
        @Html.Raw(Model.ForumDesc)
        @await Html.PartialAsync("_RulesPartial", new CustomPartials._RulesPartialModel
        {
            ForumRules = Model.ForumRules,
            ForumRulesLink = Model.ForumRulesLink,
            Language = Lang
        }, ViewData)
        break;
}

@if (hasSubForums)
{
    <p>&nbsp;</p>
    @await Html.PartialAsync(
        "_ForumDisplayPartial",
        new PhpbbInDotnet.Forum.Pages.CustomPartials._ForumDisplayPartialModel(Model.ForumId, Model.Forums, UserDateFormat, true, CurrentUser, true, Lang),
        ViewData
    )
}

@if (hasTopics)
{
    var topicsDisplayed = false;
    var announcementsDisplayed = false;
    var handler = Model.Mode switch
    {
        ViewForumMode.NewPosts => "newPosts",
        ViewForumMode.OwnPosts => "ownPosts",
        ViewForumMode.Drafts => "drafts",
        _ => string.Empty
    };

    if (Model.Mode != ViewForumMode.Forum)
    {
        @await Html.PartialAsync(
            "_PaginationControlsPartial",
            new CustomPartials._PaginationControlsPartialModel(
                paginator: Model.Paginator,
                allowPaginationChange: false,
                back: $"/ViewForum?handler={handler}&pageNum={(Model.PageNum ?? 1) - 1}",
                forward: $"/ViewForum?handler={handler}&pageNum={(Model.PageNum ?? 1) + 1}",
                includeEasyNavigation: false,
                language: Lang
            ),
            ViewData
        );
    }
    var isFirstTopicType = true;
    foreach (var topicGroup in Model.Topics)
    {
        var isFirstInGroup = false;
        if (Model.Mode == ViewForumMode.Forum)
        {
            @switch (topicGroup.TopicType)
            {
                case TopicType.Announcement when !announcementsDisplayed:
                case TopicType.Global when !announcementsDisplayed:
                    <p>&nbsp;</p>
                    <h3 style="float:left">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "ANNOUNCEMENTS", Casing.FirstUpper])</h3>
                    announcementsDisplayed = isFirstInGroup = true;
                    break;
                case TopicType.Important when !topicsDisplayed:
                case TopicType.Normal when !topicsDisplayed:
                    if (!isFirstTopicType)
                    {
                        <hr class="BoxSeparator" />
                    }
                    <p>&nbsp;</p>
                    <h3 style="float:left">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "TOPICS", Casing.FirstUpper])</h3>
                    <span>
                        &nbsp;
                        <button onclick="location.href='/Posting?forumId=@Model.ForumId&handler=newTopic'" type="button" class="MyButton SpacedButtonNotTop" style="height:26px; padding-top:1px; padding-bottom: 1px">
                            &#x1F4DD;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "OPEN_NEW_TOPIC", Casing.FirstUpper])
                        </button>
                    </span>
                    topicsDisplayed = isFirstInGroup = true;
                    break;
            }
        }

        foreach (var topic in topicGroup?.Topics ?? Enumerable.Empty<TopicDto>())
        {
            if (Model.Mode != ViewForumMode.Drafts)
            {
                topic.Unread = await Model.IsTopicUnread(topic.ForumId ?? 0, topic.TopicId ?? 0);
                if (Model.Mode != ViewForumMode.NewPosts)
                {
                    var pageSize = CurrentUser.TopicPostsPerPage.ContainsKey(topic.TopicId ?? 0) ? CurrentUser.TopicPostsPerPage[topic.TopicId ?? 0] : Constants.DEFAULT_PAGE_SIZE;
                    topic.Pagination = new Objects.PaginationDto($"/ViewTopic?topicId={topic.TopicId}&pageNum=1", topic.PostCount ?? 0, pageSize, 0, "PageNum");
                }
            }

            if (!isFirstInGroup)
            {
                <hr class="BoxSeparator" />
            }

            var divClass = "FlexRow RowMargin";
            <div class="@divClass">
                @if (Model.Mode == ViewForumMode.Drafts)
                {
                    <input name="SelectedDrafts" type="checkbox" value="@topic.DraftId" form="DeleteDrafts" style="margin-right:10px; align-self:safe center" />
                }
                else if (Model.Mode == ViewForumMode.NewPosts)
                {
                    <input name="SelectedNewPosts" type="checkbox" value="@($"{topic.ForumId};{topic.TopicId}")" form="MarkNewPostsRead" style="margin-right:10px; align-self:safe center" />
                }
                <span class="ForumContent">
                    @if (Model.Mode != ViewForumMode.Forum)
                    {
                        <span class="Caption">
                            @Html.Raw(_forumService.GetPathText((await Model.GetForumTree(false, false)).Tree, topic.ForumId ?? 0))
                        </span>
                        <br />
                    }
                    @if (topicGroup.TopicType == TopicType.Important)
                    {
                        <span>&#x26A0;&#xFE0F;&nbsp;</span>
                    }
                    @if (topic.IsLocked)
                    {
                        <span>&#x1F512;&nbsp;</span>
                    }
                    @if (Model.Mode != ViewForumMode.Drafts)
                    {
                        var firstUnreadPost = await Model.GetFirstUnreadPost(topic.ForumId ?? 0, topic.TopicId ?? 0);
                        if (firstUnreadPost > 0)
                        {
                            <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@firstUnreadPost" asp-route-highlight="false" class="nav-link UnreadTitle" style="font-weight:bold">@Html.Raw(topic.TopicTitle)</a>
                        }
                        else
                        {
                            <a asp-page="/ViewTopic" asp-route-topicId="@topic.TopicId" asp-route-pageNum="1" class="nav-link" style="font-weight:bold">@Html.Raw(topic.TopicTitle)</a>
                        }
                    }
                    else
                    {
                        if ((topic.TopicId ?? 0) == 0)
                        {
                            <a asp-page="/Posting" asp-page-handler="newTopic" asp-route-forumId="@topic.ForumId" style="white-space:nowrap">
                                @Html.Raw(Model.LanguageProvider.BasicText[Lang, "NEW_TOPIC", Casing.FirstUpper]):
                                @Html.Raw(topic.TopicTitle)
                            </a>
                        }
                        else
                        {
                            <a asp-page="/Posting" asp-page-handler="forumPost" asp-route-forumId="@topic.ForumId" asp-route-topicId="@topic.TopicId" asp-route-postId="@topic.TopicLastPostId">@Html.Raw(topic.TopicTitle)</a>
                        }
                        <span>
                            &nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "POSTED"])
                            <script>writeDate("@topic.LastPostTime?.ToString("o")", "@UserDateFormat");</script>
                        </span>
                    }
                    <br />
                    @if (Model.Mode != ViewForumMode.Drafts)
                    {
                        @await Html.PartialAsync(
                            "_PaginationPageListPartial",
                            new Forum.Pages.CustomPartials._PaginationPageListPartialModel
                            {
                                Pagination = topic.Pagination,
                                Language = Lang
                            },
                            ViewData
                        )
                    }
                </span>
                @if (Model.Mode != ViewForumMode.Drafts)
                {
                    if (CurrentUser.Foes?.Contains(topic.TopicLastPosterId ?? 0) ?? false)
                    {
                        topic.TopicLastPosterColour = null;
                        topic.TopicLastPosterName = "[Ascuns]";
                        topic.TopicLastPosterId = 1;
                    }
                    @await Html.PartialAsync("_SummaryPartial", new CustomPartials._SummaryPartialModel
                    {
                        AuthorId = topic.TopicLastPosterId,
                        AuthorName = topic.TopicLastPosterName,
                        AuthorColor = topic.TopicLastPosterColour,
                        CreationTime = topic.LastPostTime,
                        AssetId = topic.TopicId.Value,
                        DateFormat = UserDateFormat,
                        LinkHref = topic.TopicLastPostId == null ? null : $"./ViewTopic?postId={topic.TopicLastPostId}&handler=ByPostId",
                        ShowAsLast = true,
                        Posts = topic.PostCount,
                        Views = topic.ViewCount,
                        Language = Lang
                    });
                }
            </div>
            isFirstInGroup = false;
        }
        isFirstTopicType = false;
    }

    if (Model.Mode == ViewForumMode.Drafts && hasTopics)
    {
        <hr class="BoxSeparator" />
        <button onclick="selectAllCheckboxes()" type="button" class="MyButton SpacedButton">&#x2714;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "SELECT_ALL_POSTS"])</button>
        <input type="submit" value="&#x1F6AE;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "DELETE_SELECTED_POSTS"])" form="DeleteDrafts" onclick="return confirm('@Html.Raw(Model.LanguageProvider.BasicText[Lang, "CONFIRM_DELETE_DRAFTS"])');" class="MyButton SpacedButton" />
        <p>&nbsp;</p>
    }
    else if (Model.Mode == ViewForumMode.NewPosts && hasTopics)
    {
        <hr class="BoxSeparator" />
        <button onclick="selectAllCheckboxes()" type="button" class="MyButton SpacedButton">&#x2714;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "SELECT_ALL_POSTS"])</button>
        <input type="submit" value="&#x2705;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "MARK_SELECTED_POSTS_AS_READ"])" form="MarkNewPostsRead" class="MyButton SpacedButton" />
        <p>&nbsp;</p>
    }

    if (Model.Mode != ViewForumMode.Forum)
    {
        @await Html.PartialAsync(
            "_PaginationControlsPartial",
            new CustomPartials._PaginationControlsPartialModel(
                paginator: Model.Paginator,
                allowPaginationChange: false,
                back: $"/ViewForum?handler={handler}&pageNum={(Model.PageNum ?? 1) - 1}",
                forward: $"/ViewForum?handler={handler}&pageNum={(Model.PageNum ?? 1) + 1}",
                includeEasyNavigation: true,
                language: Lang
            ),
            ViewData
        );
    }
}
else if (Model.Mode == ViewForumMode.NewPosts)
{
    <p>&nbsp;</p>
    <h4>@Html.Raw(Model.LanguageProvider.BasicText[Lang, "NO_NEW_POSTS"])</h4>
    <p>&nbsp;</p>
}
else if (Model.Mode == ViewForumMode.OwnPosts)
{
    <p>&nbsp;</p>
    <h4>@Html.Raw(Model.LanguageProvider.BasicText[Lang, "NO_OWN_POSTS"])</h4>
    <p>&nbsp;</p>
}
else if (Model.Mode == ViewForumMode.Drafts)
{
    <p>&nbsp;</p>
    <h4>@Html.Raw(Model.LanguageProvider.BasicText[Lang, "NO_DRAFTS"])</h4>
    <p>&nbsp;</p>
}

@if (hasTopics && Model.Mode != ViewForumMode.Drafts && Model.Mode != ViewForumMode.NewPosts)
{
    <hr class="BoxSeparator" />
}

@if (!IsAnonymous && Model.Mode == ViewForumMode.Forum)
{
    <p></p>
    <button onclick="location.href='/Posting?forumId=@Model.ForumId&handler=newTopic'" type="button" class="MyButton">
        &#x1F4DD;&nbsp;@Html.Raw(Model.LanguageProvider.BasicText[Lang, "OPEN_NEW_TOPIC"])
    </button>
}

<div style="clear:both; margin: 10px 0px 10px 0px">
    @if (hasSubForums || hasTopics)
{
        <a href="/" class="nowrap">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "HOME", Casing.FirstUpper])</a>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
}
    @if ((Model.ParentForumId ?? 0) != 0)
{
        <span>
            @Html.Raw(Model.LanguageProvider.BasicText[Lang, "PARENT_FORUM", Casing.FirstUpper]):
            <a asp-page="/ViewForum" asp-route-forumId="@Model.ParentForumId">@Html.Raw(Model.ParentForumTitle)</a>
        </span>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
}
    <span onclick="showForumTree(this)" class="SpanLikeLink nowrap">@Html.Raw(Model.LanguageProvider.BasicText[Lang, "CHOOSE_DESTINATION"])</span>
</div>
<p></p>
<div id="forumTree" style=" display:none">
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new CustomPartials._ForumTreePartialModel(
            tree: (await Model.GetForumTree(false, false)).Tree,
            forumId: Model.ForumId,
            topicId: null,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" class="MyButton" />
    </form>
</div>
