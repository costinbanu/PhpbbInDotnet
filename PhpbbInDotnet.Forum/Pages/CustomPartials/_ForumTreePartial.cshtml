@model PhpbbInDotnet.Forum.Pages.CustomPartials._ForumTreePartialModel

@using Objects
@using Utilities.Extensions
@using Microsoft.Extensions.Configuration 
@using System.Web

@inject Services.IForumTreeService _forumService
@inject IConfiguration _config

<style>
    ul, #myUL {
        list-style-type: none;
    }

    #myUL {
        margin: 0;
        padding: 0;
    }

    .searchCaret {
        cursor: pointer;
        user-select: none;
        width: 100%;
        padding: 3px 3px;
    }

    .searchCaret::before {
        content: "\25B6";
        color: black;
        display: inline-block;
        margin-right: 6px;
    }

    .searchCaret-down::before {
        transform: rotate(90deg);
    }

    .nestedTreeNode {
        display: none;
    }

    .activeTreeNode {
        display: block;
    }

    .treeNode {
        padding: 3px 3px;
        display: inherit;
        width: 100%;
        cursor: default;
    }
</style>

@functions {
    async Task showTreeNode(int? cur)
    {
        var treeNodeClass = cur == Model.ForumId ? "treeNode selectedTreeNode" : "treeNode";
        var topics = Model.TopicData?.Where(t => t.ForumId == cur)
                                    ?.OrderBy(t => t.TopicTitle, StringComparer.OrdinalIgnoreCase)
                                    ?? Enumerable.Empty<MiniTopicDto>();

        var thisForum = _forumService.GetTreeNode(Model.Tree, cur ?? 0);

        if (thisForum?.IsRestricted ?? false)
        {
            return;
        }

        #nullable enable
        var children = thisForum?.ChildrenList?.Select(x => _forumService.GetTreeNode(Model.Tree, x)) ?? Enumerable.Empty<PhpbbInDotnet.Objects.ForumTree?>();

        if (children.Any())
        {
            await Output.WriteAsync(
                $"<li class='{treeNodeClass}'>" +
                    $"<span id='treeNode{cur}' class='searchCaret' onclick='select(this, {cur}, {Json.Serialize(topics)});'>{HttpUtility.HtmlDecode(thisForum?.ForumName ?? _config.GetValue<string>("ForumName"))}</span>" +
                    $"<ul class='nestedTreeNode' id='child{cur}'>"
            );
            foreach (var child in children)
            {
                await showTreeNode(child?.ForumId);
            }
            await Output.WriteAsync(
                    "</ul>" +
                "</li>"
            );
        }
        else
        {
            await Output.WriteAsync(
                $"<li id='treeNode{cur}' class='{treeNodeClass}' onclick='select(this, {cur}, {Json.Serialize(topics)});' style='max-width:max-content'>{HttpUtility.HtmlDecode(thisForum?.ForumName ?? _config.GetValue<string>("ForumName"))}</li>"
            );
        }
    }
}
@{ var style = Html.Raw(Model.ConstrainSize ? "style=\"height:400px; max-height:600px; overflow-y:scroll\"" : ""); }
<div id="treeContainer" @style>
    <ul id="myUL">
        @{await showTreeNode(0);}
    </ul>
</div>


<script>
        var path = [0].concat(@Json.Serialize(_forumService.GetTreeNode(Model.Tree, Model.ForumId ?? 0)?.PathList?.EmptyIfNull()));
        var topicId = @Json.Serialize(Model.TopicId);

        function select(obj, forumId, topics) {
            var toggler = document.getElementsByClassName("selectedTreeNode");

            for (var i = 0; i < toggler.length; i++) {
                toggler[i].classList.remove("selectedTreeNode")
            }

            var parent = document.getElementById("child" + forumId);
            if (parent != null) {
                parent.classList.toggle("activeTreeNode");
            }
            obj.classList.toggle("searchCaret-down");
            obj.classList.toggle("selectedTreeNode");

            if (typeof forumSelectCallback === "function") {
                forumSelectCallback(forumId);
            }

            if (typeof topicSelectCallback === "function") {
                topicSelectCallback(topics);
            }
        }

        $(window).on('load', function () {
            for (var i = 0; i < path.length; i++) {
                document.getElementById("treeNode" + path[i]).click();
            }

            var element = document.getElementById("treeNode" + path[path.length]);
            if (@Html.Raw(Model.ConstrainSize.ToString().ToLower()) && element) {
                document.getElementById('treeContainer').scrollTop = element.offsetTop;
            }

            if (typeof topicSelectInit === "function") {
                topicSelectInit(topicId);
            }
        });

</script>
