@model PhpbbInDotnet.Forum.Pages.CustomPartials.Admin._AdminUsersPartialModel
@using Domain
@using Domain.Extensions

@inject Languages.ITranslationProvider _translationProvider

<h4 onclick="expandSection('inactiveUsersSection', 'inactiveUsersChar')" style="cursor:pointer" id="inactiveUsersTitle">
    @Html.Raw(_translationProvider.Admin[Model.Language, "INACTIVE_USERS"])
    <span id="inactiveUsersChar">&#x1F53D;</span>
</h4>
<div id="inactiveUsersSection" style="display:none">
    <form method="post" id="userManagement" name="userManagement" asp-page-handler="UserManagement">
        <input type="hidden" name="userAction" id="userAction" />
        <input type="hidden" name="userId" id="userId" />
    </form>

    @{
        @await Html.PartialAsync(
            "_AdminUsersSummaryPartial",
            new _AdminUsersSummaryPartialModel
            {
                DateFormat = Model.DateFormat,
                Users = Model.InactiveUsers,
                Language = Model.Language
            },
            ViewData
        );

        if (Model.InactiveUsers?.Any(u => u.UserInactiveReason == UserInactiveReason.NewlyRegisteredNotConfirmed) == true)
        {
            <p></p>
            <script>
                function selectAllUsers() {
                    var checkboxes = $('input[name=userIds]');
                    checkboxes.prop('checked', !checkboxes.prop('checked'));
                }
            </script>
            <form method="post" id="batchAdminUsers" name="batchAdminUsers" asp-page-handler="BatchUserManagement">
                <button type="button" onclick="selectAllUsers()" class="MyButton SpacedButton">@Html.Raw(_translationProvider.Admin[Model.Language, "SELECT_ALL_INACTIVE_USERS"])</button>
                <input type="submit" value="@Html.Raw(_translationProvider.Admin[Model.Language, "DELETE_SELECTED_INACTIVE_USERS"])" onclick="return confirm('@Html.Raw(_translationProvider.Admin[Model.Language, "DELETE_INACTIVE_USERS_CONFIRMATION"])');" class="MyButton SpacedButton" />
            </form>
        }
    }
    <div style="width:100%; text-align:right; font-size:1.5em">
        <a href="#inactiveUsersTitle">&#x23EB;</a>
    </div>
</div>
<hr class="BoxSeparator" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<style>
    .DummyDatePicker {
    }
</style>
<script>
    let $ = jQuery.noConflict();
    $(function () {
        $(".DummyDatePicker").each((_, elem) => {
            $(elem).datepicker({
                dateFormat: 'dd.mm.yy',
                firstDay: 1,
                dayNamesMin: $.map(dayNames, day => day.substring(0, 2)),
                dayNamesShort: $.map(dayNames, day => day.substring(0, 3)),
                dayNames: dayNames,
                monthNames: monthNames,
                monthNamesShort: $.map(monthNames, month => month.substring(0, 3)),
                changeMonth: true,
                changeYear: true
            });
        });
        clearActiveDates(document.getElementById('neverActiveCheckbox'));
    });

    function clearActiveDates(inactive) {
        if (inactive.checked) {
            $('#lastActiveFrom').val('');
            $('#lastActiveTo').val('')
            $('#lastActiveFrom').prop('disabled', true);
            $('#lastActiveTo').prop('disabled', true);
        } else {
            $('#lastActiveFrom').prop('disabled', false);
            $('#lastActiveTo').prop('disabled', false);
        }
    }
</script>
<h4 onclick="expandSection('searchUsersSection', 'searchUsersChar')" style="cursor:pointer" id="searchUsersTitle">
    @Html.Raw(_translationProvider.BasicText[Model.Language, "SEARCH_FOR_USER"])
    @if (Model.WasSearchPerformed|| (Model.SearchResults?.Any() ?? false))
    {
        <span id="searchUsersChar">&#x1F53C;</span>
    }
    else
    {
        <span id="searchUsersChar">&#x1F53D;</span>
    }
</h4>
<div id="searchUsersSection" style="@(Model.WasSearchPerformed|| (Model.SearchResults?.Any() ?? false) ? "display:block" : "display:none")">
    <form method="post" id="userSearch" asp-page-handler="UserSearch">
        <div class="FlexCenter">
            <div class="FlexCaption">
                @Html.Raw(_translationProvider.BasicText[Model.Language, "USERNAME", Casing.FirstUpper])
            </div>
            <div class="FlexRight PostInputWidth">
                <input type="text" asp-for="SearchParameters!.Username" />
            </div>
        </div>
        <div class="FlexCenter FlexSpaced">
            <div class="FlexCaption">
                @Html.Raw(_translationProvider.BasicText[Model.Language, "EMAIL", Casing.FirstUpper])
            </div>
            <div class="FlexRight PostInputWidth">
                <input type="text" asp-for="SearchParameters!.Email" />
            </div>
        </div>
        <div class="FlexCenter FlexSpaced">
            <div class="FlexCaption">
                ID
            </div>
            <div class="FlexRight PostInputWidth">
                <input type="text" asp-for="SearchParameters!.UserId" />
            </div>
        </div>
        <div class="FlexCenter FlexSpaced">
            <div class="FlexCaption">
                @Html.Raw(_translationProvider.BasicText[Model.Language, "REGISTERED", Casing.FirstUpper])
            </div>
            <div class="FlexRight PostInputWidth">
                @Html.Raw(_translationProvider.BasicText[Model.Language, "FROM", Casing.FirstUpper])<br />
                <input type="text" asp-for="SearchParameters!.RegisteredFrom" class="DummyDatePicker" /><br />
                @Html.Raw(_translationProvider.BasicText[Model.Language, "TO", Casing.FirstUpper])<br />
                <input type="text" asp-for="SearchParameters!.RegisteredTo" class="DummyDatePicker" /><br />
            </div>
        </div>
        <div class="FlexCenter FlexSpaced">
            <div class="FlexCaption">
                @Html.Raw(_translationProvider.Admin[Model.Language, "LAST_ACTIVE"])
            </div>
            <div class="FlexRight PostInputWidth">
                @Html.Raw(_translationProvider.BasicText[Model.Language, "FROM", Casing.FirstUpper])<br />
                <input type="text" asp-for="SearchParameters!.LastActiveFrom" class="DummyDatePicker" id="lastActiveFrom" /><br />
                @Html.Raw(_translationProvider.BasicText[Model.Language, "TO", Casing.FirstUpper])<br />
                <input type="text" asp-for="SearchParameters!.LastActiveTo" class="DummyDatePicker" id="lastActiveTo" /><br />
                <label>
                    @Html.CheckBoxFor(m => m.SearchParameters!.NeverActive, new { onchange = "clearActiveDates(this)", id = "neverActiveCheckbox" })
                    @Html.Raw(_translationProvider.Admin[Model.Language, "NEVER_ACTIVE"])
                </label>
            </div>
        </div>
        <input type="submit" value="@Html.Raw(_translationProvider.BasicText[Model.Language, "DO_SEARCH"])" class="MyButton SpacedButton" />
    </form>

    @if (Model.SearchResults?.Any() == true)
    {
        @await Html.PartialAsync(
            "_AdminUsersSummaryPartial",
            new _AdminUsersSummaryPartialModel
            {
                DateFormat = Model.DateFormat,
                Users = Model.SearchResults,
                Language = Model.Language
            },
            ViewData
        );
    }
    <div style="width:100%; text-align:right; font-size:1.5em">
        <a href="#searchUsersTitle">&#x23EB;</a>
    </div>
</div>
<hr class="BoxSeparator" />
<h4 onclick="expandSection('activeUsersWithUnconfirmedEmailSection', 'activeUsersWithUnconfirmedEmailChar')" style="cursor:pointer" id="activeUsersWithUnconfirmedEmailTitle">
    @Html.Raw(_translationProvider.Admin[Model.Language, "ACTIVE_USERS_WITH_UNCONFIRMED_EMAIL"])
    <span id="activeUsersWithUnconfirmedEmailChar">&#x1F53D;</span>
</h4>
<div id="activeUsersWithUnconfirmedEmailSection" style="display:none">

    @await Html.PartialAsync(
        "_AdminUsersSummaryPartial",
        new _AdminUsersSummaryPartialModel
        {
            DateFormat = Model.DateFormat,
            Users = Model.ActiveUsersWithUnconfirmedEmail,
            Language = Model.Language
        },
        ViewData)

    <div style="width:100%; text-align:right; font-size:1.5em">
        <a href="#activeUsersWithUnconfirmedEmailTitle">&#x23EB;</a>
    </div>
</div>
<hr class="BoxSeparator" />
<h4 onclick="expandSection('groupsSection', 'groupsChar')" style="cursor:pointer" id="groupsTitle">
    @Html.Raw(_translationProvider.BasicText[Model.Language, "GROUPS", Casing.FirstUpper])
    <span id="groupsChar">&#x1F53D;</span>
</h4>
<div id="groupsSection" style="display:none">
    @foreach (var group in Model.Groups.EmptyIfNull())
    {
        <a href='javascript:populateGroup(@Json.Serialize(group))'>@Html.Raw(group.Name)</a>
        <br />
    }
    <p>&nbsp;</p>
    <a href="javascript:newGroup()">@Html.Raw(_translationProvider.Admin[Model.Language, "ADD_NEW_GROUP"])</a>
    <div style="width:100%; text-align:right; font-size:1.5em">
        <a href="#groupsTitle">&#x23EB;</a>
    </div>
</div>
<hr class="BoxSeparator" />
<h4 onclick="expandSection('ranksSection', 'ranksChar')" style="cursor:pointer" id="ranksTitle">
    @Html.Raw(_translationProvider.BasicText[Model.Language, "RANKS", Casing.FirstUpper])
    <span id="ranksChar">&#x1F53D;</span>
</h4>
<div id="ranksSection" style="display:none">
    @foreach (var rank in Model.Ranks.EmptyIfNull())
    {
        <a href="javascript:populateRank(@rank.RankId, '@rank.RankTitle')">@rank.RankTitle</a>
        <br />
    }
    <p>&nbsp;</p>
    <a href="javascript:newRank()">@Html.Raw(_translationProvider.Admin[Model.Language, "ADD_NEW_RANK"])</a>
    <div style="width:100%; text-align:right; font-size:1.5em">
        <a href="#ranksTitle">&#x23EB;</a>
    </div>
</div>
<hr class="BoxSeparator" />
<h4 onclick="expandSection('bansSection', 'bansChar')" style="cursor:pointer" id="bansTitle">
    @Html.Raw(_translationProvider.Admin[Model.Language, "BANS"])
    <span id="bansChar">&#x1F53D;</span>
</h4>
<div id="bansSection" style="display:none">
    @{
        <form method="post" asp-page-handler="BanUser">
            @for (var i = 0; i < Model.BanList?.Count; i++)
            {
                <div class="FlexCenter">
                    <div class="FlexCaption">
                        IP
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <input type="text" name="banlist[@i].BanIp" value="@Model.BanList[i].BanIp" />
                    </div>
                </div>
                <div class="FlexCenter FlexSpaced">
                    <div class="FlexCaption">
                        @Html.Raw(_translationProvider.BasicText[Model.Language, "EMAIL", Casing.FirstUpper])
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <input type="text" name="banlist[@i].BanEmail" value="@Model.BanList[i].BanEmail" />
                    </div>
                </div>
                <div class="FlexCenter FlexSpaced">
                    <div class="FlexCaption">
                        @Html.Raw(_translationProvider.Admin[Model.Language, "ASK_DELETE"])
                    </div>
                    <div class="FlexRight PostInputWidth">
                        <label>
                            <input type="checkbox" name="toRemove" value="@i" />
                            @Html.Raw(_translationProvider.Admin[Model.Language, "YES_DELETE"])
                        </label>
                    </div>
                </div>
                <input type="hidden" name="banlist[@i].BanId" value="@Model.BanList[i].BanId" />
                <input type="hidden" name="banlist[@i].BanEmailOldValue" value="@Model.BanList[i].BanEmailOldValue" />
                <input type="hidden" name="banlist[@i].BanIpOldValue" value="@Model.BanList[i].BanIpOldValue" />
                @if (i < Model.BanList.Count - 1)
                {
                    <hr class="SubtypeSeparator" />
                }
            }
            <div id="newBans"></div>
            <input type="button" onclick="addBannedItem()" value="@Html.Raw(_translationProvider.Admin[Model.Language, "ADD_NEW_BAN"])" class="MyButton SpacedButton" />
            <input type="submit" value="@Html.Raw(_translationProvider.Admin[Model.Language, "SAVE_CHANGES"])" class="MyButton SpacedButton" />
        </form>
        <script type="text/javascript">
        var cur = @(Model.BanList?.Count ?? 0);

        function addBannedItem(email = '', ip = '') {
            var elem = $(
                "<div>" +
                "<hr class='SubtypeSeparator' />" +
                "<input type='hidden' name='banlist[" + cur + "].BanId' value='0'/>" +
                "<b>IP</b><br /><input type='text' name='banlist[" + cur + "].BanIp' value='" + ip + "' />" +
                "<p style='clear:both'></p>" +
                "<b>@Html.Raw(_translationProvider.BasicText[Model.Language, "EMAIL", Casing.FirstUpper])</b><br /><input type='text' name='banlist[" + cur + "].BanEmail' value='" + email + "' />" +
                "<p style='clear:both'></p>" +
                "<a href=\"#!\" onclick=\"cancelAddBannedWord(this)\">@Html.Raw(_translationProvider.Admin[Model.Language, "CANCEL"])</a>" +
                "</div>"
            );

            elem.appendTo($("#newBans"));
            cur++;

            if ((email || ip) && elem.offset()) {
                $("html,body").animate({ "scrollTop": elem.offset().top }, 300, function () {
                    elem.fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100);
                });
            }
        }

        function cancelAddBannedItem(elem) {
            $(elem).parent().parent().remove();
            cur--;
        }
        </script>
    }
    <div style="width:100%; text-align:right; font-size:1.5em">
        <a href="#bansTitle">&#x23EB;</a>
    </div>
</div>
<script type="text/javascript">
    function submitUserForm(userId, userName, actionValue, actionText) {
        msg = formatString(dictionary.Admin['CONFIRM_USER_COMMAND_FORMAT'], actionText, userName);

        if (confirm(msg)) {
            $("#userAction").val(actionValue);
            $("#userId").val(userId);
            $("#userManagement").submit();
        }
    }

    function populateGroup(group) {
        $('#groupId').val(group.id);
        $('#groupName').val(group.name);
        $('#groupNameTitle').text(formatString(dictionary.Admin['ADMIN_GROUP_TITLE_FORMAT'], group.name));
        $('#groupDesc').val(group.desc);
        $('#rank').val(group.rank);
        $('#role').val(group.role);
        $('#color').val(group.color);
        $('#colorTitle').text($('#color').val());
        $('#uploadLimit').val(group.uploadLimit / 1024 / 1024);
        $('#editTime').val(group.editTime);
        $('#deleteGroup').prop('disabled', false);
        $('#deleteGroup').prop('checked', false);
        showElement('groupAdministration');
    }

    function newGroup() {
        $('#groupId').val(0);
        $('#groupName').val('');
        $('#groupName').css('background-color', 'white');
        $('#groupNameTitle').text(dictionary.Admin['ADD_NEW_GROUP']);
        $('#groupDesc').val('');
        $('#rank').val('0');
        $('#role').val('0');
        $('#color').val('#000000');
        $('#colorTitle').text('#000000');
        $('#uploadLimit').val(250);
        $('#uploadLimit').css('background-color', 'white');
        $('#editTime').val(60);
        $('#editTime').css('background-color', 'white');
        $('#deleteGroup').prop('checked', false);
        $('#deleteGroup').prop('disabled', true);
        showElement('groupAdministration');
    }

    function populateRank(id, name) {
        $('#rankName').val(name);
        $('#rankId').val(id);
        $('#deleteRank').prop('checked', false);
        $('#deleteRank').prop('disabled', false);
        showElement('rankAdministration');
    }

    function newRank(name) {
        $('#rankName').val(name);
        $('#rankId').val(0);
        $('#deleteRank').prop('checked', false);
        $('#deleteRank').prop('disabled', true);
        showElement('rankAdministration')
    }

    function validateGroup() {
        var name = $('#groupName'), uploadLimit = $('#uploadLimit'), editTime = $('#editTime');
        var toReturn = true;

        if (!name.val()) {
            name.css('background-color', '#ffc2df');
            toReturn = false;
        }
        if (!uploadLimit.val()) {
            $('#uploadLimit').css('background-color', '#ffc2df');
            toReturn = false;
        }
        if (!editTime.val()) {
            $('#editTime').css('background-color', '#ffc2df');
            toReturn = false;
        }

        return toReturn;
    }

</script>

<form method="post" asp-page-handler="GroupManagement" id="groupAdministration" class="MiddleBox" style="display:none; padding: 10px; overflow-y: scroll">
    <h4 style="float:left" id="groupNameTitle"></h4>
    <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('groupAdministration')">
    @Html.Raw(_translationProvider.BasicText[Model.Language, "CLOSE_BUTTON"])
    </div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.Admin[Model.Language, "GROUP_NAME"])
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="dto.name" autocomplete="new-password" id="groupName" />
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.Admin[Model.Language, "GROUP_DESCRIPTION"])
        </div>
        <div class="FlexRight PostInputWidth">
            <textarea rows="4" cols="100" name="dto.desc" autocomplete="new-password" id="groupDesc"></textarea>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.BasicText[Model.Language, "RANK", Casing.FirstUpper])
        </div>
        <div class="FlexRight PostInputWidth">
            @Html.DropDownList("dto.rank", Model.RankListItems, new { id = "rank" })
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.BasicText[Model.Language, "COLOR", Casing.FirstUpper])
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="color" name="dto.color" class="jscolor" autocomplete="new-password" id="color" onchange="$('#colorTitle').text($(this).val())" />
            &nbsp;<span id="colorTitle" style="font-weight:bold; font-family:'Ubuntu Mono'; font-size: 1.5em"></span>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.Admin[Model.Language, "UPLOAD_LIMIT"])
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="dto.uploadLimit" autocomplete="new-password" id="uploadLimit" /><br />
            <span class="Caption DarkCaption">@Html.Raw(_translationProvider.Admin[Model.Language, "UPLOAD_LIMIT_CAPTION"])</span>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.Admin[Model.Language, "POST_EDIT_TIME"])
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="dto.editTime" autocomplete="new-password" id="editTime" /><br />
            <span class="Caption DarkCaption">@Html.Raw(_translationProvider.Admin[Model.Language, "POST_EDIT_TIME_CAPTION"])</span>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.Admin[Model.Language, "PERMISSIONS"])
        </div>
        <div class="FlexRight PostInputWidth">
            @Html.DropDownList("dto.role", Model.RoleListItems, new { id = "role" })
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            <label>
                @Html.CheckBox("dto.delete", false, new { id = "deleteGroup" })
                @Html.Raw(_translationProvider.Admin[Model.Language, "DELETE_THIS_GROUP"])
            </label>
        </div>
    </div>
    <p></p>
    <input type="submit" value="@Html.Raw(_translationProvider.Admin[Model.Language, "SAVE_CHANGES"])" onclick="return validateGroup();" class="MyButton" />
    <input type="hidden" name="dto.id" id="groupId" />
</form>

<form method="post" asp-page-handler="RankManagement" id="rankAdministration" class="MiddleBox" style="display:none; padding: 10px; overflow-y: scroll">
    <h4 style="float:left" id="groupNameTitle"></h4>
    <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('rankAdministration')">@Html.Raw(_translationProvider.BasicText[Model.Language, "CLOSE_BUTTON"])</div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.Raw(_translationProvider.Admin[Model.Language, "RANK_NAME"])
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="rankName" autocomplete="new-password" id="rankName" />
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            <label>
                @Html.CheckBox("deleteRank", false, new { id = "deleteRank" })
                @Html.Raw(_translationProvider.Admin[Model.Language, "DELETE_THIS_RANK"])
            </label>
        </div>
    </div>
    <input type="hidden" name="rankId" id="rankId" />
    <input type="submit" value="@Html.Raw(_translationProvider.Admin[Model.Language, "SAVE_CHANGES"])" onclick="return $('#rankName').val() ? true : false;" class="MyButton" />
</form>