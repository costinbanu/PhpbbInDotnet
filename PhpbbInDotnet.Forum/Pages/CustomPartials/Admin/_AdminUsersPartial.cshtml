@model PhpbbInDotnet.Forum.Pages.CustomPartials.Admin._AdminUsersPartialModel
@using Microsoft.EntityFrameworkCore
@inject Services.AdminUserService _adminUserService
@inject ForumDb.ForumDbContext _context

<h4>Utilizatori inactivi</h4>

<form method="post" id="userManagement" asp-page-handler="UserManagement">
    <input type="hidden" name="userAction" id="userAction" />
    <input type="hidden" name="userId" id="userId" />
</form>

@await Html.PartialAsync(
    "_AdminUsersSummaryPartial",
    new _AdminUsersSummaryPartialModel(
        Model.DateFormat,
        await _adminUserService.GetInactiveUsers()
    ),
    ViewData
)

<h4>Caută utilizatori</h4>
<form method="post" id="userSearch" asp-page-handler="UserSearch">
    <table class="mainTable">
        <tr>
            <td style="padding:5px; font-weight:bold; text-align: right">
                Nume utilizator
            </td>
            <td>
                <input type="text" name="username" id="username" />
            </td>
        </tr>
        <tr>
            <td style="padding:5px; font-weight:bold; text-align: right">
                E-mail
            </td>
            <td>
                <input type="text" name="email" id="email" />
            </td>
        </tr>
        <tr>
            <td style="padding:5px; font-weight:bold; text-align: right">
                Id
            </td>
            <td>
                <input type="text" name="userid" id="userid" />
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding:5px; font-weight:bold; text-align: center">
                <input type="submit" value="Caută" />
            </td>
        </tr>
    </table>
</form>

@if (Model.SearchResults.Any())
{
    @await Html.PartialAsync(
        "_AdminUsersSummaryPartial",
        new _AdminUsersSummaryPartialModel(
            Model.DateFormat,
            Model.SearchResults
        ),
        ViewData
    );
}

<h4>Grupuri</h4>
@{
    var groups = await (
        from g in _context.PhpbbGroups.AsNoTracking()
        let role = _context.PhpbbAclGroups.AsNoTracking().FirstOrDefault(rg => rg.GroupId == g.GroupId && rg.ForumId == 0)
        select new PhpbbInDotnet.Forum.Contracts.UpsertGroupDto
        {
            Id = g.GroupId,
            Name = g.GroupName,
            Rank = g.GroupRank,
            Color = $"#{g.GroupColour}",
            EditTime = g.GroupEditTime,
            UploadLimit = g.GroupUserUploadSize,
            Role = role == null ? 0 : role.AuthRoleId
        }
    ).ToListAsync();
    var groupRanks = new List<SelectListItem> { new SelectListItem("Nici unul", "0", true) };
    groupRanks.AddRange(_context.PhpbbRanks.AsNoTracking().Select(x => new SelectListItem(x.RankTitle, x.RankId.ToString())));
    var roles = new List<SelectListItem> { new SelectListItem("Nici una", "0", true) };
    roles.AddRange(_context.PhpbbAclRoles.AsNoTracking().Where(x => x.RoleType == "u_").Select(x => new SelectListItem(x.RoleName, x.RoleId.ToString())));

    foreach (var group in groups)
    {
        <a href='javascript:populateGroup(@Json.Serialize(group))'>@Html.Raw(group.Name)</a>
        <br />
    }
}
<p>&nbsp;</p>
<a href="javascript:newGroup()">Adaugă un grup nou</a>

<h4>Ranguri</h4>
@foreach (var rank in await _context.PhpbbRanks.AsNoTracking().ToListAsync())
{
    <a href="javascript:populateRank(@rank.RankId, '@rank.RankTitle')">@rank.RankTitle</a>
    <br />
}
<p>&nbsp;</p>
<a href="javascript:newRank()">Adaugă un rang nou</a>


<script type="text/javascript">
    function submitUserForm(userId, userName, action) {
        msg = "Am primit comanda '" + action + "' pentru utilizatorul '" + userName + "'. Sunteți sigur că doriți să continuați cu execuția acestei comenzi?";

        if (confirm(msg)) {
            document.getElementById("userAction").value = action;
            document.getElementById("userId").value = userId;
            document.getElementById("userManagement").submit();
        }
    }

    function populateGroup(group) {
        $('#groupId').val(group.id);
        $('#groupName').val(group.name);
        $('#groupNameTitle').text('Administrează grup - ' + group.name);
        $('#rank').val(group.rank);
        $('#role').val(group.role);
        $('#color').val(group.color);
        $('#colorTitle').text($('#color').val());
        $('#uploadLimit').val(group.uploadLimit / 1024 / 1024);
        $('#editTime').val(group.editTime);
        $('#deleteGroup').prop('disabled', false);
        $('#deleteGroup').prop('checked', false);
        showElement('groupAdministration');
    }

    function newGroup() {
        $('#groupId').val(0);
        $('#groupName').val('');
        $('#groupName').css('background-color', 'white');
        $('#groupNameTitle').text('Adaugă un grup nou');
        $('#rank').val('0');
        $('#role').val('0');
        $('#color').val('#000000');
        $('#colorTitle').text('#000000');
        $('#uploadLimit').val(250);
        $('#uploadLimit').css('background-color', 'white');
        $('#editTime').val(60);
        $('#editTime').css('background-color', 'white');
        $('#deleteGroup').prop('checked', false);
        $('#deleteGroup').prop('disabled', true);
        showElement('groupAdministration');
    }

    function populateRank(id, name) {
        $('#rankName').val(name);
        $('#rankId').val(id);
        $('#deleteRank').prop('checked', false);
        $('#deleteRank').prop('disabled', false);
        showElement('rankAdministration');
    }

    function newRank(name) {
        $('#rankName').val(name);
        $('#rankId').val(0);
        $('#deleteRank').prop('checked', false);
        $('#deleteRank').prop('disabled', true);
        showElement('rankAdministration')
    }

    function validateGroup() {
        var name = $('#groupName'), uploadLimit = $('#uploadLimit'), editTime = $('#editTime');
        var toReturn = true;

        if (!name.val()) {
            name.css('background-color', '#ffc2df');
            toReturn = false;
        }
        if (!uploadLimit.val()) {
            $('#uploadLimit').css('background-color', '#ffc2df');
            toReturn = false;
        }
        if (!editTime.val()) {
            $('#editTime').css('background-color', '#ffc2df');
            toReturn = false;
        }

        return toReturn;
    }

</script>

<form method="post" asp-page-handler="GroupManagement" id="groupAdministration" class="MiddleBox" style="display:none">
    <h4 style="float:left" id="groupNameTitle"></h4>
    <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('groupAdministration')">Închide [X]</div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Nume grup
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="dto.name" autocomplete="new-password" id="groupName" />
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Rang
        </div>
        <div class="FlexRight PostInputWidth">
            @Html.DropDownList("dto.rank", groupRanks, new { id = "rank" })
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Culoare
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="color" name="dto.color" class="jscolor" autocomplete="new-password" id="color" onchange="$('#colorTitle').text($(this).val())" />
            &nbsp;<span id="colorTitle" style="font-weight:bold; font-family:'Ubuntu Mono'; font-size: 1.5em"></span>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Limită upload (MB)
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="dto.uploadLimit" autocomplete="new-password" id="uploadLimit" /><br />
            <span class="Caption">"0" = nelimitat</span>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Timp editare mesaje (min.)
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="dto.editTime" autocomplete="new-password" id="editTime" /><br />
            <span class="Caption">"0" = nelimitat</span>
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Permisiuni
        </div>
        <div class="FlexRight PostInputWidth">
            @Html.DropDownList("dto.role", roles, new { id = "role" })
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.CheckBox("dto.delete", false, new { id = "deleteGroup" })
            &nbsp;Șterge acest grup
        </div>
    </div>
    <p></p>
    <input type="submit" value="Salvează modificările" onclick="return validateGroup();" />
    <input type="hidden" name="dto.id" id="groupId" />
</form>

<form method="post" asp-page-handler="RankManagement" id="rankAdministration" class="MiddleBox" style="display:none">
    <h4 style="float:left" id="groupNameTitle"></h4>
    <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('rankAdministration')">Închide [X]</div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            Nume rang
        </div>
        <div class="FlexRight PostInputWidth">
            <input type="text" name="rankName" autocomplete="new-password" id="rankName" />
        </div>
    </div>
    <p></p>
    <div class="FlexCenter">
        <div style="font-weight:bold; text-align: right">
            @Html.CheckBox("deleteRank", false, new { id = "deleteRank" })
            &nbsp;Șterge acest rang
        </div>
    </div>
    <input type="hidden" name="rankId" id="rankId" />
    <input type="submit" value="Salvează modificările" onclick="return $('#rankName').val() ? true : false;" />
</form>