@model _PostPartialModel

@using System.Web
@using Dapper
@using Utilities
@using Database.Entities
@using Microsoft.EntityFrameworkCore

@inject Services.UserService _userService
@inject CommonUtils _utils
@inject Database.ForumDbContext _context
@inject Services.BBCodeRenderingService _renderingService
@inject Services.UserService _userService
@inject Languages.LanguageProvider _languageProvider

@{
    var IsAnonymous = Model.CurrentUser.UserId == Constants.ANONYMOUS_USER_ID;
    var UserDateFormat = Model.CurrentUser?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    if (!DateTime.TryParse(DateTime.Now.ToString(UserDateFormat), out _))
    {
        UserDateFormat = "dddd, dd.MM.yyyy, HH:mm";
    }

    var EditTime = Model.CurrentUser.PostEditTime;
    var Connection = _context.Database.GetDbConnection();
}

@if (Model.CurrentUser.Foes?.Contains(Model.Post.AuthorId ?? 0) ?? false)
{
    Model.HasCurrentUserPM = false;
    Model.Post.AuthorId = 1;
    Model.Post.AuthorName = $"[{_languageProvider.BasicText[Model.Language, "HIDDEN", Casing.FirstUpper]}]";
    Model.Post.AuthorColor = null;
    Model.Post.AuthorHasAvatar = false;
    Model.Post.Attachments?.Clear();
    Model.Post.BbcodeUid = string.Empty;
    Model.Post.PostSubject = $"[{_languageProvider.BasicText[Model.Language, "HIDDEN", Casing.FirstUpper]}]";
    Model.Post.PostText = _languageProvider.BasicText[Model.Language, "CONTENT_HIDDEN_WARNING_BBCODE", Casing.FirstUpper];
}

@if ((Model.Report?.UserId ?? Constants.ANONYMOUS_USER_ID) != Constants.ANONYMOUS_USER_ID)
{
    var user = await Connection.QueryFirstOrDefaultAsync<PhpbbUsers>("SELECT * FROM phpbb_users WHERE user_id = @userId", new { Model.Report.UserId });
    if ((user?.UserId ?? Constants.ANONYMOUS_USER_ID) != Constants.ANONYMOUS_USER_ID)
    {
        Model.Post.ReporterUsername = HttpUtility.HtmlDecode(user.Username);
    }
}

@{
    await _renderingService.ProcessPost(Model.Post, Model.PageContext, Model.HttpContext, true);

    var rowClass = Model.Post.ReportId.HasValue && (Model.IsCurrentUserMod || Model.Post.ReporterId == Model.CurrentUser.UserId) ? "ReportedPost" : string.Empty;

    @if (!Model.IsPostFirstInPage)
    {
        <hr class="BoxSeparator" style="margin-top: 0px" />
    }

    var titleClass = Model.Post.Unread ? "UnreadTitle" : "";
    var color = string.IsNullOrWhiteSpace(Model.Post.AuthorColor) || Model.Post.AuthorColor == "000000" ? "auto" : $"#{Model.Post.AuthorColor}";
}
<div class="RowMargin @rowClass" style="max-width:100%; overflow-wrap: break-word">
    <div class="FlexRow" style="max-width:100%; overflow-wrap: break-word; padding-bottom: 0px">
        @await Html.PartialAsync("_SummaryPartial", new CustomPartials._SummaryPartialModel
        {
            AuthorId = Model.Post.AuthorId,
            AuthorName = Model.Post.AuthorName,
            AuthorColor = Model.Post.AuthorColor,
            CreationTime = Model.Post.PostCreationTime,
            AssetId = Model.Post.PostId.Value,
            DateFormat = UserDateFormat,
            ShowAvatar = Model.Post.AuthorHasAvatar,
            AuthorRank = Model.Post.AuthorRank,
            Left = true,
            ShowAsLast = false,
            PMLink = Model.HasCurrentUserPM ? $"<a href=\"./Posting?handler=PrivateMessage&postId={Model.Post.PostId}\">&#x1F5E8; {_languageProvider.BasicText[Model.Language, "PRIVATE_MESSAGE", Casing.FirstUpper]}</a>" : null,
            Language = Model.Language
        })
        <div class="ForumContent VerticalContent FlexRight" id="@Model.Post.PostId" style="max-width:100%; overflow-wrap: break-word; display:flex">
            <span style="display:flex">
                <span class="PostTitle">
                    <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@Model.Post.PostId" class="@titleClass">@Html.Raw(Model.Post.PostSubject)</a>
                </span>
                <span style="margin-left:auto">
                    <span class="CollapsedMenu ThemeColor" onclick="expandCollapsedMenu('summary@(Model.Post.PostId.Value)', 'button@(Model.Post.PostId.Value)')" id="button@(Model.Post.PostId.Value)" style="color:@color;margin-left: auto; height:auto; width: min-content">
                        @Html.Raw(Model.Post.AuthorName)
                    </span>
                </span>
                @if (Model.ShowQuoteButton)
                {
                    <span style="margin-left: auto; min-width: max-content; padding-top: 3px; padding-bottom: 30px; margin-top: 4px; margin-bottom: 4px">
                        <a href="javascript:posting.addquote(texts['@Model.Post.PostId'], '@Model.Post.AuthorName')">&#x1F4AC; @Html.Raw(_languageProvider.BasicText[Model.Language, "DO_QUOTE", Casing.FirstUpper])</a>
                    </span>
                }
            </span>
            <div style="max-width:100%; overflow-wrap: break-word">
                @if (Model.Post.ReportId.HasValue && (Model.IsCurrentUserMod || Model.Post.ReporterId == Model.CurrentUser.UserId))
                {
                    var reason = await Connection.QueryFirstOrDefaultAsync<PhpbbReportsReasons>("SELECT * FROM phpbb_reports_reasons WHERE reason_id = @reportReasonId", new { Model.Post.ReportReasonId });
                    <a href="javascript:vt.showReportViewer(@Model.Post.PostId, @Model.Post.ReportId, '@reason.ReasonTitle', '@reason.ReasonDescription', '@_renderingService.BbCodeToHtml(Model.Post.ReportDetails, string.Empty)', '@Model.Post.ReporterUsername')" style="font-weight:bold; font-size:1.2em">
                        @Html.Raw(_languageProvider.BasicText[Model.Language, "SHOW_REPORT", Casing.FirstUpper])
                    </a>
                    <br />
                }
                <br />
                @Html.Raw(Model.Post.PostText)
                @foreach (var attachment in Model.Post.Attachments)
                {
                    @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                }
            </div>

            @if (Model.ShowFooter)
            {
                <p>&nbsp;</p>
                <div class="PostFooter" style="margin-top: auto">
                    @if (Model.ShowEditHistory)
                    {
                        <div class="Caption ThemeColor">
                            @Html.Raw(_languageProvider.BasicText[Model.Language, "LAST_EDITED_BY"]) @Model.Post.LastEditUser
                            <script>writeDate("@Model.Post.LastEditTime.ToUtcTime().ToString("o")", "@UserDateFormat");</script>.
                            @if (!string.IsNullOrWhiteSpace(Model.Post.LastEditReason))
                            {
                                <span>@Html.Raw(_languageProvider.BasicText[Model.Language, "REASON", Casing.FirstUpper]): @HttpUtility.HtmlDecode(Model.Post.LastEditReason).</span>
                            }
                            @Html.Raw(_languageProvider.BasicText[Model.Language, "TOTAL_EDITS"]): @Model.Post.EditCount.
                        </div>
                        <p></p>
                    }
                    <div class="PostActions">
                        @if ((!Model.IsTopicLocked || Model.IsCurrentUserMod) && !IsAnonymous && (!Model.IsPostLastInPage || !Model.IsLastPage))
                        {
                            <span>
                                <a asp-page="/Posting" asp-page-handler="QuoteForumPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@Model.Post.PostId">
                                    @if (Model.IsTopicLocked)
                                    {
                                        <span>&#x1F4AC; @Html.Raw(_languageProvider.BasicText[Model.Language, "CLOSED_TOPIC", Casing.FirstUpper])</span>
                                    }
                                    else
                                    {
                                        <span>&#x1F4AC; @Html.Raw(_languageProvider.BasicText[Model.Language, "REPLY_AS_QUOTE"])</span>
                                    }
                                </a>
                            </span>
                        }
                        else if (!IsAnonymous && (!Model.IsPostLastInPage || !Model.IsLastPage))
                        {
                            <span>
                                <a href="javascript:;" title="Subiectul este închis, nu se mai pot trimite răspunsuri.">
                                    <s>&#x1F5E8; @Html.Raw(_languageProvider.BasicText[Model.Language, "CLOSED_TOPIC", Casing.FirstUpper])</s>
                                </a>
                            </span>
                        }

                        @if (!Model.Post.ReportId.HasValue && !IsAnonymous)
                        {
                            <span>
                                <a href="javascript:vt.showReportForm(@Model.Post.PostId);">
                                    &#x2757; @Html.Raw(_languageProvider.BasicText[Model.Language, "DO_REPORT", Casing.FirstUpper])
                                </a>
                            </span>
                        }
                        @if (Model.IsCurrentUserMod)
                        {
                            <span>
                                <a href="javascript:vt.showMessageDetails('@Model.Post.IP', '@Model.Post.LastEditTime.ToUtcTime().ToString("o")', '@UserDateFormat', @Model.Post.EditCount, '@Model.Post.LastEditUser');">
                                    &#x2753; @Html.Raw(_languageProvider.BasicText[Model.Language, "INFORMATION", Casing.FirstUpper])
                                </a>
                            </span>
                            <span>
                                @Html.Raw(_languageProvider.BasicText[Model.Language, "SELECT_FOR_MODERATION", Casing.FirstUpper])
                                <input name="PostIdsForModerator" type="checkBox" value="@Model.Post.PostId" form="moderatorForm" onchange="vt.appendPostId(this, @(Model.Post.PostId ?? -1))" @(Model.PostIdsForModerator.Contains(Model.Post.PostId ?? -1) ? "checked" : "") />
                            </span>
                        }
                        @if (Model.IsCurrentUserMod || (Model.Post.AuthorId == Model.CurrentUser.UserId && (EditTime == 0 || DateTime.UtcNow.Subtract(Model.Post.PostCreationTime ?? default).TotalMinutes <= EditTime)))
                        {
                            <span>
                                <a asp-page="/Posting" asp-page-handler="EditPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@Model.Post.PostId">
                                    &#x1F4DD; @Html.Raw(_languageProvider.BasicText[Model.Language, "DO_EDIT", Casing.FirstUpper])
                                </a>
                            </span>
                            if (Model.IsCurrentUserMod || Model.IsPostLastInPage)
                            {
                                if (!Model.IsCurrentUserMod)
                                {
                                    <input name="PostIdsForModerator" type="checkBox" value="@Model.Post.PostId" form="moderatorForm" onchange="vt.appendPostId(this, @(Model.Post.PostId ?? -1))" @(Model.PostIdsForModerator.Contains(Model.Post.PostId ?? -1) ? "checked" : "") style="display:none" />
                                }
                                <span>
                                    <a href="javascript:vt.deletePost(@(Model.Post.PostId ?? -1), @Model.ClosestPostId)">
                                        &#x1F6AE; @Html.Raw(_languageProvider.BasicText[Model.Language, "DO_DELETE", Casing.FirstUpper])
                                    </a>
                                </span>
                            }
                        }
                    </div>
                </div>
            }
            else
            {
                <p></p>
            }
        </div>
    </div>
</div>