@model WelcomeEmailDto

@using Microsoft.Extensions.Configuration
@using Domain
@using Domain.Utilities
@using Objects.EmailDtos

@inject IConfiguration _config
@inject Languages.ITranslationProvider _translationProvider

@{
    var culture = new System.Globalization.CultureInfo(Model.Language);
    var baseUrl = _config.GetValue<string>("BaseUrl");
    var forumName = _config.GetValue<string>("ForumName");
}

<h3>@Html.Raw(Model.Subject)</h3>
@if (Model.IsRegistrationReminder && Model.RegistrationDate != null)
{
    <p>
        @Html.Raw(string.Format(culture, _translationProvider.Email[Model.Language, "WELCOME_REMINDER_FORMAT"], Model.RegistrationDate, forumName))
    </p>
}
else if (Model.IsEmailChangeReminder && Model.EmailChangeDate != null)
{
    <p>
        @Html.Raw(string.Format(culture, _translationProvider.Email[Model.Language, "EMAIL_CHANGED_REMINDER_FORMAT"], Model.EmailChangeDate, forumName))
    </p>
}
<p>
    @Html.Raw(string.Format(_translationProvider.Email[Model.Language, "WELCOME_BODY_FORMAT"], $"{baseUrl.TrimEnd('/')}/Confirm?code={Model.RegistrationCode}&username={StringUtility.CleanString(Model.UserName)}&handler=ConfirmEmail"))
</p>
<p style="font-size:0.85em">
    @Html.Raw(string.Format(_translationProvider.Email[Model.Language, "WELCOME_FOOTER_FORMAT"], Model.UserName, baseUrl, forumName))
</p>
<p>
    @Html.Raw(_translationProvider.Email[Model.Language, "GREETING_END"])
</p>