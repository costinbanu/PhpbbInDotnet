@page
@model PhpbbInDotnet.Forum.Pages.ViewTopicModel

@using System.Web
@using Dapper
@using Domain
@using Domain.Utilities
@using Domain.Extensions
@using Objects
@using CustomPartials
@using Microsoft.EntityFrameworkCore

@inject Database.IForumDbContext _context
@inject Services.IBBCodeRenderingService _renderingService
@inject Services.IForumTreeService _forumService

@{
    ViewData["Title"] = $"{Model.ForumTitle} - {Model.TopicTitle}";
    Layout = "~/Pages/_Layout.cshtml";
    var currentUser = Model.GetCurrentUser();
    var isAdmin = await Model.IsCurrentUserAdminHere();
    var isMod = await Model.IsCurrentUserModeratorHere();
    var hasPM = currentUser.HasPrivateMessagePermissions;
    var editTime = currentUser.PostEditTime;
    var sqlExecuter = _context.GetSqlExecuter();
    var lang = Model.GetLanguage();
    var userDateFormat = currentUser.UserDateFormat ?? Model.TranslationProvider.GetDefaultDateFormat(lang);
    var isCurrentForumReadOnly = await _forumService.IsForumReadOnlyForUser(currentUser, Model.ForumId ?? 0);
    var forumTree = (await Model.GetForumTree(false, false)).Tree;
    if (Model.ForumId > 0)
    {
        ViewData[Constants.ViewDataKeys.FORUM_ID] = Model.ForumId;
        ViewData[Constants.ViewDataKeys.BREADCRUMBS] = _forumService.GetBreadCrumbs(forumTree, Model.ForumId.Value, Model.TopicId, Model.TopicTitle, Model.PageNum);
    }
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/he/1.2.0/he.min.js" integrity="sha512-PEsccDx9jqX6Dh4wZDCnWMaIO3gAaU0j46W//sSqQhUQxky6/eHZyeB3NrXD2xsyugAKd4KPiDANkcuoEa2JuA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
    <script type="text/javascript" src="~/js/viewTopic.js"></script>
    <script type="text/javascript" src="~/js/moderator.js"></script>
    <link rel="stylesheet" href="~/css/posting.css" />
</environment>

<script type="text/javascript">
    var vt = new ViewTopic(
        @Json.Serialize(Model.PostId ?? -1),
        @Json.Serialize(Model.ScrollToModeratorPanel),
        @Constants.OTHER_REPORT_REASON_ID
    );

    var mod = new Moderator(
        '@ModeratorTopicActions.MoveTopic',
        '@ModeratorPostActions.MoveSelectedPosts',
        '@ModeratorPostActions.SplitSelectedPosts',
        '@ModeratorTopicActions.CreateShortcut',
    );

    $(window).on('load', function () {
        vt.onLoad();
        if (@Json.Serialize(!string.IsNullOrWhiteSpace(Model.ModeratorActionResult.Message))) {
            $('#TopicAction').val('@EnumUtility.DefaultValue');
            $('#PostAction').val('@EnumUtility.DefaultValue');
        }
    });

    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>

@await Html.PartialAsync("_HeaderLinksPartial", new _HeaderLinksPartialModel(lang, currentUser.IsAnonymous), ViewData)

<p>&nbsp;</p>
<h3>@Html.Raw(Model.TranslationProvider.BasicText[lang, "TOPIC", Casing.FirstUpper]): @Html.Raw(Model.TopicTitle)</h3>
<span class="Caption">
    @Html.Raw($"{Model.PostCount} {(Model.PostCount != 1 ? Model.TranslationProvider.BasicText[lang, "POSTS"] : Model.TranslationProvider.BasicText[lang, "POST"])}, {Model.ViewCount} {(Model.ViewCount != 1 ? Model.TranslationProvider.BasicText[lang, "VIEWS"] : Model.TranslationProvider.BasicText[lang, "VIEW"])}")
</span>

@await Html.PartialAsync("_RulesPartial", new _RulesPartialModel
{
    ForumRules = Model.ForumRules,
    ForumRulesLink = Model.ForumRulesLink,
    Language = lang
}, ViewData)

@await Html.PartialAsync("_PollPartial", new _PollPartialModel
{
    CurrentUser = currentUser,
    Poll = Model.Poll,
    TopicId = Model.TopicId ?? 0,
    PageNum = Model.PageNum ?? 1,
    QueryString = Request.QueryString.ToString(),
    IsCurrentUserMod = isMod,
    IsCurrentUserAdmin = isAdmin,
    Language = lang
}, ViewData)

@await Html.PartialAsync("_PaginationControlsPartial", new _PaginationControlsPartialModel(
    paginator: Model.Paginator!,
    allowPaginationChange: true,
    back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
    forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
    includeEasyNavigation: false,
    language: lang,
    topicId: Model.TopicId,
    firstPostId: Model.Posts?.FirstOrDefault()?.PostId
), ViewData)

@{
    var reachedAnUnreadPost = false;
    var useModActions = false;
    @foreach (var (post, index) in Model.Posts!.Indexed())
    {
        post.Reports = Model.Reports?.Where(r => r.PostId == post.PostId);
        post.Unread = reachedAnUnreadPost || (reachedAnUnreadPost = await Model.IsPostUnread(post.ForumId, post.TopicId, post.PostId));
        post.Attachments = Model.Attachments!.TryGetValue(post.PostId, out var val) ? val : new List<AttachmentDto>();

        var closestPostId = 0;
        if (Model.Posts!.Count > 1)
        {
            if (index == 0) closestPostId = Model.Posts[1].PostId;
            else if (index == Model.Posts.Count - 1) closestPostId = Model.Posts[Model.Posts.Count - 2].PostId;
            else closestPostId = Model.Posts[index + 1].PostId;
        }

        @await Html.PartialAsync("_PostPartial", new _PostPartialModel
        {
            CurrentUser = currentUser,
            Post = post,
            ClosestPostId = closestPostId,
            PostIdsForModerator = Model.GetModeratorPostIds(),
            HasCurrentUserPM = hasPM,
            IsCurrentUserMod = isMod,
            IsPostFirstInPage = post == Model.Posts.First(),
            IsPostLastInPage = post == Model.Posts.Last(),
            IsLastPage = Model.Paginator!.IsLastPage,
            IsTopicLocked = Model.IsLocked,
            ShowFooter = currentUser!.Foes?.Contains(post.AuthorId) != true,
            IsForumReadOnly = isCurrentForumReadOnly,
            ShowEditHistory = (index < Model.Posts.Count - 1 && post.PostEditTime > Model.Posts[index + 1].PostTime) || (post.PostEditCount > 0 && post.PostEditUser != post.AuthorName),
            Language = lang,
            CorrelationId = Model.CorrelationId,
        }, ViewData)

        useModActions = post == Model.Posts.Last() && (post.AuthorId == currentUser.UserId && (editTime == 0 || DateTime.UtcNow.Subtract(post.PostCreationTime ?? default).TotalMinutes <= editTime));
    }

    <hr class="BoxSeparator" style="margin-top: 0px" />

    if (!isMod && useModActions)
    {
        <form id="moderatorForm" method="post" asp-page-handler="DeleteMyMessage" style="display:none">
            @Html.DropDownList(
                "PostAction",
                EnumUtility.EnumToDropDownList<ModeratorPostActions>(selectedItem: Model.PostAction, textTransform: item => Model.TranslationProvider.Enums[lang, item], defaultText: Model.TranslationProvider.BasicText[lang, "SELECT_AN_OPTION"]),
                new { onchange = "mod.showPostExtraInput(this)", id = "PostAction", style = "display:none" }
            )
            <input asp-for="ForumId" type="hidden" />
            <input asp-for="TopicId" type="hidden" />
            <input asp-for="PageNum" type="hidden" />
            <input asp-for="ClosestPostId" type="hidden" id="closestPostId" />
        </form>
        <span asp-validation-for="PostIdsForModerator" class="validation"></span>
    }
}
@if ((!Model.IsLocked || isMod || isAdmin) && !isCurrentForumReadOnly)
{
    <p></p>
    <button onclick="location.href='./Posting?forumId=@Model.ForumId&topicId=@Model.TopicId&pageNum=@Model.PageNum&handler=forumPost'" type="button" class="MyButton">

        @if (Model.IsLocked)
        {
            <span>&#x1F512;&nbsp;@Html.Raw(Model.TranslationProvider.BasicText[lang, "CLOSED_TOPIC", Casing.FirstUpper])</span>
        }
        else
        {
            <span>&#x1F4DD;&nbsp;@Html.Raw(Model.TranslationProvider.BasicText[lang, "WRITE_NEW_POST", Casing.FirstUpper])</span>
        }
    </button>
}
else if (!isCurrentForumReadOnly)
{
    <p></p>
    <button type="button" disabled class="MyButton">&#x1F512;&nbsp;@Html.Raw(Model.TranslationProvider.BasicText[lang, "CLOSED_TOPIC", Casing.FirstUpper])</button>
}
<p></p>
@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new _PaginationControlsPartialModel(
        paginator: Model.Paginator!,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: true,
        language: lang,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)

@*shortcuts*@
<div style="clear:both; margin: 10px 0px 10px 0px">
    <a href="/" class="nowrap">@Html.Raw(Model.TranslationProvider.BasicText[lang, "HOME", Casing.FirstUpper])</a>
    <span class="bullet">&nbsp;&bull;&nbsp;</span>
    <div class="newline"></div>
    @if (Model.ForumId != null)
    {
        <span>
            @Html.Raw(Model.TranslationProvider.BasicText[lang, "PARENT_FORUM", Casing.FirstUpper]):
            <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@Html.Raw(@Model.ForumTitle)</a>
        </span>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
    }
    <span onclick="showForumTree(this)" class="SpanLikeLink nowrap">@Html.Raw(Model.TranslationProvider.BasicText[lang, "CHOOSE_DESTINATION", Casing.FirstUpper])</span>
</div>

<div id="forumTree" style="display:none">
    <p>&nbsp;</p>
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new _ForumTreePartialModel(
            tree: forumTree,
            forumId: Model.ForumId,
            topicId: Model.TopicId,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[lang, "GO", Casing.FirstUpper])" class="MyButton" />
    </form>
</div>

@*moderator menu*@
@if (isMod)
{
    <form method="post" asp-page-handler="TopicModerator" style="padding-top:5px">
        @Html.Raw(Model.TranslationProvider.Moderator[lang, "MODERATE_TOPIC"]):
        @Html.DropDownList(
            nameof(Model.TopicAction),
            EnumUtility.EnumToDropDownList<ModeratorTopicActions>(
                selectedItem: Model.TopicAction, 
                textTransform: item => Model.TranslationProvider.Enums[lang, item], 
                defaultText: Model.TranslationProvider.BasicText[lang, "SELECT_AN_OPTION"],
                valueFilter: Model.FilterModeratorTopicActions
            ),
            new { onchange = "mod.showTopicExtraInput(this)", id = "TopicAction", style = "max-width:70%; height: 30px; padding-top: 0px" }
        )
        <div id="extraInputTopic" style="display:@(Model.ShowTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="@Html.Raw(Model.TranslationProvider.Moderator[lang, "DESTINATION_FORUM_ID"])" /><br />
            <a href="javascript:$('#modConfirmation').submit();">@Html.Raw(Model.TranslationProvider.Moderator[lang, "CHOOSE_DESTINATION_FORUM_ID"])</a>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[lang, "SUBMIT", Casing.FirstUpper])" onclick="return mod.confirmAction('#TopicAction');" class="MyButton" style="height:30px" />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        @Html.AntiForgeryToken()
    </form>

    <form id="moderatorForm" method="post" asp-page-handler="PostModerator" style="padding-top:5px">
        @Html.Raw(Model.TranslationProvider.Moderator[lang, "MODERATE_SELECTED_POSTS", Casing.FirstUpper]):
        @Html.DropDownList(
            nameof(Model.PostAction),
            EnumUtility.EnumToDropDownList<ModeratorPostActions>(
                selectedItem: Model.PostAction, 
                textTransform: item => Model.TranslationProvider.Enums[lang, item], 
                defaultText: Model.TranslationProvider.BasicText[lang, "SELECT_AN_OPTION"],
                valueFilter: action => action != ModeratorPostActions.RestorePosts && action != ModeratorPostActions.DuplicateSelectedPost
            ),
            new { onchange = "mod.showPostExtraInput(this)", id = "PostAction", style = "max-width:70%; height: 30px; padding-top: 0px" }
        )
        <div id="extraInputPostForum" style="display:@(Model.ShowPostForum ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="@Html.Raw(Model.TranslationProvider.Moderator[lang, "DESTINATION_FORUM_ID"])" /><br />
            <a href="javascript:$('#modConfirmation').submit();">@Html.Raw(Model.TranslationProvider.Moderator[lang, "CHOOSE_DESTINATION_FORUM_ID"])</a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <div id="extraInputPostTopic" style="display:@(Model.ShowPostTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationTopicId" placeholder="@Html.Raw(Model.TranslationProvider.Moderator[lang, "DESTINATION_TOPIC_ID"])" /><br />
            <a href="javascript:$('#modConfirmation').submit();">@Html.Raw(Model.TranslationProvider.Moderator[lang, "CHOOSE_DESTINATION_TOPIC_ID"])</a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationTopicId" class="validation"></span>
        </div>
        <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[lang, "SUBMIT", Casing.FirstUpper])" onclick="return mod.confirmAction('#PostAction');" class="MyButton" style="height:30px" />
        <br />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        <input asp-for="ClosestPostId" type="hidden" id="closestPostId" />
        <input asp-for="SelectedPostIds" type="hidden" />
        @Html.AntiForgeryToken()
    </form>

    <form id="moderatorDuplicateMessageForm" method="post" asp-page-handler="DuplicatePost">
        <input type="hidden" name="PostIdForDuplication" id="PostIdForDuplication" />
    </form>
    <form id="modConfirmation" asp-page="Confirm" method="get">
        <input type="hidden" asp-for="ForumId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" name="showTopicSelector" id="showTopicSelector" value="false" />
        <input type="hidden" name="selectedPostIds" id="selectedPostIds" value="" />
        <input type="hidden" name="postAction" id="postAction" value="" />
        <input type="hidden" name="topicAction" id="topicAction" value="" />
        <input type="hidden" name="handler" value="ModeratorConfirmation" />
        <input type="hidden" name="Destination" id="Destination" value="./ViewTopic" />
        @Html.AntiForgeryToken()
    </form>

    <div class="MiddleBox" id="postInfo" style="display:none; padding: 10px; overflow-y: scroll">
        <h4 style="float:left">@Html.Raw(Model.TranslationProvider.BasicText[lang, "INFORMATION", Casing.Title])</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('postInfo')">@Html.Raw(Model.TranslationProvider.BasicText[lang, "CLOSE_BUTTON"])</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div id="postInfoContent"></div>
    </div>
}

@if (!string.IsNullOrWhiteSpace(Model.ModeratorActionResult.Message))
{
    <p></p>
    <span class="message @((Model.ModeratorActionResult.IsSuccess ?? false) ? "success" : "fail")">@Html.Raw(Model.ModeratorActionResult.Message)</span>
}

@*message reporting*@
@if (!currentUser.IsAnonymous)
{
    <form asp-page-handler="ReportMessage" method="post" class="MiddleBox" id="report" style="display:none; padding: 10px; overflow-y: scroll">
        <h4 style="float:left">@Html.Raw(Model.TranslationProvider.BasicText[lang, "DO_REPORT"])</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('report')">@Html.Raw(Model.TranslationProvider.BasicText[lang, "CLOSE_BUTTON"])</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">@Html.Raw(Model.TranslationProvider.BasicText[lang, "REASON", Casing.FirstUpper])</div>
                <div class="FlexRight PostInputWidth">
                    @{
                        var reasons = new List<SelectListItem> { new SelectListItem(Model.TranslationProvider.BasicText[lang, "CHOOSE_REASON"], "-1", true, true) };
                        reasons.AddRange((await sqlExecuter.QueryAsync("SELECT reason_description, reason_id FROM phpbb_reports_reasons ORDER BY reason_order")).Select(x => new SelectListItem(x.reason_description.ToString(), x.reason_id.ToString())));
                    }
                    @Html.DropDownList("reportReasonId", reasons, new { id = "reportReason", style = "width: 100%" })
                </div>
            </div>
            <p></p>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">@Html.Raw(Model.TranslationProvider.BasicText[lang, "ADDITIONAL_DETAILS"])</div>
                <div class="FlexRight PostInputWidth">
                    <textarea name="ReportDetails" rows="4" cols="100" id="reportDetails" style="width:100%"></textarea>
                </div>
            </div>
        </div>
        <p></p>
        <input type="hidden" name="reportPostId" id="reportPostId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" asp-for="PostId" />
        <input type="hidden" name="ReportId" id="reportId" />
        <input type="submit" onclick="return vt.validateReportForm();" value="@Html.Raw(Model.TranslationProvider.BasicText[lang, "SUBMIT", Casing.FirstUpper])" class="MyButton" />
        <span class="validation" id="reportValidation" style="display:none"></span>
        @Html.AntiForgeryToken()
    </form>

    <div id="reportViewer" class="MiddleBox" style="display:none; padding: 10px; overflow-y: scroll">
        <h4 style="float:left">@Html.Raw(Model.TranslationProvider.BasicText[lang, "REPORT", Casing.FirstUpper])</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('reportViewer')">@Html.Raw(Model.TranslationProvider.BasicText[lang, "CLOSE_BUTTON"])</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">@Html.Raw(Model.TranslationProvider.BasicText[lang, "REPORT", Casing.FirstUpper])</div>
            <div class="FlexRight PostInputWidth">
                <span id="reportViewerReportReasonTitle"></span> &nbsp;(<span id="reportViewerReportReasonDescription"></span>)
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">@Html.Raw(Model.TranslationProvider.BasicText[lang, "REPORTING_USER"])</div>
            <div class="FlexRight PostInputWidth" id="reportViewerReporter">
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">@Html.Raw(Model.TranslationProvider.BasicText[lang, "ADDITIONAL_DETAILS"])</div>
            <div class="FlexRight PostInputWidth" id="reportViewerReportDetails">
            </div>
        </div>
        @if (isMod)
        {
            <form asp-page-handler="ManageReport" method="post">
                <input type="hidden" name="reportPostId" id="reportViewerReportPostId" />
                <input type="hidden" asp-for="TopicId" id="reportViewerPostId" />
                <input type="hidden" asp-for="PageNum" />
                <input type="hidden" asp-for="PostId" />
                <input type="hidden" name="reportId" id="reportViewerReportId" />
                <br />
                <label>
                    @Html.CheckBox("redirectToEdit", new { id = "reportViewerEditMessage" }) &nbsp;
                    @Html.Raw(Model.TranslationProvider.BasicText[lang, "EDIT_POST"])
                </label>
                <br />
                <label>
                    @Html.CheckBox("deletePost", new { id = "reportViewerDeleteMessage" }) &nbsp;
                    @Html.Raw(Model.TranslationProvider.BasicText[lang, "DELETE_POST"])
                </label>
                <br /><br />
                <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[lang, "CLOSE_REPORT"])" onclick="vt.confirmDeleteReportedPost()" class="MyButton" />
                @Html.AntiForgeryToken()
            </form>
        }
    </div>
}