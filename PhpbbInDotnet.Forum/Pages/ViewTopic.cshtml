@page
@model PhpbbInDotnet.Forum.Pages.ViewTopicModel

@using System.Web
@using Dapper
@using Utilities
@using Objects
@using CustomPartials
@using Microsoft.EntityFrameworkCore

@inject Services.UserService _userService
@inject CommonUtils _utils
@inject Database.ForumDbContext _context
@inject Services.BBCodeRenderingService _renderingService

@{
    ViewData["Title"] = $"{Model.ForumTitle} - {Model.TopicTitle}";
    Layout = "~/Pages/_Layout.cshtml";
    var CurrentUser = await Model.GetCurrentUserAsync();
    var IsAnonymous = CurrentUser.UserId == Constants.ANONYMOUS_USER_ID;
    var UserDateFormat = CurrentUser?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    if (!DateTime.TryParse(DateTime.Now.ToString(UserDateFormat), out _))
    {
        UserDateFormat = "dddd, dd.MM.yyyy, HH:mm";
    }
    var IsAdmin = await Model.IsCurrentUserAdminHere();
    var IsMod = await Model.IsCurrentUserModeratorHere();
    var HasPM = _userService.HasPrivateMessagePermissions(CurrentUser);
    var EditTime = CurrentUser.PostEditTime;
    var Connection = _context.Database.GetDbConnection();
    var Lang = await Model.GetLanguage();
}
<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
    <script type="text/javascript" src="~/js/viewTopic.js"></script>
    <link rel="stylesheet" href="~/css/posting.css" />
</environment>

<script type="text/javascript">
    var vt = new ViewTopic(
        @Json.Serialize(Model.PostId ?? -1),
        @Model.ScrollToModeratorPanel,
        '@ModeratorTopicActions.MoveTopic',
        '@ModeratorPostActions.MoveSelectedPosts',
        '@ModeratorPostActions.SplitSelectedPosts',
        @Constants.OTHER_REPORT_REASON_ID
    );

    $(document).ready(function () {
        window.onload = function () {
            vt.onLoad();
        }
    });

    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>
<span style="padding-top: 10px; padding-bottom: 10px">Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(Model.ForumTitle)</a></span>
@if (!CurrentUser.IsAnonymous)
{
    <span>&nbsp;&bull;&nbsp;</span>
    @await Html.PartialAsync(
        "_HeaderLinksPartial",
        new _HeaderLinksPartialModel(Lang),
        ViewData
    )
}
<p>&nbsp;</p>
<h3>Subiect: @Model.TopicTitle</h3>
<span class="Caption">@Model.PostCount mesaj@(Model.PostCount == 1 ? "" : "e"), @Model.ViewCount vizualiz@(Model.ViewCount == 1 ? "are" : "ări").</span>

@await Html.PartialAsync("_RulesPartial", new _RulesPartialModel
{
    ForumRules = Model.ForumRules,
    ForumRulesLink = Model.ForumRulesLink,
    Language = Lang
}, ViewData)

@await Html.PartialAsync("_PollPartial", new _PollPartialModel
{
    CurrentUser = CurrentUser,
    Poll = Model.Poll,
    TopicId = Model.TopicId ?? 0,
    PageNum = Model.PageNum ?? 1,
    QueryString = Request.QueryString.ToString(),
    IsCurrentUserMod = IsMod,
    IsCurrentUserAdmin = IsAdmin,
    Language = Lang
}, ViewData)

@await Html.PartialAsync("_PaginationControlsPartial", new _PaginationControlsPartialModel(
    paginator: Model.Paginator,
    allowPaginationChange: true,
    back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
    forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
    includeEasyNavigation: false,
    language: Lang,
    topicId: Model.TopicId,
    firstPostId: Model.Posts?.FirstOrDefault()?.PostId
), ViewData)

@{
    var index = 0;
    var reachedAnUnreadPost = false;
    var useModActions = false;
    @foreach (var p in Model.Posts)
    {
        var ju = Model.Users?.FirstOrDefault(u => u.UserId == p.PosterId);
        var joinedAttachments = Model.Attachments?.Where(a => a.PostMsgId == p.PostId);
        var jr = Model.Ranks?.FirstOrDefault(r => ju?.UserId == r.UserId);
        var lastEditUser = Model.LastEditUsers?.FirstOrDefault(u => u.UserId == p.PostEditUser);
        var lastEditUsername = lastEditUser == null ? "Anonymous" : lastEditUser.Username;
        var report = Model.Reports?.FirstOrDefault(r => r.PostId == p.PostId);

        var post = new Objects.PostDto
        {
            PostSubject = p.PostSubject,
            PostText = p.PostText,
            AuthorName = ((ju?.UserId ?? Constants.ANONYMOUS_USER_ID) == Constants.ANONYMOUS_USER_ID ? p.PostUsername : ju.Username),
            AuthorId = ju?.UserId ?? Constants.ANONYMOUS_USER_ID,
            AuthorColor = ju?.UserColour,
            PostCreationTime = p.PostTime.ToUtcTime(),
            PostModifiedTime = p.PostEditTime.ToUtcTime(),
            PostId = p.PostId,
            Attachments = joinedAttachments.Select(a => new AttachmentDto(a, false, Lang)).ToList(),
            BbcodeUid = p.BbcodeUid,
            Unread = reachedAnUnreadPost || (reachedAnUnreadPost = await Model.IsPostUnread(p.ForumId, p.TopicId, p.PostId)),
            AuthorHasAvatar = !string.IsNullOrWhiteSpace(ju?.UserAvatar),
            AuthorRank = ju == null ? null : (jr?.RankTitle ?? "Membru înregistrat"),
            LastEditTime = p.PostEditTime,
            LastEditUser = lastEditUsername,
            LastEditReason = p.PostEditReason,
            EditCount = p.PostEditCount,
            IP = p.PosterIp,
            ReportId = report?.ReportId,
            ReportReasonId = report?.ReasonId,
            ReportDetails = report?.ReportText,
            ReporterId = report?.UserId
        };

        int? closestPostIdIndex = null;
        if (Model.Posts.Count > 1)
        {
            if (index == 0) closestPostIdIndex = 1;
            else if (index == Model.Posts.Count - 1) closestPostIdIndex = Model.Posts.Count - 2;
            else closestPostIdIndex = index + 1;
        }
        var closestPostId = closestPostIdIndex.HasValue ? Model.Posts[closestPostIdIndex.Value].PostId : 0;

        @await Html.PartialAsync("_PostPartial", new _PostPartialModel
        {
            CurrentUser = CurrentUser,
            Post = post,
            ForumId = Model.ForumId ?? 0,
            TopicId = Model.TopicId ?? 0,
            ClosestPostId = closestPostIdIndex.HasValue ? Model.Posts[closestPostIdIndex.Value].PostId : 0,
            PostIdsForModerator = Model.PostIdsForModerator,
            HasCurrentUserPM = HasPM,
            IsCurrentUserMod = IsMod,
            IsPostFirstInPage = p == Model.Posts.First(),
            IsPostLastInPage = p == Model.Posts.Last(),
            IsLastPage = Model.Paginator.IsLastPage,
            IsTopicLocked = Model.IsLocked,
            ShowFooter = !(CurrentUser.Foes?.Contains(p.PosterId) ?? false),
            ShowEditHistory = (index < Model.Posts.Count - 1 && post.LastEditTime > Model.Posts[index + 1].PostTime) || (post.EditCount > 0 && post.LastEditUser != post.AuthorName),
            Language = Lang            
        }, ViewData)

        index++;

        useModActions = p == Model.Posts.Last() && (post.AuthorId == CurrentUser.UserId && (EditTime == 0 || DateTime.UtcNow.Subtract(post.PostCreationTime ?? default).TotalMinutes <= EditTime));
    }

    <hr class="BoxSeparator" style="margin-top: 0px" />

    if (!IsMod && useModActions)
    {
        <form id="moderatorForm" method="post" asp-page-handler="DeleteMyMessage" style="display:none">
            @Html.DropDownList("PostAction", _utils.EnumToDropDownList<ModeratorPostActions>(Model.PostAction, Model.MapModeratorPostActions), new { onchange = "vt.showPostExtraInput(this)", id = "PostAction", style = "display:none" })
            <input asp-for="ForumId" type="hidden" />
            <input asp-for="TopicId" type="hidden" />
            <input asp-for="PageNum" type="hidden" />
            <input asp-for="ClosestPostId" type="hidden" id="closestPostId" />
        </form>
        <span asp-validation-for="PostIdsForModerator" class="validation"></span>
    }
}
@if ((!Model.IsLocked || IsMod || IsAdmin) && !IsAnonymous)
{
    <p></p>
    <button onclick="location.href='/Posting?forumId=@Model.ForumId&topicId=@Model.TopicId&pageNum=@Model.PageNum&handler=forumPost'" type="button" class="MyButton">

        @if (Model.IsLocked)
        {
            <span>&#x1F512;Subiect închis</span>
        }
        else
        {
            <span>&#x1F4DD;&nbsp;Scrie un mesaj nou</span>
        }
    </button>
}
else if (!IsAnonymous)
{
    <p></p>
    <button type="button" disabled class="MyButton">&#x1F512; Subiect închis</button>
}
<p></p>
@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new _PaginationControlsPartialModel(
        paginator: Model.Paginator,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: true,
        language: Lang,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)

@*shortcuts*@
<div style="clear:both; margin: 10px 0px 10px 0px">
    <a href="/" class="nowrap">Prima pagină</a>
    <span class="bullet">&nbsp;&bull;&nbsp;</span>
    <div class="newline"></div>
    @if (Model.ForumId != null)
    {
        <span>Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(@Model.ForumTitle)</a></span>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
    }
    <span onclick="showForumTree(this)" class="SpanLikeLink nowrap">Alege destinația</span>
</div>

<div id="forumTree" style="display:none">
    <p>&nbsp;</p>
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new _ForumTreePartialModel(
            tree: (await Model.GetForumTree(false, false)).Tree,
            forumId: Model.ForumId,
            topicId: Model.TopicId,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" class="MyButton" />
    </form>
</div>

@*moderator menu*@
@if (IsMod)
{
    <form method="post" asp-page-handler="TopicModerator" style="padding-top:5px">
        <span>Moderează subiectul: </span>
        @Html.DropDownList("TopicAction", _utils.EnumToDropDownList<ModeratorTopicActions>(Model.TopicAction, Model.MapModeratorTopicActions), new { onchange = "vt.showTopicExtraInput(this)", id = "TopicAction", style = "max-width:70%; height: 30px; padding-top: 0px" })
        <div id="extraInputTopic" style="display:@(Model.ShowTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" onclick="return vt.confirmAction('#TopicAction');" class="MyButton" style="height:30px" />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        @Html.AntiForgeryToken()
    </form>

    <form id="moderatorForm" method="post" asp-page-handler="PostModerator" style="padding-top:5px">
        <span>Moderează mesajele selectate: </span>
        @Html.DropDownList("PostAction", _utils.EnumToDropDownList<ModeratorPostActions>(Model.PostAction, Model.MapModeratorPostActions), new { onchange = "vt.showPostExtraInput(this)", id = "PostAction", style = "max-width:70%; height: 30px; padding-top: 0px" })
        <div id="extraInputPostForum" style="display:@(Model.ShowPostForum ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <div id="extraInputPostTopic" style="display:@(Model.ShowPostTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationTopicId" placeholder="ID subiect destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul subiectului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationTopicId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" onclick="return vt.confirmAction('#PostAction');" class="MyButton" style="height:30px" />
        <br />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        <input asp-for="ClosestPostId" type="hidden" id="closestPostId" />
        @Html.AntiForgeryToken()
    </form>
    <form id="modConfirmation" asp-page="Confirm" method="get">
        <input type="hidden" asp-for="ForumId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" name="showTopicSelector" id="showTopicSelector" value="false" />
        <input type="hidden" name="selectedPostIds" id="selectedPostIds" value="" />
        <input type="hidden" name="postAction" id="postAction" value="" />
        <input type="hidden" name="topicAction" id="topicAction" value="" />
        <input type="hidden" name="handler" value="ModeratorConfirmation" />
        @Html.AntiForgeryToken()
    </form>
    @if (!string.IsNullOrWhiteSpace(Model.ModeratorActionResult))
    {
        <br />
        @Html.Raw(Model.ModeratorActionResult)
    }

    <div class="MiddleBox" id="postInfo" style="display:none; padding: 10px; overflow-y: scroll">
        <h4 style="float:left">Informații mesaj</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('postInfo')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div id="postInfoContent"></div>
    </div>
}

@*message reporting*@
@if (!IsAnonymous)
{
    <form asp-page-handler="ReportMessage" method="post" class="MiddleBox" id="report" style="display:none; padding: 10px; overflow-y: scroll">
        <h4 style="float:left">Raportează mesaj</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('report')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Motiv
                </div>
                <div class="FlexRight PostInputWidth">
                    @{
                        var reasons = new List<SelectListItem> { new SelectListItem("Alege un motiv", "-1", true, true) };
                        reasons.AddRange((await Connection.QueryAsync("SELECT reason_description, reason_id FROM phpbb_reports_reasons ORDER BY reason_order")).Select(x => new SelectListItem(x.reason_description.ToString(), x.reason_id.ToString())));
                    }
                    @Html.DropDownList("reportReasonId", reasons, new { id = "reportReason", style = "width: 100%" })
                </div>
            </div>
            <p></p>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Detalii suplimentare
                </div>
                <div class="FlexRight PostInputWidth">
                    <textarea name="ReportDetails" rows="4" cols="100" id="reportDetails" style="width:100%"></textarea>
                </div>
            </div>
        </div>
        <p></p>
        <input type="hidden" name="reportPostId" id="reportPostId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" asp-for="PostId" />
        <input type="hidden" name="ReportId" id="reportId" />
        <input type="submit" onclick="return vt.validateReportForm();" value="Trimite" class="MyButton" />&nbsp;<span class="validation" id="reportValidation" style="display:none"></span>
        @Html.AntiForgeryToken()
    </form>

    <div id="reportViewer" class="MiddleBox" style="display:none; padding: 10px; overflow-y: scroll">
        <h4 style="float:left">Raport</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('reportViewer')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Motiv
            </div>
            <div class="FlexRight PostInputWidth">
                <span id="reportViewerReportReasonTitle"></span> &nbsp;(<span id="reportViewerReportReasonDescription"></span>)
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Raportor
            </div>
            <div class="FlexRight PostInputWidth" id="reportViewerReporter">
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Detalii suplimentare
            </div>
            <div class="FlexRight PostInputWidth" id="reportViewerReportDetails">
            </div>
        </div>
        @if (IsMod)
        {
            <form asp-page-handler="ManageReport" method="post">
                <input type="hidden" name="reportPostId" id="reportViewerReportPostId" />
                <input type="hidden" asp-for="TopicId" id="reportViewerPostId" />
                <input type="hidden" asp-for="PageNum" />
                <input type="hidden" asp-for="PostId" />
                <input type="hidden" name="reportId" id="reportViewerReportId" />
                <br />
                @Html.CheckBox("redirectToEdit", new { id = "reportViewerEditMessage" }) &nbsp; Modifică mesajul<br />
                @Html.CheckBox("deletePost", new { id = "reportViewerDeleteMessage" }) &nbsp; Șterge mesajul<br /><br />
                <input type="submit" value="Închide raport" onclick="vt.confirmDeleteReportedPost()" class="MyButton" />
                @Html.AntiForgeryToken()
            </form>
        }
    </div>
}