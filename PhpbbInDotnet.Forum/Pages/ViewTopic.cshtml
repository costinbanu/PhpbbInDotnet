@page
@model PhpbbInDotnet.Forum.Pages.ViewTopicModel

@using System.Web
@using PhpbbInDotnet.Utilities
@using Microsoft.EntityFrameworkCore
@using PhpbbInDotnet.DTOs

@inject Services.UserService _userService
@inject Services.CommonUtils _utils
@inject Database.ForumDbContext _context
@inject Services.BBCodeRenderingService _renderingService

@{
    ViewData["Title"] = $"{Model.ForumTitle} - {Model.TopicTitle}";
    Layout = "~/Pages/_Layout.cshtml";
    var CurrentUser = await Model.GetCurrentUserAsync();
    var IsAnonymous = CurrentUser.UserId == Constants.ANONYMOUS_USER_ID;
    var UserDateFormat = CurrentUser?.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    if (!DateTime.TryParse(DateTime.Now.ToString(UserDateFormat), out var _))
    {
        UserDateFormat = "dddd, dd.MM.yyyy, HH:mm";
    }
    var IsAdmin = await Model.IsCurrentUserAdminHere();
    var IsMod = await Model.IsCurrentUserModeratorHere();
    var EditTime = CurrentUser.PostEditTime;
}
<environment include="Development">
    <link rel="stylesheet" href="~/css/pagination.css" />
    <script type="text/javascript" src="~/js/viewTopic.js"></script>
    <link rel="stylesheet" href="~/css/posting.css" />
</environment>

<script type="text/javascript">
    var vt = new ViewTopic(
        @Json.Serialize(Model.PostId ?? -1),
        @Json.Serialize(Model.Highlight ?? true),
        @Model.ScrollToModeratorPanel,
        '@ModeratorTopicActions.MoveTopic',
        '@ModeratorPostActions.MoveSelectedPosts',
        '@ModeratorPostActions.SplitSelectedPosts',
        @Constants.OTHER_REPORT_REASON_ID
    );

    $(document).ready(function () {
        window.onload = function () {
            vt.onLoad();
        }
    });

    //forum tree callback
    function forumSelectCallback(forumId) {
        var forumInput = document.getElementById("ForumIdInput");
        if (forumInput != null) {
            forumInput.value = forumId;
        }
    }
</script>
@if (!CurrentUser.IsAnonymous)
{
    <span>Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(Model.ForumTitle)</a></span>
    <span> &bull;&nbsp;</span>
    @await Html.PartialAsync(
        "_HeaderLinksPartial",
        new PhpbbInDotnet.Forum.Pages.CustomPartials._HeaderLinksPartialModel(),
        ViewData
    )
}

<h2>Subiect: @Model.TopicTitle</h2>
<span class="Caption">@Model.PostCount mesaj@(Model.PostCount == 1 ? "" : "e"), @Model.ViewCount vizualiz@(Model.ViewCount == 1 ? "are" : "ări").</span>

@await Html.PartialAsync("_RulesPartial", new CustomPartials._RulesPartialModel(_renderingService, _utils, Model.ForumRules, Model.ForumRulesUid, Model.ForumRulesLink), ViewData)

@if (Model.Poll != null)
{
    var displayResultsMenu = Model.Poll.PollEnded || !Model.Poll.PollEnd.HasValue || IsMod;
    var displayVoteMenu = Model.Poll.CanVoteNow(CurrentUser.UserId) || !displayResultsMenu;
    if (displayVoteMenu)
    {
        <div id="votes" style="display:block">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.Poll.PollTitle))</h3>
            <div>Chestionarul @(Model.Poll.PollEnded ? "a fost" : "va fi") inchis: @(Model.Poll.PollEnd.HasValue ? Model.Poll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>
            <form method="post" asp-page-handler="vote">
                @foreach (var option in Model.Poll.PollOptions)
                {
                    var isChecked = option.PollOptionVoters.Any(v => v.UserId == CurrentUser.UserId);
                    <table style="border:none; padding:unset; margin:unset; width:100%">
                        <tr style="border-bottom:solid 1px black">
                            <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            </td>
                            <td>
                                <input type="@(Model.Poll.PollMaxOptions > 1 ? "checkbox" : "radio")" name="Votes" value="@option.PollOptionId" @(isChecked ? "checked" : "") @(!Model.Poll.CanVoteNow(CurrentUser.UserId) ? "disabled" : "") />
                            </td>
                        </tr>
                    </table>
                }
                <br />
                <input asp-for="TopicId" type="hidden" />
                <input asp-for="PageNum" type="hidden" />
                <input name="queryString" type="hidden" value="@HttpUtility.UrlEncode(Request.QueryString.ToString())" />
                @if (Model.Poll.CanVoteNow(CurrentUser.UserId))
                {
                    <input type="submit" value="Trimite vot" />
                    <span asp-validation-for="Poll" class="validation"></span>
                }
                @Html.AntiForgeryToken()
            </form>
        </div>
    }
    if (displayResultsMenu)
    {
        <div id="results" style="display:@(displayVoteMenu ? "none" : "block")">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.Poll.PollTitle))</h3>
            <div>Chestionarul @(Model.Poll.PollEnded ? "a fost" : "va fi") inchis: @(Model.Poll.PollEnd.HasValue ? Model.Poll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>
            <p></p>
            <table style="border:none; padding:unset; margin:unset; width:100%">
                @foreach (var option in Model.Poll.PollOptions)
                {
                    <tr style="border-bottom:solid 1px black">
                        <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                            @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            @if (IsAdmin)
                            {
                                <div class="Caption">
                                    Votanti: @Html.Raw(HttpUtility.HtmlDecode(string.Join(", ", option.PollOptionVoters.Select(v => v.Username))))
                                </div>
                            }
                        </td>
                        <td style="width:50%; padding-top: 5px; padding-bottom: 5px">
                            @{var percentage = (Model.Poll.TotalVotes == 0 ? 0 : option.PollOptionVotes * 100m / Model.Poll.TotalVotes).ToString("##0.##'%'", System.Globalization.CultureInfo.InvariantCulture);}
                            <span style="width: 100%; background: linear-gradient(to right, #87ceeb @percentage, #ffffff 0%); border: solid 1px black; display: inline-block; padding:2px">
                                @option.PollOptionVotes @(option.PollOptionVotes == 1 ? "vot" : "voturi") (@(percentage))
                            </span>
                        </td>
                    </tr>
                }
            </table>
        </div>
        @if (Model.Poll.CanVoteNow(CurrentUser.UserId) && IsAdmin)
        {
            <input type="button" value="Arată rezultatele" onclick="vt.switchPollPanels('results', 'votes', this)" />
        }
    }
}

@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new CustomPartials._PaginationControlsPartialModel(
        paginator: Model.Paginator,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: false,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)
@{
    var index = 0;
    var reachedAnUnreadPost = false;
    var isFirst = true;
    var previousIsUnread = false;
    var useModActions = false;
    @foreach (var p in Model.Posts)
    {
        var ju = Model.Users?.FirstOrDefault(u => u.UserId == p.PosterId);
        var joinedAttachments = Model.Attachments?.Where(a => a.PostMsgId == p.PostId);
        var jr = Model.Ranks?.FirstOrDefault(r => ju.UserRank == r.RankId);
        var lastEditUser = Model.LastEditUsers?.FirstOrDefault(u => u.UserId == p.PostEditUser);
        var lastEditUsername = lastEditUser == null ? "Anonymous" : lastEditUser.Username;
        var report = Model.Reports?.FirstOrDefault(r => r.PostId == p.PostId);

        var post = new DTOs.PostDto
        {
            PostSubject = p.PostSubject,
            PostText = p.PostText,
            AuthorName = ((ju?.UserId ?? Constants.ANONYMOUS_USER_ID) == Constants.ANONYMOUS_USER_ID ? p.PostUsername : ju.Username),
            AuthorId = ju?.UserId ?? Constants.ANONYMOUS_USER_ID,
            AuthorColor = ju?.UserColour,
            PostCreationTime = p.PostTime.ToUtcTime(),
            PostModifiedTime = p.PostEditTime.ToUtcTime(),
            PostId = p.PostId,
            Attachments = joinedAttachments.Select(x => new AttachmentDto(x)).ToList(),
            BbcodeUid = p.BbcodeUid,
            Unread = reachedAnUnreadPost || (reachedAnUnreadPost = await Model.IsPostUnread(p.ForumId, p.TopicId, p.PostId)),
            AuthorHasAvatar = !string.IsNullOrWhiteSpace(ju?.UserAvatar),
            AuthorRank = jr?.RankTitle,
            LastEditTime = p.PostEditTime,
            LastEditUser = lastEditUsername,
            LastEditReason = p.PostEditReason,
            EditCount = p.PostEditCount,
            IP = p.PosterIp,
            ReportId = report?.ReportId,
            ReportReasonId = report?.ReasonId,
            ReportDetails = report?.ReportText,
            ReporterId = report?.UserId
        };

        if (CurrentUser.Foes?.Contains(p.PosterId) ?? false)
        {
            post.AuthorHasAvatar = false;
            post.Attachments?.Clear();
            post.BbcodeUid = string.Empty;
            post.PostSubject = "Re:";
            post.PostText = "[i]Autorul acestui mesaj este pe lista ta de persoane neagreate, drept urmare nu poți vedea conținutul mesajelor sale[/i]";
        }

        if ((report?.UserId ?? Constants.ANONYMOUS_USER_ID) != Constants.ANONYMOUS_USER_ID)
        {
            var user = await _context.PhpbbUsers.AsNoTracking().FirstOrDefaultAsync(u => u.UserId == report.UserId);
            if ((user?.UserId ?? Constants.ANONYMOUS_USER_ID) != Constants.ANONYMOUS_USER_ID)
            {
                post.ReporterUsername = HttpUtility.HtmlDecode(user.Username);
            }
        }

        await _renderingService.ProcessPost(post, Model.PageContext, Model.HttpContext, true);

        var rowClass = string.Empty;
        if (post.ReportId.HasValue && (IsMod || post.ReporterId == CurrentUser.UserId))
        {
            rowClass = "ReportedPost";
        }
        else
        {
            rowClass = post.Unread ? "Unread" : "";
        }

        if (!isFirst && !previousIsUnread && !post.Unread)
        {
            <hr />
        }

        previousIsUnread = post.Unread;
        var titleClass = post.Unread ? "UnreadTitle" : "";
        <div class="RowMargin @rowClass" style="max-width:100%; overflow-wrap: break-word">
            <div class="FlexRow" style="max-width:100%; overflow-wrap: break-word">
                @await Html.PartialAsync(
                    "_SummaryPartial",
                    new CustomPartials._SummaryPartialModel(post.AuthorId, post.AuthorName, post.AuthorColor, post.PostCreationTime, post.PostId.Value,
                        UserDateFormat, post.AuthorHasAvatar, post.AuthorRank, null, null, null, true, false, null, null, null,
                        _userService.HasPrivateMessagePermissions(CurrentUser) ? $"<a href=\"./Posting?handler=PrivateMessage&postId={post.PostId}\">&#x1F5E8; Mesaj privat</a>" : null)
                )
                <div class="ForumContent VerticalContent FlexRight" id="@post.PostId" style="max-width:100%; overflow-wrap: break-word">
                    <span style="display:flex">
                        <span class="PostTitle">
                            <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@post.PostId" class="@titleClass">@Html.Raw(post.PostSubject)</a>
                        </span>
                        <span style="margin-left:auto">
                            <span class="CollapsedMenu" onclick="expandCollapsedMenu('summary@(post.PostId.Value)', 'button@(post.PostId.Value)')" id="button@(post.PostId.Value)" style="color:#@post.AuthorColor;margin-left: auto; height:auto; width: min-content">
                                @Html.Raw(post.AuthorName)
                            </span>
                        </span>
                    </span>
                    <div style="max-width:100%; overflow-wrap: break-word">
                        @if (post.ReportId.HasValue && (IsMod || post.ReporterId == CurrentUser.UserId))
                        {
                            var reason = await _context.PhpbbReportsReasons.AsNoTracking().FirstOrDefaultAsync(x => x.ReasonId == post.ReportReasonId);
                            <a href="javascript:vt.showReportViewer(@post.PostId, @post.ReportId, '@reason.ReasonTitle', '@reason.ReasonDescription', '@HttpUtility.HtmlDecode(post.ReportDetails)', '@post.ReporterUsername')" style="font-weight:bold; font-size:1.2em">Arată raportul</a><br />
                        }
                        <br />
                        @Html.Raw(post.PostText)
                        @foreach (var attachment in post.Attachments)
                        {
                            @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                        }
                    </div>

                    @if (!(CurrentUser.Foes?.Contains(post.AuthorId ?? 1) ?? false))
                    {
                        <div class="PostFooter">
                            @if (!IsAnonymous || post.LastEditTime > 0)
                            {
                                <hr class="SubtypeSeparator" />
                            }
                            @if (index < Model.Posts.Count - 1 && post.LastEditTime > Model.Posts[index + 1].PostTime)
                            {
                                <div class="Caption" style="color:#495d6c">
                                    Ultima dată modificat de @post.LastEditUser
                                    <script>
                                    writeDate("@post.LastEditTime.ToUtcTime().ToString("o")", "@UserDateFormat");
                                    </script>
                                    @if (!string.IsNullOrWhiteSpace(post.LastEditReason))
                                    {
                                        <span>. Motiv: @HttpUtility.HtmlDecode(post.LastEditReason)</span>
                                    }
                                    . Modificări în total: @post.EditCount.
                                </div>
                                <p></p>
                            }
                            <div class="PostActions">
                                @if ((!Model.IsLocked || IsMod) && !IsAnonymous && (p != Model.Posts.Last() || !Model.Paginator.IsLastPage))
                                {
                                    <a asp-page="/Posting" asp-page-handler="QuoteForumPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@post.PostId">
                                        @if (Model.IsLocked)
                                        {
                                            <span>&#x1F4AC; Subiect închis</span>
                                        }
                                        else
                                        {
                                            <span>&#x1F4AC; Răspunde cu citat</span>
                                        }
                                    </a>
                                }
                                else if (!IsAnonymous && (p != Model.Posts.Last() || !Model.Paginator.IsLastPage))
                                {
                                    <a href="javascript:;" title="Subiectul este închis, nu se mai pot trimite răspunsuri.">
                                        <s>&#x1F5E8; Subiect închis</s>
                                    </a>
                                }

                                @if (!post.ReportId.HasValue && !IsAnonymous)
                                {
                                    <span>
                                        <a href="javascript:vt.showReportForm(@post.PostId);">&#x2757; Raportează</a>
                                    </span>
                                }
                                @if (IsMod)
                                {
                                    <span>
                                        <a href="javascript:vt.showMessageDetails('@post.IP');">&#x2753; Informații</a>
                                    </span>
                                    <span>
                                        Selectează pentru moderare <input name="PostIdsForModerator" type="checkBox" value="@post.PostId" form="moderatorForm" onchange="vt.appendPostId(this, @(post.PostId ?? -1))" @(Model.PostIdsForModerator.Contains(post.PostId ?? -1) ? "checked" : "") />
                                    </span>
                                }
                                @if (IsMod || (post.AuthorId == CurrentUser.UserId && (EditTime == 0 || DateTime.UtcNow.Subtract(post.PostCreationTime ?? default).TotalMinutes <= EditTime)))
                                {
                                    <span>
                                        <a asp-page="/Posting" asp-page-handler="EditPost" asp-route-forumId="@Model.ForumId" asp-route-topicId="@Model.TopicId" asp-route-postId="@post.PostId">&#x1F4DD; Modifică</a>
                                    </span>
                                    if (IsMod || index == Model.Posts.Count - 1)
                                    {
                                        if (!IsMod)
                                        {
                                            useModActions = true;
                                            <input name="PostIdsForModerator" type="checkBox" value="@post.PostId" form="moderatorForm" onchange="vt.appendPostId(this, @(post.PostId ?? -1))" @(Model.PostIdsForModerator.Contains(post.PostId ?? -1) ? "checked" : "") style="display:none" />
                                        }
                                        int? closestPostIdIndex = null;
                                        if (Model.Posts.Count > 1)
                                        {
                                            if (index == 0) closestPostIdIndex = 1;
                                            else if (index == Model.Posts.Count - 1) closestPostIdIndex = Model.Posts.Count - 2;
                                            else closestPostIdIndex = index + 1;
                                        }
                                        var closestPostId = closestPostIdIndex.HasValue ? Model.Posts[closestPostIdIndex.Value].PostId : 0;
                                        <span>
                                            <a href="javascript:vt.deletePost(@(post.PostId ?? -1), @closestPostId)">&#x274C; Șterge mesaj</a>
                                        </span>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        index++;
        isFirst = false;
    }
    if (!previousIsUnread)
    {
        <hr />
    }

    if (useModActions)
    {
        <form id="moderatorForm" method="post" asp-page-handler="DeleteMyMessage" style="display:none">
            @Html.DropDownList("PostAction", _utils.EnumToDropDownList<ModeratorPostActions>(Model.PostAction, Model.MapModeratorPostActions), new { onchange = "vt.showPostExtraInput(this)", id = "PostAction", style = "display:none" })
            <input asp-for="ForumId" type="hidden" />
            <input asp-for="TopicId" type="hidden" />
            <input asp-for="PageNum" type="hidden" />
            <input asp-for="ClosestPostId" type="hidden" id="closestPostId" />
        </form>
        <span asp-validation-for="PostIdsForModerator" class="validation"></span>
    }
}
@if ((!Model.IsLocked || IsMod || IsAdmin) && !IsAnonymous)
{
    <button onclick="location.href='/Posting?forumId=@Model.ForumId&topicId=@Model.TopicId&pageNum=@Model.PageNum&handler=forumPost'" type="button">

        @if (Model.IsLocked)
        {
            <span>&#x1F512;Subiect închis</span>
        }
        else
        {
            <span>&#x1F4DD;Scrie un mesaj nou</span>
        }
    </button>
}
else if (!IsAnonymous)
{
    <button type="button" disabled>&#x1F512; Subiect închis</button>
}
<p></p>
@await Html.PartialAsync(
    "_PaginationControlsPartial",
    new CustomPartials._PaginationControlsPartialModel(
        paginator: Model.Paginator,
        allowPaginationChange: true,
        back: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum - 1}",
        forward: $"ViewTopic?TopicId={Model.TopicId}&PageNum={Model.PageNum + 1}",
        includeEasyNavigation: true,
        topicId: Model.TopicId,
        firstPostId: Model.Posts?.FirstOrDefault()?.PostId
    ),
    ViewData
)
@if (Model.Paginator.Pagination.HasPages)
{
    <hr />
}

@*shortcuts*@
<div style="clear:both">
    <a href="/" class="nowrap">Prima pagină</a>
    <span class="bullet">&nbsp;&bull;&nbsp;</span>
    <div class="newline"></div>
    @if (Model.ForumId != null)
    {
        <span>Forum părinte: <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(@Model.ForumTitle)</a></span>
        <span class="bullet">&nbsp;&bull;&nbsp;</span>
        <div class="newline"></div>
    }
    <span onclick="showForumTree(this)" class="SpanLikeLink nowrap">Alege destinația</span>
</div>

<div id="forumTree" style="display:none">
    <p>&nbsp;</p>
    @await Html.PartialAsync(
        "_ForumTreePartial",
        new CustomPartials._ForumTreePartialModel(
            tree: (await Model.GetForumTree()).Tree,
            forumId: Model.ForumId,
            topicId: Model.TopicId,
            constrainSize: true
        ),
        ViewData
    )
    <p></p>
    <form action="/ViewForum">
        <input type="hidden" name="ForumId" id="ForumIdInput" />
        <input type="submit" value="Du-te" />
    </form>
</div>

@*moderator menu*@
@if (IsMod)
{
    <hr />
    <form method="post" asp-page-handler="TopicModerator">
        <span>Moderează subiectul: </span>
        @Html.DropDownList("TopicAction", _utils.EnumToDropDownList<ModeratorTopicActions>(Model.TopicAction, Model.MapModeratorTopicActions), new { onchange = "vt.showTopicExtraInput(this)", id = "TopicAction" })
        <div id="extraInputTopic" style="display:@(Model.ShowTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" onclick="return vt.confirmAction('#TopicAction');" />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        @Html.AntiForgeryToken()
    </form>
    <form id="moderatorForm" method="post" asp-page-handler="PostModerator">
        <br />
        <span>Moderează mesajele selectate: </span>
        @Html.DropDownList("PostAction", _utils.EnumToDropDownList<ModeratorPostActions>(Model.PostAction, Model.MapModeratorPostActions), new { onchange = "vt.showPostExtraInput(this)", id = "PostAction" })
        <div id="extraInputPostForum" style="display:@(Model.ShowPostForum ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationForumId" placeholder="ID forum destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul forumului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationForumId" class="validation"></span>
        </div>
        <div id="extraInputPostTopic" style="display:@(Model.ShowPostTopic ? "block" : "none")">
            <br />
            <input type="text" asp-for="DestinationTopicId" placeholder="ID subiect destinație" /><br />
            <a href="javascript:$('#modConfirmation').submit();">
                Alege id-ul subiectului de destinație
            </a>
            <span asp-validation-for="PostIdsForModerator" class="validation"></span>
            <span asp-validation-for="DestinationTopicId" class="validation"></span>
        </div>
        <input type="submit" value="Trimite" onclick="return vt.confirmAction('#PostAction');" />
        <br />
        <input asp-for="ForumId" type="hidden" />
        <input asp-for="TopicId" type="hidden" />
        <input asp-for="PageNum" type="hidden" />
        <input asp-for="ClosestPostId" type="hidden" id="closestPostId" />
        @Html.AntiForgeryToken()
    </form>
    <form id="modConfirmation" asp-page="Confirm" method="get">
        <input type="hidden" asp-for="ForumId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" name="showTopicSelector" id="showTopicSelector" value="false" />
        <input type="hidden" name="selectedPostIds" id="selectedPostIds" value="" />
        <input type="hidden" name="postAction" id="postAction" value="" />
        <input type="hidden" name="topicAction" id="topicAction" value="" />
        <input type="hidden" name="handler" value="ModeratorConfirmation" />
        @Html.AntiForgeryToken()
    </form>
    @if (!string.IsNullOrWhiteSpace(Model.ModeratorActionResult))
    {
        <br />
        @Html.Raw(Model.ModeratorActionResult)
    }

    <div class="MiddleBox" id="postInfo" style="display:none">
        <h4 style="float:left">Informații mesaj</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('postInfo')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div id="postInfoContent"></div>
    </div>
}

@*message reporting*@
@if (!IsAnonymous)
{
    <form asp-page-handler="ReportMessage" method="post" class="MiddleBox" id="report" style="display:none">
        <h4 style="float:left">Raportează mesaj</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('report')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Motiv
                </div>
                <div class="FlexRight PostInputWidth">
                    @{
                        var reasons = new List<SelectListItem> { new SelectListItem("Alege un motiv", "-1", true, true) };
                        reasons.AddRange(_context.PhpbbReportsReasons.AsNoTracking().OrderBy(x => x.ReasonOrder).Select(x => new SelectListItem(x.ReasonDescription, x.ReasonId.ToString())));
                    }
                    @Html.DropDownList("reportReasonId", reasons, new { id = "reportReason", style = "width: 100%" })
                </div>
            </div>
            <p></p>
            <div class="FlexCenter">
                <div style="font-weight:bold; text-align: right">
                    Detalii suplimentare
                </div>
                <div class="FlexRight PostInputWidth">
                    <textarea name="ReportDetails" rows="4" cols="100" id="reportDetails" style="width:100%"></textarea>
                </div>
            </div>
        </div>
        <p></p>
        <input type="hidden" name="reportPostId" id="reportPostId" />
        <input type="hidden" asp-for="TopicId" />
        <input type="hidden" asp-for="PageNum" />
        <input type="hidden" asp-for="PostId" />
        <input type="hidden" name="ReportId" id="reportId" />
        <input type="submit" onclick="return vt.validateReportForm();" value="Trimite" />&nbsp;<span class="validation" id="reportValidation" style="display:none"></span>
        @Html.AntiForgeryToken()
    </form>

    <div id="reportViewer" class="MiddleBox" style="display:none">
        <h4 style="float:left">Raport</h4>
        <div style="float:right; cursor:pointer; font-weight:bold" onclick="showElement('reportViewer')">Închide [X]</div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Motiv
            </div>
            <div class="FlexRight PostInputWidth">
                <span id="reportViewerReportReasonTitle"></span> &nbsp;(<span id="reportViewerReportReasonDescription"></span>)
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Raportor
            </div>
            <div class="FlexRight PostInputWidth" id="reportViewerReporter">
            </div>
        </div>
        <p></p>
        <div class="FlexCenter">
            <div style="font-weight:bold; text-align: right">
                Detalii suplimentare
            </div>
            <div class="FlexRight PostInputWidth" id="reportViewerReportDetails">
            </div>
        </div>
        @if (IsMod)
        {
            <form asp-page-handler="ManageReport" method="post">
                <input type="hidden" name="reportPostId" id="reportViewerReportPostId" />
                <input type="hidden" asp-for="TopicId" id="reportViewerPostId" />
                <input type="hidden" asp-for="PageNum" />
                <input type="hidden" asp-for="PostId" />
                <input type="hidden" name="reportId" id="reportViewerReportId" />
                <br />
                @Html.CheckBox("redirectToEdit", new { id = "reportViewerEditMessage" }) &nbsp; Modifică mesajul<br />
                @Html.CheckBox("deletePost", new { id = "reportViewerDeleteMessage" }) &nbsp; Șterge mesajul<br /><br />
                <input type="submit" value="Închide raport" onclick="vt.confirmDeleteReportedPost()" />
                @Html.AntiForgeryToken()
            </form>
        }
    </div>
}
