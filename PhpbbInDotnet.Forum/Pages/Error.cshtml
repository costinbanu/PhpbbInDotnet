@page
@model ErrorModel

@using Utilities

@inject Languages.LanguageProvider _languageProvider
@inject Services.UserService _userService

@{
    ViewData["Title"] = "Error";
    var lang = _languageProvider.GetValidatedLanguage(await _userService.ClaimsPrincipalToLoggedUserAsync(User), Model.Request);
}

<h3 class="text-danger">@Html.Raw(_languageProvider.Errors[lang, "AN_ERROR_OCCURRED", Casing.Title])</h3>

@if (Model.IsUnauthorized)
{
    <p>@Html.Raw(_languageProvider.Errors[lang, "ERROR_UNAUTHORIZED"])</p>
}
else if (Model.IsNotFound)
{
    <p>@Html.Raw(_languageProvider.Errors[lang, "ERROR_NOT_FOUND"])</p>
}
else
{
    if (!string.IsNullOrWhiteSpace(Model.ErrorId))
    {
        <p>
            <strong>ID:</strong>
            <code>@Model.ErrorId</code>
        </p>
    }
    <p>@Html.Raw(string.IsNullOrWhiteSpace(Model.ErrorId) ? _languageProvider.Errors[lang, "REPORT_ERROR"] : _languageProvider.Errors[lang, "REPORT_ERROR_WITH_ID"])</p>
}