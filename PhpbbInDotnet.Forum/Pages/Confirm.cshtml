@page
@model PhpbbInDotnet.Forum.Pages.ConfirmModel

@using Domain
@using Domain.Utilities
@using Domain.Extensions

@inject Services.IForumTreeService _forumService
@inject Database.IForumDbContext _dbContext

@{
    ViewData["Title"] = "Confirm";
    Layout = "~/Pages/_Layout.cshtml";
    var lang = Model.GetLanguage();
}

<h2>@Model.Title</h2>

@if (Model.IsModeratorConfirmation || Model.IsDestinationPicker)
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/he/1.2.0/he.min.js" integrity="sha512-PEsccDx9jqX6Dh4wZDCnWMaIO3gAaU0j46W//sSqQhUQxky6/eHZyeB3NrXD2xsyugAKd4KPiDANkcuoEa2JuA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript">
        //forum tree callback
        function forumSelectCallback(forumId) {
            let forumInput = $('#DestinationForumId');
            forumInput && forumInput.val(forumId);
        }
    </script>
    @if (Model.ShowTopicSelector)
    {
        <script type="text/javascript">
            //forum tree callback
            function topicSelectCallback(topics) {
                let topicDisplay = $('#DestinationTopicId');
                const canReplyInTopic = (topic) => @Json.Serialize(await Model.IsCurrentUserModeratorHere(Model.ForumId ?? 0)) || !topic.isLocked;
                if (topicDisplay) {
                    topicDisplay.empty();
                    let option = new Option(@Json.Serialize(Model.TranslationProvider.BasicText[lang, "CHOOSE_DESTINATION_TOPIC"]), 0);
                    option.disabled = true;
                    topicDisplay.append(option);
                    topics.filter(canReplyInTopic).forEach(t => {
                        let option = new Option(he.decode(t.topicTitle), t.topicId);
                        topicDisplay.append(option);
                    });
                }
            }

            //forum tree callback
            function topicSelectInit(topicId) {
                if (topicId != null) {
                    $('#DestinationTopicId').val(topicId).change();
                }
            }
        </script>
    }

    <h3>@Html.Raw(Model.TranslationProvider.BasicText[lang, "CHOOSE_DESTINATION_FORUM"])</h3>
    <div>
        @await Html.PartialAsync(
            "_ForumTreePartial",
            new CustomPartials._ForumTreePartialModel(
                tree: Model.ForumTree!,
                topicData: Model.TopicData,
                forumId: Model.TopicAction == ModeratorTopicActions.CreateShortcut ? null : Model.ForumId,
                topicId: Model.TopicId
            ),
            ViewData
        )
    </div>
    <form action="@Model.Destination" method="get">
        <input type="hidden" name="DestinationForumId" id="DestinationForumId" />
        @if (Model.ShowTopicSelector)
        {
            <h3>@Html.Raw(Model.TranslationProvider.BasicText[lang, "CHOOSE_DESTINATION_TOPIC"])</h3>
            <select name="DestinationTopicId" id="DestinationTopicId" />
        }
        @if (Model.IsModeratorConfirmation)
        {
            <input type="hidden" asp-for="ForumId" />
            <input type="hidden" asp-for="TopicId" />
            <input type="hidden" asp-for="PageNum" />
            <input type="hidden" asp-for="TopicAction" />
            <input type="hidden" asp-for="PostAction" />
            <input type="hidden" asp-for="SelectedPostIds" />
            <input type="hidden" asp-for="SelectedTopicIds" />
        }
        else if (Model.IsDestinationPicker)
        {
            <input type="hidden" asp-for="PostId" />
            <input type="hidden" asp-for="QuotePostInDifferentTopic" />
            <input type="hidden" name="handler" value="@Model.DestinationHandler" />
        }
        <p></p>
        <input type="submit" value="@Html.Raw(Model.TranslationProvider.BasicText[lang, "SUBMIT", Casing.FirstUpper])" />
    </form>
}
else if (Model.IsDestinationConfirmation)
{
    <span style="font-size:1.2em">@Html.Raw(Model.Message)</span>
    <p>&nbsp;</p>
    foreach (var destination in Model.Destinations.EmptyIfNull())
    {
        @Html.Raw(await CompressionUtility.DecodeAndDecompress(destination));
        <p></p>
    }
}
else
{
    <span style="font-size:1.1em">@Html.Raw(Model.Message)</span>
    <p>&nbsp;</p>
    <a asp-page="./Login">@Html.Raw(Model.TranslationProvider.BasicText[lang, "LOGIN", Domain.Casing.FirstUpper])</a>
    <br />
    <a asp-page="./">@Html.Raw(Model.TranslationProvider.BasicText[lang, "HOME", Domain.Casing.FirstUpper])</a>
}
