@page

@using System.Web
@using PhpbbInDotnet.Utilities
@using PhpbbInDotnet.Database.Entities
@using Microsoft.Extensions.Configuration

@model PhpbbInDotnet.Forum.Pages.PostingModel

@inject Services.CacheService _cacheService
@inject Services.WritingToolsService _writingService
@inject Services.BBCodeRenderingService _renderingService
@inject Services.PostService _postService
@inject CommonUtils _utils
@inject IConfiguration _config

@{
    ViewData["Title"] = "Posting";
    Layout = "~/Pages/_Layout.cshtml";

    var CurrentUser = await Model.GetCurrentUserAsync();
    var UserDateFormat = CurrentUser.UserDateFormat ?? "dddd, dd.MM.yyyy, HH:mm";
    var IsPM = Model.Action == PostingActions.NewPrivateMessage || Model.Action == PostingActions.EditPrivateMessage;
    if (!DateTime.TryParse(DateTime.Now.ToString(UserDateFormat), out var _))
    {
        UserDateFormat = "dddd, dd.MM.yyyy, HH:mm";
    }
    var CanCreatePoll = Model.Action == PostingActions.NewTopic || (Model.Action == PostingActions.EditForumPost && (Model.CurrentTopic?.TopicFirstPostId ?? 0) == Model.PostId);
}

<environment include="Development">
    <script src="~/js/posting.js"></script>
    <link rel="stylesheet" href="~/css/posting.css" />
</environment>
<script src="~/lib/tribute/dist/tribute.js"></script>
<link rel="stylesheet" href="~/lib/tribute/dist/tribute.css" />

<script type="text/javascript">
    var posting = new Posting(
        @Json.Serialize(_renderingService.TagMap),
        @((await Model.IsCurrentUserAdminHere()).ToString().ToLower()),
        @((Model.Action == PostingActions.EditForumPost).ToString().ToLower()),
        "@UserDateFormat"
    );

    window.onload = function () {
        if ($('#attachPanel').is(':visible')) {
            $('#attachButton').text(posting.hideAttachText);
        }
        else {
            $('#attachButton').text(posting.showAttachText);
        }
        if ($('#pollPanel').is(':visible')) {
            $('#pollButton').text(posting.hidePollText);
        }
        else {
            $('#pollButton').text(posting.showPollText);
        }
        $('#message').focus();
    }

    function toggleFormattingHelp() {
        showElement(
            'formattingHelp',
            function () {
                $('#formattingHelpHeader').toggle();
            },
            function () {
                var header = $('#formattingHelpHeader');
                header.toggle({
                    duration: 'fast',
                    start: function () {
                        var boxPosition = $('#formattingHelp').offset();
                        header.offset({ top: boxPosition.top - 40, left: boxPosition.left });
                    }
                });
                $('#formattingHelp img, iframe').each(function () {
                    var parent = $('#formattingHelp');
                    $(this).css({
                        'max-width': parent.width() * 0.9 + 'px',
                        'max-height': parent.height() * 0.9 + 'px'
                    });
                });
            },
            true
        );
    }
</script>


@if (Model.Action == PostingActions.EditForumPost || (Model.Action == PostingActions.NewForumPost && Model.PostId.HasValue))
{
    <span>
        Forum părinte:
        <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(Model.CurrentForum?.ForumName ?? string.Empty)</a>
    </span>
    <h3>
        Răspunde:
        <a asp-page="/ViewTopic" asp-route-postId="@Model.PostId.Value" asp-page-handler="ByPostId">@HttpUtility.HtmlDecode(Model.CurrentTopic.TopicTitle)</a>
    </h3>
}
else if (Model.Action == PostingActions.NewForumPost)
{
    <span>
        Forum părinte:
        <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(Model.CurrentForum?.ForumName ?? string.Empty)</a>
    </span>
    <h3>
        Răspunde:
        <a asp-page="/ViewTopic" asp-route-topicId="@Model.TopicId.Value" asp-route-pageNum="1">@HttpUtility.HtmlDecode(Model.CurrentTopic.TopicTitle)</a>
    </h3>
}
else if (Model.Action == PostingActions.NewTopic)
{
    <h3>
        Scrie un subiect nou:
        <a asp-page="/ViewForum" asp-route-forumId="@Model.ForumId">@HttpUtility.HtmlDecode(Model.CurrentForum?.ForumName ?? string.Empty)</a>
    </h3>
}
else if (IsPM)
{
    <h3>Scrie un mesaj privat nou:</h3>
}

@await Html.PartialAsync("_RulesPartial", new CustomPartials._RulesPartialModel(_renderingService, _utils, Model.CurrentForum?.ForumRules, Model.CurrentForum?.ForumRulesUid, Model.CurrentForum?.ForumRulesLink), ViewData)

@if (Model.PreviewablePost != null)
{
    <hr />
    @if (Model.PreviewablePoll != null)
    {
        <div id="votes" style="display:block; clear: both;">
            <h3>Chestionar: @Html.Raw(HttpUtility.HtmlDecode(Model.PreviewablePoll.PollTitle))</h3>
            <div>Chestionarul @(Model.PreviewablePoll.PollEnded ? "a fost" : "va fi") inchis: @(Model.PreviewablePoll.PollEnd.HasValue ? Model.PreviewablePoll.PollEnd.Value.ToString(UserDateFormat) : "niciodată").</div>

            @if (Model.PreviewablePoll.PollMaxOptions > 1)
            {
                foreach (var option in Model.PreviewablePoll.PollOptions)
                {
                    <table style="border:none; padding:unset; margin:unset; width:100%">
                        <tr style="border-bottom:solid 1px black">
                            <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            </td>
                            <td>
                                <input type="checkbox" name="Votes" value="@option.PollOptionId" />
                            </td>
                        </tr>
                    </table>
                }
            }
            else
            {
                foreach (var option in Model.PreviewablePoll.PollOptions)
                {
                    <table style="border:none; padding:unset; margin:unset; width:100%">
                        <tr style="border-bottom:solid 1px black">
                            <td style="width:50%; padding-right:10px; padding-top: 5px; padding-bottom: 5px">
                                @Html.Raw(HttpUtility.HtmlDecode(option.PollOptionText))
                            </td>
                            <td>
                                <input type="radio" name="Votes" value="@option.PollOptionId" />
                            </td>
                        </tr>
                    </table>
                }
            }
            <br />
            <input type="button" value="Trimite vot" class="MyButton" />
        </div>
    }
    <div class="RowMargin">
        <div class="FlexRow">
            @await Html.PartialAsync("_SummaryPartial", new CustomPartials._SummaryPartialModel
            {
                AuthorId = Model.PreviewablePost.AuthorId,
                AuthorName = Model.PreviewablePost.AuthorName,
                AuthorColor = Model.PreviewablePost.AuthorColor,
                CreationTime = Model.PreviewablePost.PostCreationTime,
                AssetId = Model.PreviewablePost.PostId.Value,
                DateFormat = UserDateFormat,
                ShowAvatar = Model.PreviewablePost.AuthorHasAvatar,
                AuthorRank = Model.PreviewablePost.AuthorRank,
                Left = true
            })
            <div class="ForumContent VerticalContent FlexRight" id="@Model.PreviewablePost.PostId">
                <span style="display:flex">
                    <span class="PostTitle">
                        <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@Model.PreviewablePost.PostId">@Html.Raw(Model.PreviewablePost.PostSubject)</a>
                    </span>
                    <span style="margin-left:auto">
                        <span class="CollapsedMenu ThemeColor" onclick="expandCollapsedMenu('summary@(Model.PreviewablePost.PostId.Value)', 'button@(Model.PreviewablePost.PostId.Value)', false)" id="button@(Model.PreviewablePost.PostId.Value)" style="color:#@Model.PreviewablePost.AuthorColor;margin-left: auto; height:auto">
                            @Html.Raw(Model.PreviewablePost.AuthorName)
                        </span>
                    </span>
                </span>
                <div style="max-width:100%; overflow-wrap: break-word">
                    <br />
                    @Html.Raw(Model.PreviewablePost.PostText)
                    @foreach (var attachment in Model.PreviewablePost.Attachments)
                    {
                        <br />
                        @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                    }
                    <br />
                </div>
                <div class="PostFooter">
                    @if (Model.PreviewablePost.LastEditTime > 0)
                    {
                        <br />
                        <div class="Caption ThemeColor">
                            Ultima dată modificat de @Model.PreviewablePost.LastEditUser
                            <script>
                                    writeDate("@Model.PreviewablePost.LastEditTime.ToUtcTime().ToString("o")", "@UserDateFormat");
                            </script>
                            @if (!string.IsNullOrWhiteSpace(Model.PreviewablePost.LastEditReason))
                            {
                                <span>. Motiv: @HttpUtility.HtmlDecode(Model.PreviewablePost.LastEditReason)</span>
                            }
                            . Modificări în total: @Model.PreviewablePost.EditCount.
                        </div>
                    }
                    <br />
                </div>
            </div>
        </div>
    </div>
    <hr />
}


<form name="postform" method="post" enctype="multipart/form-data">
    @if (Model.Action == PostingActions.NewPrivateMessage)
    {
        <input type="text" asp-for="ReceiverName" placeholder="Alege destinatar..." id="pmToInput" style="width:100%" autocomplete="off" />
        <p id="tributeHolder" style="position:relative"></p>
        <span asp-validation-for="ReceiverName" class="validation"></span>
    }
    else if (Model.Action == PostingActions.EditPrivateMessage)
    {
        <input type="text" asp-for="ReceiverName" style="width:100%" disabled />
        <p></p>
        <span asp-validation-for="ReceiverName" class="validation"></span>
    }
    <input asp-for="PostTitle" type="text" id="subject" size="45" maxlength="256" tabindex="2" class="InputBox" placeholder="Subiect" style="width:100%" />
    <br />

    <div class="PostingControls" id="controls" style="width:100%">
        @foreach (var code in _renderingService.TagMap)
        {
            if (code.Key == "size")
            {
                <select name="addbbcode20" class="BbCodeButton PostingButton" style="border-radius: 2px; border: 1px solid #dcdcdc;" onchange="posting.bbfontstyle('[size=' + this.form.addbbcode20.options[this.form.addbbcode20.selectedIndex].value + ']', '[/size]');this.form.addbbcode20.selectedIndex = 2;" title="@code.Value.ToolTip">
                    <option value="" disabled selected>@Html.Raw(code.Value.ButtonText)</option>
                    <option value="50">Micuţ (50%)</option>
                    <option value="85">Mic (85%)</option>
                    <option value="100">Normal (100%)</option>
                    <option value="150">Mare (150%)</option>
                    <option value="200">Imens (200%)</option>
                </select>
            }
            else if (code.Key == "color")
            {
                <button type="button" class="BbCodeButton Hide960 PostingButton MyButton" onclick="posting.change_palette();" title="@code.Value.ToolTip" id="colour_palette_button">
                    @Html.Raw(code.Value.ButtonText)
                </button>
            }
            else
            {
                <button type="button" class="BbCodeButton PostingButton @(code.Value.ShowWhenCollapsed ? "" : "Hide960") MyButton" onclick="posting.bbstyle('@code.Key')" title="@code.Value.ToolTip">
                    @Html.Raw(code.Value.ButtonText)
                </button>
            }
        }

        <button type="button" class="BbCodeButton PostingButton MyButton" onclick="toggleFormattingHelp()" title="Arată un ajutor pentru formatare">&#x2754;</button>
        <div class="ColorPalette" id="colour_palette">
            <table>
                @{
                    var color = new[] { 0x0, 0x40, 0x80, 0xbf, 0xff };
                    for (var r = 0; r < 5; r++)
                    {
                        <tr>
                            @for (var g = 0; g < 5; g++)
                            {
                                for (var b = 0; b < 5; b++)
                                {
                                    var value = $"#{color[r]:X2}{color[g]:X2}{color[b]:X2}";
                                    <td style="width: 15px; height: 10px; background-color: @value; border:solid 1px white">
                                        <a href="javascript:posting.bbfontstyle('[color=@value]', '[/color]');">
                                            <img src="./images/spacer.gif" alt="@value" title="@value" style="width: 15px; height: 10px">
                                        </a>
                                    </td>
                                }
                            }
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
    <a href="javascript:posting.show_hidden_formatters();" class="PostingControlsButton" style="margin-top:5px">Opțiuni formatare</a>
    <div style="margin-top:5px">
        <textarea asp-for="PostText" id="message" tabindex="3" onselect="posting.storeCaret(this);" onclick="posting.storeCaret(this);" onkeyup="posting.storeCaret(this);" onfocus="posting.initInsertions();" class="InputBox" style="width:100%; min-height:17em"></textarea>
    </div>
    @if (Model.Action == PostingActions.EditForumPost)
    {
        <div style="clear:both">&nbsp;</div>
        <input asp-for="EditReason" type="text" style="width:100%" placeholder="Motivul modificării" />
    }
    @if (!IsPM)
    {
        <button onclick="posting.toggleAttach()" type="button" class="PostingButton MyButton SpacedButton">&#128206; Fișiere atașate</button>
    }
    <button onclick="posting.toggleEmoji()" type="button" class="Hide960 PostingButton MyButton SpacedButton">&#x1F642; Emoji</button>
    @if (CanCreatePoll)
    {
        <button onclick="posting.togglePoll()" type="button" class="PostingButton MyButton SpacedButton">&#x2714; Chestionar</button>
    }
    <input type="submit" value="&#x1F440; Previzualizează" onclick="return posting.censor()" asp-page-handler="Preview" class="PostingButton MyButton SpacedButton" />

    @switch (Model.Action)
    {
        case PostingActions.NewTopic:
        case PostingActions.NewForumPost:
            <input type="submit" value="&#x1F4BE; Salvează mesajul în lucru" onclick="return posting.censor()" asp-page-handler="SaveDraft" class="PostingButton MyButton SpacedButton" />
            <input type="submit" value="&#x27A1; Trimite mesajul" onclick="return posting.censor()" asp-page-handler="NewForumPost" class="PostingButton MyButton SpacedButton MyMainButton" />
            break;
        case PostingActions.EditForumPost:
            <input type="submit" value="&#x27A1; Trimite mesajul" onclick="return posting.censor()" asp-page-handler="EditForumPost" class="PostingButton MyButton SpacedButton MyMainButton" />
            break;
        case PostingActions.NewPrivateMessage:
        case PostingActions.EditPrivateMessage:
            <input type="submit" value="&#x27A1; Trimite mesajul" onclick="return posting.censor()" asp-page-handler="PrivateMessage" class="PostingButton MyButton SpacedButton MyMainButton" />
            break;
        default:
            <span class="validation">A intervenit o eroare, pagina nu a fost afișată corect.</span>
            break;
    }
    <b>
        <span asp-validation-for="PostTitle" class="validation"></span>
        <span asp-validation-for="PostText" class="validation"></span>
        <span asp-validation-for="LastPostTime" class="validation"></span>
        @if (Model.DraftSavedSuccessfully)
        {
            <span class="success">Mesajul în lucru a fost salvat cu succes și vei putea lucra în continuare la el mai târziu.</span>
        }
    </b>
    @if (CanCreatePoll)
    {
        <div id="pollPanel" style="display:@(Model.ShowPoll ? "block" : "none")" class="PostInputWidth">
            <br />
            <h3 style="float:left">Chestionar</h3>
            @if (Model.Action == PostingActions.EditForumPost)
            {
                <span style="margin-bottom:10px">
                    &nbsp;&bull;&nbsp;
                    <input type="submit" value="Șterge chestionarul" asp-page-handler="DeletePoll" onclick="return confirm('Sigur dorești ștergerea chestionarului?')" class="MyButton" />
                </span>
            }
            <p style="clear:both"></p>
            <hr class="BoxSeparator" />
            <div class="FlexCenter">
                <div>Întrebarea chestionarului</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollQuestion" class="InputBox" style="width:100%" /> <br />
                    <span asp-validation-for="PollQuestion" class="validation"></span>
                </div>
            </div>
            <hr class="BoxSeparator" />
            <div class="FlexCenter">
                <div>Opțiuni (una pe rând)</div>
                <div class="FlexRight PollInput">
                    <textarea asp-for="PollOptions" rows="4" class="InputBox" style="width:100%" onkeydown="return posting.confirmPollChange(this)"></textarea>
                    <span asp-validation-for="PollOptions" class="validation"></span>
                </div>
            </div>
            <hr class="BoxSeparator" />
            <div class="FlexCenter">
                <div>Timp pentru votare (zile)</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollExpirationDaysString" onchange="posting.showExpirationDate(this.value)" id="pollExpiration" class="InputBox" style="width:100%" /><br />
                    <div class="Caption">
                        <span>Introdu '0' pentru timp nelimitat.</span>
                        <span>Sunt permise și fracții precum 0.5, 1.75 etc</span>
                    </div>
                    <span id="pollExpirationHelper"></span>
                    <span asp-validation-for="PollExpirationDaysString" class="validation"></span>
                </div>
            </div>
            <hr class="BoxSeparator" />
            <div class="FlexCenter">
                <div>Opțiuni per votant</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollMaxOptions" class="InputBox" style="width:100%" />
                    <span asp-validation-for="PollMaxOptions" class="validation"></span>
                </div>
            </div>
            <hr class="BoxSeparator" />
            <div class="FlexCenter">
                <div>Votanții își pot schimba votul</div>
                <div class="FlexRight PollInput">
                    <input asp-for="PollCanChangeVote" class="InputBox" />
                    <span>&nbsp;Da, votanții se pot răzgândi.</span>
                    <span asp-validation-for="PollCanChangeVote" class="validation"></span>
                </div>
            </div>
        </div>
    }
    @if (!IsPM)
    {
        <div id="attachPanel" style="display:@(Model.ShowAttach ? "block" : "none")">
            <br />
            <h3>Fișiere atașate</h3>
            <p style="clear:both;width:100%; padding:10px 20px 10px 20px; margin:0px">
                Includerea imaginilor mai mari de 2MB nu este permisă, indiferent dacă sunt găzduite local sau extern. De asemenea, numerele de înmatriculare ale vehiculelor particulare surprinse in imagini trebuie ascunse.
                Utilizați <a href="https://procesorimagini.metrouusor.com/" target="_blank">procesorul de imagini „Metrou Ușor”</a> pentru a redimensiona imagini și a ascunde numere de înmatriculare.
            </p>
            <input asp-for="Files" onchange="posting.submitAttachments()" multiple class="HiddenFileInput" />
            <label for="Files" class="MyButton">Alege unul sau mai multe fișiere</label><br />
            @if (!await Model.IsCurrentUserAdminHere())
            {
                <span class="Caption">Minim 1, maxim 10 fișiere. Dimensiune limită: @(_config.GetValue<int>("UploadLimitsMB:Images"))MB pentru imagini, @(_config.GetValue<int>("UploadLimitsMB:OtherFiles"))MB în rest.</span>
            }
            <span asp-validation-for="Files" class="validation"></span>
            <div id="fileUploadStatus"></div>
            <input type="submit" value="Încarcă fișierele alese" asp-page-handler="AddAttachment" style="display:none" id="submitAttachmentsButton" />
            @if (Model.Attachments?.Any() ?? false)
            {
                <hr class="SubtypeSeparator" />
                <h4>Fișiere deja atașate:</h4>
                @for (var i = 0; i < Model.Attachments.Count; i++)
                {
                    <div style="margin-bottom:20px; padding-bottom:20px">
                        <b>Nume:</b> @Model.Attachments[i].RealFilename <br />
                        <b>Comentariu fișier:</b>
                        <br />
                        <textarea type="text" asp-for="Attachments[i].AttachComment" rows="4" cols="100" style="display:inline-block; color:black" class="InputBox"></textarea>
                        <p style="clear:both"></p>
                        <input type="button" value="Așează în linie" onclick="posting.attach_inline(@i, '@Model.Attachments[i].RealFilename')" class="MyButton" /> &nbsp;
                        <input type="submit" value="Șterge fișier" asp-page-handler="DeleteAttachment" onclick="$('#idToDelete').val(@i); return true;" class="MyButton" />
                        <br />
                        <span asp-validation-for="DeleteFileDummyForValidation[i]" class="validation"></span>
                    </div>
                    <input type="hidden" asp-for="Attachments[i].AttachId" />
                    <input type="hidden" asp-for="Attachments[i].RealFilename" />
                    <input type="hidden" asp-for="Attachments[i].PhysicalFilename" />
                    <input type="hidden" asp-for="Attachments[i].Mimetype" />
                    <input type="hidden" asp-for="Attachments[i].Filesize" />
                }
                <input type="hidden" name="index" id="idToDelete" value="" />
            }
        </div>
    }
    <div id="emojiPanel" style="display:none; clear:both;">
        @foreach (var smiley in ((await _cacheService.GetFromCache<List<PhpbbSmilies>>(await Model.GetActualCacheKey("Smilies", false))) ?? new List<PhpbbSmilies>()))
        {
            <a href="javascript:posting.insert_text('@smiley.Code', true);">
                <img src="@($"{Constants.SMILEY_PATH}/{smiley.SmileyUrl}")" alt="@smiley.Code" title="@smiley.Emotion" width="@smiley.SmileyWidth" height="@smiley.SmileyHeight" style="margin:2px" />
            </a>
        }
    </div>

    <input asp-for="ForumId" type="hidden" />
    <input asp-for="TopicId" type="hidden" />
    <input asp-for="PostId" type="hidden" />
    <input asp-for="ReceiverId" type="hidden" id="pmTo" />
    <input asp-for="PageNum" type="hidden" />
    <input asp-for="Action" type="hidden" />
    <input asp-for="CurrentTopic.TopicFirstPostId" type="hidden" />
    <input asp-for="CurrentTopic.TopicTitle" type="hidden" />
    <input asp-for="LastPostTime" type="hidden" id="lastPostTime" />
    <input asp-for="PrivateMessageId" type="hidden" />
    <input asp-for="ReceiverId" type="hidden" />
    <input asp-for="ReceiverName" type="hidden" />
    <input asp-for="PostTime" type="hidden" />

</form>

@{
    var (posts, attachments, users) = await Model.GetPreviousPosts();
    if (posts.Any())
    {
        <script>
            var texts = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(posts.ToDictionary(k => k.PostId, v => _writingService.CleanBbTextForDisplay(v.PostText, v.BbcodeUid))));
            $('#lastPostTime').val(@Math.Max(posts.First().PostTime, posts.First().PostEditTime));
        </script>
        <br />
        <h3>Mesaje precedente</h3>

        var isFirst = true;
        foreach (var p in posts)
        {
            var ju = users.FirstOrDefault(u => u.UserId == p.PosterId);
            var ja = attachments.Where(a => a.PostMsgId == p.PostId);
            var post = new Objects.PostDto
            {
                PostSubject = p.PostSubject,
                PostText = p.PostText,
                AuthorName = ((ju?.UserId ?? Constants.ANONYMOUS_USER_ID) == Constants.ANONYMOUS_USER_ID ? p.PostUsername : ju.Username),
                AuthorId = ju?.UserId ?? Constants.ANONYMOUS_USER_ID,
                AuthorColor = ju?.UserColour,
                Attachments = ja.Select(a => new Objects.AttachmentDto(a)).ToList(),
                PostCreationTime = p.PostTime.ToUtcTime(),
                PostModifiedTime = p.PostEditTime.ToUtcTime(),
                PostId = p.PostId,
                BbcodeUid = p.BbcodeUid,
                AuthorHasAvatar = false,
                LastEditTime = p.PostEditTime,
                LastEditReason = p.PostEditReason,
                EditCount = p.PostEditCount,
                IP = p.PosterIp
            };

            if (CurrentUser.Foes?.Contains(p.PosterId) ?? false)
            {
                post.AuthorHasAvatar = false;
                post.Attachments?.Clear();
                post.BbcodeUid = string.Empty;
                post.PostSubject = "Re:";
                post.PostText = "[i]Autorul acestui mesaj este pe lista ta de persoane neagreate, drept urmare nu poți vedea conținutul mesajelor sale[/i]";
            }

            post.AuthorHasAvatar = false;
            await _renderingService.ProcessPost(post, Model.PageContext, Model.HttpContext, true);

            if (!isFirst)
            {
                <hr class="BoxSeparator" />
            }

            <div class="RowMargin FlexRow">
                @await Html.PartialAsync("_SummaryPartial", new CustomPartials._SummaryPartialModel
                {
                    AuthorId = post.AuthorId,
                    AuthorName = post.AuthorName,
                    AuthorColor = post.AuthorColor,
                    CreationTime = post.PostCreationTime,
                    AssetId = post.PostId.Value,
                    DateFormat = UserDateFormat,
                    ShowAvatar = post.AuthorHasAvatar,
                    AuthorRank = post.AuthorRank,
                    Left = true,
                    ShowAsLast = false
                })

                <div class="ForumContent">
                    <span style="display:flex">
                        <span class="PostTitle">
                            <a asp-page="/ViewTopic" asp-page-handler="ByPostId" asp-route-postId="@post.PostId">@Html.Raw(post.PostSubject)</a>
                        </span>
                        <span style="margin-left:auto">
                            <span class="CollapsedMenu ThemeColor" onclick="expandCollapsedMenu('summary@(post.PostId.Value)', 'button@(post.PostId.Value)')" id="button@(post.PostId.Value)" style="color:#@post.AuthorColor;margin-left: auto; height:auto; width: min-content">
                                @Html.Raw(post.AuthorName)
                            </span>
                        </span>
                        @if (!(CurrentUser.Foes?.Contains(post.AuthorId ?? 1) ?? false))
                        {
                            <span style="margin-left: auto; min-width: max-content; padding-top: 3px; padding-bottom: 30px; margin-top: 4px; margin-bottom: 4px">
                                <a href="javascript:posting.addquote(texts['@post.PostId'], '@post.AuthorName')">&#x1F4AC; Citează</a>
                            </span>
                        }
                    </span>
                    <p>&nbsp;</p>
                    <div style="max-width:100%; overflow-wrap: break-word" id="@post.PostId">
                        <p style="clear:both">
                            @Html.Raw(post.PostText)
                            @foreach (var attachment in post.Attachments)
                            {
                                @await Html.PartialAsync("_AttachmentPartial", attachment, ViewData)
                            }
                        </p>
                    </div>
                </div>
            </div>
            isFirst = false;
        }
    }
}

<script>
    var tribute = new Tribute({
        values: @Html.Raw(_writingService.ToCamelCaseJson(await _cacheService.GetFromCache<List<KeyValuePair<string, string>>>(await Model.GetActualCacheKey("Users", false)))),
        trigger: "@@",
        allowSpaces: true
    });

    tribute.attach(document.getElementById("message"));

    var pollExpiration = document.getElementById("pollExpiration");
    if (pollExpiration) {
        posting.showExpirationDate(pollExpiration.value);
    }
</script>

@if (Model.Action == PostingActions.NewPrivateMessage)
{
    <script>
        var secondTribute = new Tribute({
        values: @Html.Raw(_writingService.ToCamelCaseJson(await _cacheService.GetFromCache<List<KeyValuePair<string, int>>>(await Model.GetActualCacheKey("UserMap", false)))),
        selectTemplate: function(item) {
                return item.original.key;
            },
        allowSpaces: true,
        menuContainer: document.getElementById("tributeHolder"),
        positionMenu: false,
        trigger: ' '
          });
        var authorInput = document.getElementById("pmToInput");

        secondTribute.attach(authorInput);

        authorInput.addEventListener("tribute-replaced", function(e) {
            document.getElementById("pmTo").value = e.detail.item.original.value;
            authorInput.value = e.detail.item.original.key;
        });

        authorInput.addEventListener("focusin", function(e) {
            secondTribute.showMenuForCollection(authorInput);
        });
    </script>
}

<div id="imgcheckstatus" class="Popup"></div>

<div id="formattingHelp" class="MiddleBox" style="display:none">
    <div style="padding: 0px 15px 0px 10px">
        <h4 style="float:left; padding-left:10px; font-weight: bold">Ajutor formatare</h4>
        <div style="float:right; cursor:pointer; font-weight:bold; margin: 10px 0px 10px 0px; padding-right:10px" onclick="showElement('formattingHelp')">Închide [X]</div>
        <p style="clear:both"></p>
    </div>
    <div style="overflow-y:scroll; height: calc(100% - 51px); padding: 0px 10px 0px 10px">
        <div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[b]text bold[/b]</div>
            <div class="FlexRight PostInputWidth">
                <b>text bold</b>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[i]text italic[/i]</div>
            <div class="FlexRight PostInputWidth">
                <i>text italic</i>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[u]text subliniat[/u]</div>
            <div class="FlexRight PostInputWidth">
                <u>text subliniat</u>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[strike]text tăiat[/strike]</div>
            <div class="FlexRight PostInputWidth">
                <s>text tăiat</s>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[size=150]text cu dimensiunea de 150% din cea normală[/size]</div>
            <div class="FlexRight PostInputWidth">
                <span style="font-size:1.5em">text cu dimensiunea de 150% din cea normală</span>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[color=red]text roșu[/color]</div>
            <div class="FlexRight PostInputWidth">
                <span style="color:red">text roșu</span>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[quote]citat[/quote]</div>
            <div class="FlexRight PostInputWidth">
                <blockquote class="PostQuote">citat</blockquote>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[quote=autor]citat[/quote]</div>
            <div class="FlexRight PostInputWidth">
                <blockquote class="PostQuote">
                    <b>autor</b> a scris<br />citat
                </blockquote>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[url] www.metrouusor.com [/url]</div>
            <div class="FlexRight PostInputWidth">
                <a href="https://metrouusor.com">www.metrouusor.com</a>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[url=www.metrouusor.com] Asociația Metrou Ușor [/url]</div>
            <div class="FlexRight PostInputWidth">
                <a href="https://metrouusor.com">Asociația Metrou Ușor</a>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[img]url_imagine[/img]</div>
            <div class="FlexRight PostInputWidth">
                Afişează imaginea din url-ul respectiv.<br />
                Nu sunt permise imaginile găzduite pe imageshack sau photobucket.
                Pentru găzduire externă recomandăm <a href="https://imgur.com">imgur.com</a>.
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter Hide960Flex" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">
                [list]<br />
                [*] elementul unu<br />
                [*] elementul doi<br />
                [/list]
            </div>
            <div class="FlexRight PostInputWidth">
                Efect: o listă simplă<br />
                <ul>
                    <li>elementul unu</li>
                    <li>elementul doi</li>
                </ul>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter Hide960Flex" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">
                [list=a]<br />
                [*] elementul unu<br />
                [*] elementul doi<br />
                [/list]
            </div>
            <div class="FlexRight PostInputWidth">
                Efect: o listă ordonată (list=1 schimbă numerotarea în 1, 2, 3...)<br />
                <ol type="a">
                    <li>elementul unu</li>
                    <li>elementul doi</li>
                </ol>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter Hide960Flex" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[*]</div>
            <div class="FlexRight PostInputWidth">element într-o listă - vezi mai sus</div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter Hide960Flex" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[code]bloc preformatat de cod în chenar de dimensiune fixă[/code]</div>
            <div class="FlexRight PostInputWidth">
                <span class="CodeBlock">bloc preformatat de cod în chenar de dimensiune fixă</span>
            </div>
        </div>
        <hr class="BoxSeparator" /><div class="FlexCenter" style="padding: 15px 0px 15px 15px; align-items:start">
            <div style="margin-right:15px">[youtube]id_video[/youtube]</div>
            <div class="FlexRight PostInputWidth" id="dummy">
                id_video este codul cuprins între „v=” și „&” (dacă există) în adresa video-ului:<br />
                <img src="https://forum.metrouusor.com/download/file.php?id=112751" />
                <br />
                Efect:
                <br />
                <iframe width="560" height="315" src="https://www.youtube.com/embed/Gf7_a2DVl7E?html5=1" frameborder="0" allowfullscreen></iframe>
            </div>
        </div>
    </div>
</div>